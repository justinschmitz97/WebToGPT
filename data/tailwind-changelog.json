[{"summary": "Tailwind CSS v4.0 introduces a high-performance engine, modern web features, simplified installation, and a CSS-first configuration approach. It leverages cutting-edge CSS features, offers automatic content detection, built-in import support, and a modernized color palette. The release also includes new utilities and variants, such as 3D transforms, expanded gradient APIs, and container queries, enhancing flexibility and performance.", "changes": [{"type": "Performance", "title": "New high-performance engine", "description": "Tailwind CSS v4.0 features a rewritten engine that significantly improves build times. Full builds are up to 3.78x faster, and incremental builds are over 8x faster, with some operations completing in microseconds."}, {"type": "Feature", "title": "Modern web design features", "description": "Utilizes modern CSS features like cascade layers, registered custom properties, and color-mix() to enhance styling capabilities and performance."}, {"type": "Feature", "title": "Simplified installation", "description": "Installation is streamlined with fewer dependencies and zero configuration. A single line of CSS is required to start using Tailwind."}, {"type": "Feature", "title": "First-party Vite plugin", "description": "Introduces a Vite plugin for better integration and performance compared to using PostCSS."}, {"type": "Feature", "title": "Automatic content detection", "description": "Automatically detects template files without configuration, ignoring files in .gitignore and binary extensions."}, {"type": "Feature", "title": "Built-in import support", "description": "Handles CSS file imports natively, eliminating the need for additional plugins like postcss-import."}, {"type": "Feature", "title": "CSS-first configuration", "description": "Configuration is now done directly in CSS, removing the need for a separate JavaScript configuration file."}, {"type": "Feature", "title": "CSS theme variables", "description": "Design tokens are exposed as CSS variables, allowing easy access and reuse across styles."}, {"type": "Feature", "title": "Dynamic utility values and variants", "description": "Utilities and variants can accept arbitrary values without configuration, simplifying the creation of grids and targeting custom data attributes."}, {"type": "Feature", "title": "Modernized P3 color palette", "description": "Upgrades the default color palette to oklch, providing more vivid colors by leveraging a wider color gamut."}, {"type": "Feature", "title": "Container queries", "description": "Adds support for container queries, removing the need for the @tailwindcss/container-queries plugin."}, {"type": "Feature", "title": "New 3D transform utilities", "description": "Introduces APIs for 3D transforms, such as rotate-x, rotate-y, scale-z, and translate-z."}, {"type": "Feature", "title": "Expanded gradient APIs", "description": "Enhances gradient capabilities with support for linear gradient angles, interpolation modifiers, and new conic and radial gradient utilities."}, {"type": "Feature", "title": "@starting-style support", "description": "Adds support for the CSS @starting-style feature, enabling transitions for elements when they first appear without JavaScript."}, {"type": "Feature", "title": "not-* variant", "description": "Introduces a not-* variant to support the CSS :not() pseudo-class and negate media and @supports queries."}, {"type": "Feature", "title": "Additional utilities and variants", "description": "Includes new utilities like inset-shadow, field-sizing, color-scheme, font-stretch, and more, expanding the framework's capabilities."}], "source": "https://tailwindcss.com/blog/tailwindcss-v4"},
{"summary": "Tailwind CSS v4.1 introduces new utilities and improvements, including text-shadow utilities, mask utilities, improved browser compatibility, and more. These changes enhance the developer experience by providing more control over styling and compatibility across different devices and browsers.", "changes": [{"type": "Feature", "title": "Text-shadow utilities", "description": "Introduced text-shadow utilities ranging from text-shadow-2xs to text-shadow-lg, allowing developers to add shadows to text. These utilities support color and opacity modifications, enabling effects like embossed text."}, {"type": "Feature", "title": "Mask utilities", "description": "Added mask-* utilities for using images and gradients as masks. These utilities are composable, allowing for complex masking effects with linear, radial, and conic gradients."}, {"type": "Performance", "title": "Improved browser compatibility", "description": "Enhanced compatibility with older browsers by providing framework-specific fallbacks for features like colors, shadows, and gradients, ensuring better rendering on outdated platforms."}, {"type": "Feature", "title": "Overflow-wrap utilities", "description": "Introduced overflow-wrap utilities such as wrap-break-word and wrap-anywhere to control text wrapping within elements, particularly useful for handling long words or URLs."}, {"type": "Feature", "title": "Colored drop-shadow support", "description": "Added support for colored drop shadows with utilities like drop-shadow-indigo-500, allowing for more visually distinct shadow effects."}, {"type": "Feature", "title": "Pointer and any-pointer utilities", "description": "Introduced pointer-fine and pointer-coarse variants to style elements based on the precision of the input device, and any-pointer variants to detect any pointing device."}, {"type": "Feature", "title": "Align items to the last baseline", "description": "New items-baseline-last and self-baseline-last utilities allow alignment of flex or grid items to the baseline of the last line of text."}, {"type": "Feature", "title": "Safe alignment utilities", "description": "Safe alignment utilities adjust alignment to prevent content overflow in both directions, maintaining visibility in flex and grid layouts."}, {"type": "Feature", "title": "Ignore specific paths with @source not", "description": "The @source not directive allows developers to exclude specific paths from being scanned by Tailwind, optimizing build times."}, {"type": "Feature", "title": "Safelist utilities with @source inline", "description": "The @source inline directive forces Tailwind to generate specific class names not present in source files, useful for ensuring certain styles are included."}, {"type": "Feature", "title": "New variants for styling", "description": "Introduced new variants such as details-content, inverted-colors, noscript, user-valid, and user-invalid to enhance styling capabilities based on specific conditions."}], "source": "https://tailwindcss.com/blog/tailwindcss-v4-1"},
{"summary": "Tailwind CSS v4.0 introduces a new high-performance engine, Oxide, designed to enhance speed and simplify the developer experience. This version includes a ground-up rewrite with Rust integration for performance-critical parts, a unified toolchain with built-in CSS processing features, and a CSS-first configuration approach. The release also focuses on modern web standards, composable variants, and zero-configuration content detection.", "changes": [{"type": "Feature", "title": "New High-Performance Engine", "description": "Tailwind CSS v4.0 introduces Oxide, a new engine that is up to 10x faster and 35% smaller. It uses Rust for performance-critical parts and a custom CSS parser for improved speed."}, {"type": "Feature", "title": "Unified Toolchain", "description": "The framework now integrates Lightning CSS directly, eliminating the need for separate CSS pipeline configurations. Features include built-in @import handling, vendor prefixing, and nesting support."}, {"type": "Feature", "title": "Modern Web Standards", "description": "Tailwind CSS v4.0 supports native cascade layers, explicitly defined custom properties, and container queries. It also introduces support for modern CSS features like color-mix and @layer rules."}, {"type": "Feature", "title": "Composable Variants", "description": "The new architecture allows for composing variants like group-*, peer-*, and has-* with other selectors, enhancing flexibility in styling."}, {"type": "Feature", "title": "Zero-Configuration Content Detection", "description": "Tailwind CSS v4.0 automatically detects template files, eliminating the need for manual content path configuration."}, {"type": "Feature", "title": "CSS-First Configuration", "description": "The framework now supports configuration using CSS variables and the @theme directive, allowing for a more native CSS experience."}, {"type": "Breaking Change", "title": "Removed Deprecated Utilities", "description": "Utilities like text-opacity-*, flex-grow-*, and decoration-slice have been removed in favor of modern replacements."}, {"type": "Breaking Change", "title": "Separate PostCSS Plugin and CLI Packages", "description": "The main tailwindcss package no longer includes the PostCSS plugin and CLI, which must be installed separately."}, {"type": "Breaking Change", "title": "Default Border Color Change", "description": "The border utility now defaults to currentColor instead of gray-200 to prevent accidental color mismatches."}, {"type": "Breaking Change", "title": "Default Ring Size Change", "description": "The ring utility now defaults to a 1px ring using currentColor, instead of a 3px blue ring."}], "source": "https://tailwindcss.com/blog/tailwindcss-v4-alpha"},
{"summary": "Tailwind CSS v4.0 Beta 1 introduces a new engine focused on performance and modern web standards, offering faster build times and a unified toolchain. It emphasizes a CSS-first configuration approach and supports modern CSS features.", "changes": [{"type": "Performance", "title": "Improved Build Performance", "description": "The new engine in Tailwind CSS v4.0 offers full builds up to 5x faster and incremental builds over 100x faster, with performance measured in microseconds."}, {"type": "Feature", "title": "Unified Toolchain", "description": "Tailwind CSS v4.0 includes built-in import handling, vendor prefixing, and syntax transforms, eliminating the need for additional tooling."}, {"type": "Feature", "title": "CSS-first Configuration", "description": "Developers can now customize and extend the framework directly in CSS, moving away from a JavaScript configuration file."}, {"type": "Feature", "title": "Modern Web Design", "description": "The framework is built on native cascade layers and wide-gamut colors, with support for modern CSS features like container queries, @starting-style, and popovers."}], "source": "https://tailwindcss.com/blog/tailwindcss-v4-beta"}]