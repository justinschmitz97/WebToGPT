{
  "name": "https://design.gitlab.com",
  "url": "https://https://design.gitlab.com",
  "pages": [
    {
      "url": "https://design.gitlab.com",
      "title": "Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Resources, components, and design guidelines behind GitLab Guidelines, resources, and system behind the brand personality and visual identity of\n            GitLab.Introduction → Foundations, components, patterns, content, and guidelines for building the GitLab UI.Get started → It's our mission to enable everyone to contribute to and co-create the software that\n          powers our world. This includes contributions to the brand, product design, UX, content,\n          and more. Here are a few ways to get started."
        },
        {
          "type": "list",
          "items": ["Issue tracker", "Repository", "Pajamas UI Kit (Figma)"]
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/508",
      "title": "GitLab Accessibility Conformance Report Revised Section 508 Edition | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Based on Version 2.5, November 2023 (template)"
        },
        {
          "type": "list",
          "items": [
            "Name of Product/Version:GitLab Enterprise Edition Premium version 17.0",
            "Report Date:Revised June, 2024",
            "Product Description:From project planning and source code management to CI/CD and monitoring, GitLab is a single application forthe entire DevOps lifecycle.",
            "Contact information:ux@gitlab.com",
            "Notes:This evaluation only refers to GitLab the product and does not include theabout.gitlab.comordocs.gitlab.comwebsites.The latest revision evaluates whether or not previous findings are still valid as of GitLab Enterprise Edition Premium version 17.0, but does not provide new evaluations. New success criteria from the VPAT 2.5 template have also been added. This revision supersedes earlier versions of this report.Table 3: Success Criteria, Level AAAhas been removed because the GitLab product has not been evaluated for WCAG 2.0 Level AAA conformance.Chapter 4: Hardwarehas been removed because the GitLab product is a web application and is not subject to the requirements of this section.GitLab supports the current and previous major version along with current minor version of the following browsers: Mozilla Firefox, Google Chrome, Chromium, Apple Safari, Microsoft Edge.GitLab does not support running with JavaScript disabled in the browser because several features require JavaScript extensively.ViewGitLab installation minimum requirementsfor both the supported operating systems and the minimum requirements needed to install and use GitLab.Known accessibility issues are linked in the tables below and may also be found by searchingGitLab.com(account required).",
            "This evaluation only refers to GitLab the product and does not include theabout.gitlab.comordocs.gitlab.comwebsites.",
            "The latest revision evaluates whether or not previous findings are still valid as of GitLab Enterprise Edition Premium version 17.0, but does not provide new evaluations. New success criteria from the VPAT 2.5 template have also been added. This revision supersedes earlier versions of this report.",
            "Table 3: Success Criteria, Level AAAhas been removed because the GitLab product has not been evaluated for WCAG 2.0 Level AAA conformance.",
            "Chapter 4: Hardwarehas been removed because the GitLab product is a web application and is not subject to the requirements of this section.",
            "GitLab supports the current and previous major version along with current minor version of the following browsers: Mozilla Firefox, Google Chrome, Chromium, Apple Safari, Microsoft Edge.",
            "GitLab does not support running with JavaScript disabled in the browser because several features require JavaScript extensively.",
            "ViewGitLab installation minimum requirementsfor both the supported operating systems and the minimum requirements needed to install and use GitLab.",
            "Known accessibility issues are linked in the tables below and may also be found by searchingGitLab.com(account required).",
            "Evaluation Methods Used:Conformance to the listed accessibility standards has been evaluated by GitLab using a combination of analysis tools and manual testing with assistive technologies. These tools include, but are not limited to:axe DevTools®,Lighthouse,NVDA, and VoiceOver on macOS."
          ]
        },
        {
          "type": "p",
          "text": "This report covers the degree of conformance for the following accessibility standard/guidelines:"
        },
        {
          "type": "list",
          "items": ["Level A (Yes)", "Level AA (Yes)", "Level AAA (No)"]
        },
        {
          "type": "p",
          "text": "The terms used in the Conformance Level information are defined as follows:"
        },
        {
          "type": "list",
          "items": [
            "Supports:The functionality of the product has at least one method that meets the criterion without known defects or meets with equivalent facilitation.",
            "Partially Supports:Some functionality of the product does not meet the criterion.",
            "Does Not Support:The majority of product functionality does not meet the criterion.",
            "Not Applicable:The criterion is not relevant to the product.",
            "Not Evaluated:The product has not been evaluated against the criterion. This can only be used in WCAG Level AAA criteria."
          ]
        },
        {
          "type": "p",
          "text": "Tables 1 and 2 also document conformance with Revised Section 508:"
        },
        {
          "type": "list",
          "items": [
            "Chapter 5 – 501.1 Scope, 504.2 Content Creation or Editing",
            "Chapter 6 – 602.3 Electronic Support Documentation"
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product has many instances where non-text content does not have a text alternative."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the&567and&564epics and will continue to be addressed."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not include prerecorded audio-only or video-only media."
        },
        {
          "type": "list",
          "items": [
            "A user can upload their own media and include alternative content, such as a text transcript by usingGitLab Flavored Markdown.",
            "There is no mechanism to verify that the user is including alternative content, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not include synchronized media."
        },
        {
          "type": "list",
          "items": [
            "User generated media that includes open captions can be linked to withGitLab Flavored Markdown.",
            "There is no mechanism to add captions to user generated media content, or to verify that the user is including captions, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not include prerecorded or synchronized media."
        },
        {
          "type": "list",
          "items": [
            "User generated media content can include alternative media in text form by adding it withGitLab Flavored Markdown.",
            "There is no mechanism to verify that the user is including alternative content, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product has many instances where information, structure, and relationships can not be programmatically determined."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the&567epic and will continue to be addressed.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product content is presented in a way that can be sequentially or programmatically determined."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not depend solely on sensory characteristics such as shape, size, visual location, orientation, or sound to understand content."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not primarily use colors as the only visual means of conveying information with the exception of some text links."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the#1084issue.",
            "Until we ensure all text links are updated, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not include auto-playing audio or provide the ability for user generated audio to automatically play."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product has many instances of content that is not operable through a keyboard."
        },
        {
          "type": "list",
          "items": [
            "Know instances are tracked in the&565epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "In most instances a user can move focus away from a focused element using only the keyboard."
        },
        {
          "type": "list",
          "items": [
            "Known instances where a user cannot navigate away from focused file editors are tracked in the&627epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product allows administrators to adjust any timeout functionality."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not include any moving, blinking, or scrolling content that lasts for more than 5 seconds. Information that is auto-updated is essential for showing correct status."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not use flashing interface elements that flash more than three times within a 1 second period, with the exception of user generated media which may contain flickering."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software) – Does not apply to non-web software",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs) – Does not apply to non-web docs"
          ]
        },
        {
          "type": "p",
          "text": "The product provides an option to bypass the repeated navigation on each page by hitting tab on page load."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "Each page of the product includes a title that describes the topic or purpose."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product uses a logical tab order and in most instances consistent keyboard keys are used to perform actions."
        },
        {
          "type": "list",
          "items": [
            "Some components use inconsistent or non-normative keyboard controls, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product includes the purpose of most links."
        },
        {
          "type": "list",
          "items": [
            "Known instances of unclear product links are tracked in the&620epic.",
            "A user can add a link withGitLab Flavored Markdown, however, there is no mechanism to verify that the user has made a link's purpose clear. Therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product uses the language attribute on the HTML element to specify the default language of a page."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not initiate a change of context when a component receives focus."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not initiate a change of context when a value setting is changed unless specified by the actionable area."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "In most instances, the product describes input errors to the user and identifies which item the error originated from."
        },
        {
          "type": "list",
          "items": [
            "Known instances where the identification and description of an error is not always combined programmatically to help assistive technologies to identify an error are tracked in the&7341epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product ensures that most labels or instructions are provided for inputs."
        },
        {
          "type": "list",
          "items": [
            "Known instances where a label is not present are tracked in the&621epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "For WCAG 2.0 and the 508 standards, the September 2023 errata update indicates this criterion is always supported. See theWCAG 2.0 Editorial Errata."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product has many instances where the name, role, or value cannot be programmatically determined or set."
        },
        {
          "type": "list",
          "items": [
            "Know instances are tracked in the&567epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "This criterion is not relevant because the product does not support live media."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product does not include synchronized media."
        },
        {
          "type": "list",
          "items": [
            "User generated videos may include audio descriptions and be linked withGitLab Flavored Markdown.",
            "There is no mechanism to include audio descriptions, or to verify that the user is including audio descriptions, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product has some instances where the contrast ratio of text (enabled) is not at least 4.5:1."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the&562epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "In most instances the product supports the use of standard zoom capabilities built into modern web browsers."
        },
        {
          "type": "list",
          "items": [
            "Known instances where text is clipped or inaccessible when zoomed are tracked in the&563epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product may include decorative images or illustrations that contain text."
        },
        {
          "type": "list",
          "items": [
            "An image of text may be added in user generated content withGitLab Flavored Markdownand there is the capability to add alternative text.",
            "Known instances are tracked in the&10943epic.",
            "There is no mechanism to verify that the user has included alternative text, or that if included, it's accurate. Therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software) – Does not apply to non-web software",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs) – Does not apply to non-web docs"
          ]
        },
        {
          "type": "p",
          "text": "The product provides multiple ways to locate and navigate to a page."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product uses descriptive headings and labels to describe the purpose or topic on a page."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product uses visual changes to elements to indicate the current focus position."
        },
        {
          "type": "list",
          "items": [
            "There are instances where a state change happens but does not include a visible focus indicator.",
            "There are other instances where the default browser focus ring is present and may lack sufficient contrast.",
            "Until an assessment can be completed to determine the impact, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product uses the language attribute on the HTML element to specify the default language of a page."
        },
        {
          "type": "list",
          "items": [
            "There is no mechanism to specify different languages for subsets of a page. For example, if a user were to enter a comment in a different language, therefore, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software) – Does not apply to non-web software",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs) – Does not apply to non-web docs"
          ]
        },
        {
          "type": "p",
          "text": "The product consistently repeats navigation controls across pages."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software) – Does not apply to non-web software",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs) – Does not apply to non-web docs"
          ]
        },
        {
          "type": "p",
          "text": "The product uses components that have consistent functionality across pages."
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "In most instances the product provides suggestion for how to mitigate input errors."
        },
        {
          "type": "list",
          "items": [
            "Known instances where error remedies are not provided or are not programmatically associated to help assistive technologies are tracked in the&7341epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "list",
          "items": [
            "501 (Web)(Software)",
            "504.2 (Authoring Tool)",
            "602.3 (Support Docs)"
          ]
        },
        {
          "type": "p",
          "text": "The product ensure that when legal commitments or financial transactions occur users have the ability to correct validated input errors, review and confirm submission prior to submitting data, or reverse the submission. The product uses standard coding in order to support assistive technology."
        },
        {
          "type": "list",
          "items": [
            "SeeWCAG 2.0section for more information on why we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product does not override any built-in screen magnification provided by the browser or assistive device."
        },
        {
          "type": "list",
          "items": [
            "SeeWCAG 2.0section for more information on why we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product does not primarily use colors as the only visual means of conveying information with the exception of some text links."
        },
        {
          "type": "list",
          "items": [
            "SeeWCAG 2.0section for more information on why we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "This criterion is not relevant because the product does not include audio-only features that require hearing to be used. This criterion is not relevant because the product does not include audio-only features that require hearing to be used. This criterion is not relevant because the product does not require speech for any functionality. The product does not fully depend on fine motor skills."
        },
        {
          "type": "list",
          "items": [
            "There are exceptions in the case of drag and drop functionality tracked in the&635epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product does not depend on reach or strength. The product provides accessibility features that make  its use by individuals with limited language, cognitive, and learning abilities simpler and easier. Notes: The GitLab product is a web application and is not subject to the requirements of this section. See information in WCAG section Heading cell – no response required This criterion is not relevant because the product is not platform software. The product is compatible with operating system and browser accessibility features configured by the user. Heading cell – no response required See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section See information in WCAG section This criterion is not relevant because the product is not a platform. Heading cell – no response required This criterion is not relevant because the product is isolated from the underlying platform. This criterion is not relevant because the product does not have assistive technology features. Heading cell – no response required See information in WCAG section See information in WCAG section Heading cell – no response required See information in WCAG section This criterion is not relevant because the product does not support file conversion or saving to multiple formats. This criterion is not relevant because the product does not support export of PDF files. There is no mechanism or prompt for a user or to verify that they are including helpful alternative content in markdown, therefore, we classify this as partially supports. When including media in markdown, however, there is a prepopulated location where accessible alternative text or description can be added. This criterion is not relevant because the product does not provide templates. Users create their own templates. Heading cell – no response required Heading cell – no response required The product documentation describes shortcut keys and workarounds. See information in WCAG section This criterion is not applicable because the product documentation is in electronic format. Heading cell – no response required GitLab Support can provide information about accessibility features of the product. GitLab customers have access to electronic support. GitLab will provide support in any manner to accommodate the needs of users with disabilities. This document is provided for information purposes only and the contents hereof are subject to change without notice. GitLab does not warrant that this document is error-free, nor does it provide any other warranties or conditions, whether expressed orally or implied in law, including implied warranties and conditions of merchantability or fitness for a particular purpose. GitLab specifically disclaims any liability with respect to this document and no contractual obligations are formed either directly or indirectly by this document. GitLab further makes no representation concerning the ability of assistive technologies or other products to interoperate with GitLab products. This document addresses the named product(s) only and not prerequisite products for which GitLab supplies restricted use licenses. Last updated at:Friday, June 21, 2024 at 3:00 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/a11y",
      "title": "Statement of compliance | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "GitLab is committed to maintaining an accessible product to the widest possible\naudience. We are actively working to increase the accessibility and usability of\nour product. GitLab is conformant with theVoluntary Product Accessibility Template (VPAT®) 2.4revised in June 2023. This assessment aligns with theGitLab Enterprise Edition Premium version 16.0. For GitLab.com, this only includes the SaaS product and not other pages found on the GitLab.com domain. We aim to conform to level AA of the World Wide Web Consortium (W3C)Web Content Accessibility Guidelines 2.1. The\nproduct has been built using code compliant with W3C standards for HTML and CSS. GitLab strives to be compliant with the accepted standards and guidelines for\naccessibility. Should you experience any issues of concern, please help us byfiling an issue. Last updated at:Wednesday, May 15, 2024 at 6:04 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/acr",
      "title": "GitLab accessibility conformance reports | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Reports"
        },
        {
          "type": "list",
          "items": [
            "GitLab Accessibility Conformance Report Revised Section 508 Edition",
            "GitLab Accessibility Conformance Report WCAG Edition"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:22 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/best-practices",
      "title": "Best practices | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "If reviewing a merge request, take a few moments to review the following:"
        },
        {
          "type": "list",
          "items": [
            "All actions and functionality can be done with akeyboard.",
            "Links, buttons, and controls have a visiblefocus state.",
            "All content is presented in text or with a text equivalent. For example, alt text for SVG, oraria-labelfor icons that have meaning or perform actions.",
            "Changes in a component’s state are announced by a screen reader. For example, changingaria-expanded=\"false\"toaria-expanded=\"true\"when an accordion is expanded.",
            "Color combinations havesufficient contrast."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/evaluation",
      "title": "Overview | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "At GitLab we believe that everyone can contribute, and part of delivering on that promise is ensuring accessible experiences. While many accessibility issues can be determined with automated tools, most require manual testing and validation. Over time, the number of accessibility tests that can be automated is increasing, but manual testing is still required to evaluate most methods at this time.WCAG 3.0 5.3.1 Atomic tests The following guides aren’t a replacement for thorough manual audits or user testing, instead they’re designed to help you become more familiar with uncovering and remedying common issues from different perspectives."
        },
        {
          "type": "list",
          "items": [
            "Visual",
            "Semantics and content (coming soon)",
            "Keyboard-only",
            "Screen readers (coming soon)"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 20, 2023 at 5:39 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/inclusive-design-principles",
      "title": "Inclusive design principles | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "We aim to provide access to content and functionality that enables consumption and contribution for everyone. In support ofour missionandvalueswe've included the Inclusive Design Principles frominclusivedesignprinciples.infohere as a reference to help inform our work and process. These Inclusive Design Principles are about putting people first. It's about designing for the needs of people with permanent, temporary, situational, or changing disabilities — all of us really. In combination with ourproduct principles, thoughtful consideration of the following will yield actionable requirements, meaningful constraints, helpful insights, and attainable goals that benefit the experience at hand for all users. There's overlap in how they're applied, and that's intentional, by approaching an experience from multiple angles we can only make the resulting experience more robust and accessible for all users. Ensure your interface provides a comparable experience for all so people can accomplish tasks in a way that suits their needs without undermining the quality of the content. Content that is available visually should also be available programmatically. Some content may need to be available in multiple formats, like a text transcript of a video, so that it can be available for different tools and preferences. People use your interface in different situations. Make sure your interface delivers a valuable experience to people regardless of their circumstances. It's important to consider everything from environment and physical conditions to product and technological familiarity. When we apply situational awareness we can better understand the impact of our decisions. Use familiar conventions and apply them consistently. Being consistent can include things like using a design system, placement of navigation, and leveraging familiar heuristics. Consistency is not the same thing as uniformity.Jakob’s Lawstates that “Users spend most of their time on other sites. This means that users prefer your site to work the same way as all the other sites they already know. Design for patterns for which users are accustomed.” Ensure people are in control. People should be able to access and interact with content in their preferred way. The features that browsers and devices offer that allow a user to change and modify preferences shouldn't be suppressed. Likewise, some features, like animation or other motion, should be able to be stopped or controlled by a user. Consider providing different ways for people to complete tasks, especially those that are complex or non-standard. Offering choice is aboutaccess, not options or feature bloat. For example, drag-and-drop can also be done with a keyboard, or a grid of items can also be viewed as a list. Per ourconvention over configurationproduct principle, \"we believe however that more options are not necessarily better, and that our users are better served by an application with reduced complexity yet still contains the features they need.\" Help users focus on core tasks, features, and information by prioritizing them within the content and layout. Leveraging things like page layout, visual weight, and semantics leads to a more meaningful and actionable experience. Consider the value of features and how they improve the experience for different users. Of course, all of these principles in and of themselves add value, but we can also add value by leveraging device capabilities or removing friction points throughout an experience. Even our concept of theMinimal Valuable Changeis designed to \"deliver the smallest possible solution that offers value to our users.\" Do a little and do it well, for as many people as you can. – Heydon Pickering"
        },
        {
          "type": "list",
          "items": [
            "inclusivedesignprinciples.info",
            "GitLab product principles",
            "Accessibility Fundamentals Overview",
            "Inclusive Designfrom Microsoft",
            "Government Design Principlesfrom GOV.UK"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, October 11, 2024 at 6:55 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/keyboard-only",
      "title": "Keyboard-only | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Principle:All interactive elements can be accessed by keyboard alone. Using a keyboard is a fundamental aspect of accessibility. In fact, many other technologies and hardware emulate keyboard functionality. Users with a wide range of disabilities — or no disability at all — rely on a keyboard. When testing, keep in mind that all interactive elements should be accessible with the keyboard. Sections"
        },
        {
          "type": "list",
          "items": [
            "Keyboarding basics",
            "Focus order",
            "Focus states",
            "Keyboard traps",
            "Skip links",
            "Resources"
          ]
        },
        {
          "type": "list",
          "items": [
            "Use theTabkey to navigate in a linear direction through focusable elements like links, form controls, and buttons.",
            "TheEnterkey (and sometimesSpace) selects an element.",
            "Arrow keys are used to move within certain elements, element groups, and widgets. For example, within formselectelements, radio button groups, and a set of tabs.",
            "For a more comprehensive list of actions, review this table ofcommon keyboard interactions."
          ]
        },
        {
          "type": "p",
          "text": "If you're testing in Safari or Firefox in macOS, you'll likely have to update a few settings so that all focusable elements can receive focus; details below. Theresourcessection contains additional links with more details on enabling keyboard navigation for focusable elements. For Firefox:"
        },
        {
          "type": "list",
          "items": [
            "Go toSystem Preferences > Keyboard > Shortcuts.",
            "Check the \"Use keyboard navigation to move focus between controls\" option."
          ]
        },
        {
          "type": "p",
          "text": "For Safari:"
        },
        {
          "type": "list",
          "items": [
            "OpenPreferences > Advanced.",
            "Check the \"Press Tab to highlight each item on a webpage\" option."
          ]
        },
        {
          "type": "p",
          "text": "The focus order is the sequence that a keyboard user tabs through focusable elements. In most cases the focus order and DOM order should be the same. Visually reordering elements with CSS, such as with floats, flexbox, or grid, can be problematic for focus order, so ensure content makes sense both visually and linearly in the markup. To learn more about what elements should be focusable by default read thisIntroduction to Focus. Some HTML elements, like form elements and buttons, receive focus by default because they have native event handling. In these cases nothing has to be done for them to be in the focus order. That being said, it’s possible to use thetabindexattribute to make elements focusable."
        },
        {
          "type": "list",
          "items": [
            "tabindex=\"-1\": This makes an element programmatically focusable, but doesn’t include it in the tab order.",
            "tabindex=\"0\": This inserts and element into the focus order in the order of the DOM.",
            "tabindex=\"1\"+: This adds a higher focus priority and isn’t recommended due to a negative cascading effect"
          ]
        },
        {
          "type": "list",
          "items": [
            "Only interactive elements are focusable, not static content.",
            "Focus order follows the DOM order and reading order.",
            "When a navigational menu is in an expanded state that reveals more links, the focus should move through those links before moving on.",
            "For widgets such as assignee dropdowns:Its popup element appears either on focus, or when pressingEnter,Space, or↓.The arrow keys move focus within the widget.Enteraccepts the selected value and optionally closes the popup. Focus remains on the widget.Esccloses the popup and focus remains on the widget.Tableaves the widget and focus moves to the next interactive element or widget.Tabshould not move focus within a widget since widgets are treated as a single interactive element.",
            "Its popup element appears either on focus, or when pressingEnter,Space, or↓.",
            "The arrow keys move focus within the widget.",
            "Enteraccepts the selected value and optionally closes the popup. Focus remains on the widget.",
            "Esccloses the popup and focus remains on the widget.",
            "Tableaves the widget and focus moves to the next interactive element or widget.Tabshould not move focus within a widget since widgets are treated as a single interactive element.",
            "The focus order of a page should complete a loop and return back to the browser’s address bar."
          ]
        },
        {
          "type": "list",
          "items": [
            "The focus order bounces around the page or doesn’t follow the expected reading flow.Inspect the DOM order to determine what the linear content flow is.If there are no issues with the DOM order, inspect the CSS to see if floats, flexbox, or grid are visually reordering elements.If the DOM order and CSS don’t seem to be impacting the flow, check to see if any elements havetabindexset to a value of1or higher.",
            "Inspect the DOM order to determine what the linear content flow is.",
            "If there are no issues with the DOM order, inspect the CSS to see if floats, flexbox, or grid are visually reordering elements.",
            "If the DOM order and CSS don’t seem to be impacting the flow, check to see if any elements havetabindexset to a value of1or higher.",
            "An element receives focus, but shouldn’t.Check to see if the element has thetabindexattribute and it’s set to0or higher.",
            "Check to see if the element has thetabindexattribute and it’s set to0or higher.",
            "An element doesn’t receive focus, but should.It’s possible that focus is received, but a visible focus state is missing, see the section onFocus Statesfor more.If the element is custom, or not one that natively receives focus it should havetabindexset to0.",
            "It’s possible that focus is received, but a visible focus state is missing, see the section onFocus Statesfor more.",
            "If the element is custom, or not one that natively receives focus it should havetabindexset to0.",
            "Focus gets trapped somewhere in the page and can’t complete a loop back to the browser’s address bar.See the section onKeyboard Traps.",
            "See the section onKeyboard Traps.",
            "Focus seems to disappear when tabbing.Elements that are visually hidden, like a mobile menu in a desktop view, can still receive focus if they don’t use a method which also removes them from the focus order. Use an extension, likeNerdeFocusfor Chrome, to reveal where focus is being placed.In CSS,display: none;orvisibility: hidden;are good ways to remove focus. The element could also have thetabindex=\"-1\"or hidden attributes added.",
            "Elements that are visually hidden, like a mobile menu in a desktop view, can still receive focus if they don’t use a method which also removes them from the focus order. Use an extension, likeNerdeFocusfor Chrome, to reveal where focus is being placed.",
            "In CSS,display: none;orvisibility: hidden;are good ways to remove focus. The element could also have thetabindex=\"-1\"or hidden attributes added."
          ]
        },
        {
          "type": "p",
          "text": "Every focusable element must have a visible focus state for keyboard navigation. Typically a focused element has a stronger border, glow, or shadow to highlight it. Browsers provide a focus ring by default, but this can be removed or enhanced with CSS. When an element receives focus with the keyboard, it’s visually distinct from both its other states and other elements. An element has focus, but there’s no visual indication."
        },
        {
          "type": "list",
          "items": [
            "Inspect the CSS to see ifoutlineis set tononewithout adding styles to the:focusstate.",
            "A utility likeWhat Input?can detect the input method (mouse, keyboard, or touch) and provide ways to change focus styles based on the input method. Make sure you’re using a keyboard for the input method and that no utilities are interfering with the styles."
          ]
        },
        {
          "type": "p",
          "text": "A keyboard trap keeps the focus order looping within a section. A modal, for example, uses a keyboard trap to prevent a user from focusing on content elsewhere in the page — content that could even be hidden by the modal itself. There should never be a keyboard trap that a user can’t get out of."
        },
        {
          "type": "list",
          "items": [
            "After encountering a keyboard trap a user should be able to “untrap” the focus with theEsckey, a close button, or other action that navigates the user away from the current experience.",
            "When the user exits the keyboard trap (without page reload or navigating away) the focus should return to the previously focused element, usually the one that triggered the keyboard trap in the first place."
          ]
        },
        {
          "type": "list",
          "items": [
            "An element like a modal or dialog that overlays other content is activated, but the focus can leave that element, and even focus on items covered by it.A keyboard trap should be created and controls should exist to close the element and return focus to its previous location.",
            "A keyboard trap should be created and controls should exist to close the element and return focus to its previous location.",
            "An item that should be a keyboard trap never receives focus.Custom elements should havetabindex=\"-1\"set and focus should be programmatically placed in them from the triggering element.",
            "Custom elements should havetabindex=\"-1\"set and focus should be programmatically placed in them from the triggering element."
          ]
        },
        {
          "type": "p",
          "text": "Skip links are anchor links placed before a section that allow a user to bypass blocks of repeating page sections (typically navigation), and \"skip\" to the main content. They’re typically not visible until they receive focus, and then they’re visible for all users."
        },
        {
          "type": "list",
          "items": [
            "A skip link is typically the first focusable item on the page and should take a user to the main content area.",
            "Skip links should be minimally used, if multiple are present there may be other navigation or content issues."
          ]
        },
        {
          "type": "list",
          "items": [
            "NerdeFocus- Chrome extension to reveal where focus is placed with an option to record the focus order.",
            "ChomeLens- Chrome extension for accessibility testing that includes a “Trace tab path” feature that traces the focus order with an option to download an image of the results.",
            "“Skip Navigation” Links- A comprehensive article about skip links.",
            "Controlling focus with tabindex — A11ycasts #04- Learn how to add keyboard support for custom elements.",
            "Roving tabindex — A11ycasts #06- Learn how to add deep keyboard support for custom controls.",
            "No, tabbing is not broken. Yes, I was confused too.- Learn how to enable full keyboard navigation for focusable elements in macOS Safari and Firefox.",
            "Browser keyboard navigation in macOS- Learn how to enable full keyboard navigation for focusable elements in macOS Safari and Firefox."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, February 15, 2023 at 3:32 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/screen-readers",
      "title": "Screen readers | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Coming soon Last updated at:Tuesday, November 15, 2022 at 10:55 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/semantics-and-content",
      "title": "Semantics and content | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Coming soon Last updated at:Tuesday, November 15, 2022 at 10:55 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/visual",
      "title": "Visual | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Principle: Page elements are distinguishable, the flow is logical, and the content is adaptable. Appearance and visual design aren't always subjective, and as it relates to accessibility there are many ways to measure the effectiveness of attributes like color, statefulness, hierarchy, and more. Sections"
        },
        {
          "type": "list",
          "items": [
            "Visual disabilities",
            "Color",
            "Page flow",
            "Resizing",
            "Resources"
          ]
        },
        {
          "type": "p",
          "text": "Visual disabilities are diverse and can includeblindness, low-vision, and color blindness. It's important to go beyond our own experience when designing or evaluating design, to provide more robust interfaces that can adapt to people's needs and customizations such as increased text size, increased zoom level, and high-contrast modes. In his article,Automated Lies, with one line of code, Karl Groves states that \"By volume, insufficient color contrast is the most common accessibility issue on the Web.\" In addition to being one of the most common issues, it can be one of the most straightforward to address. But contrast is only aspect to cover, we also need to consider how color communicates meaning, and how a consistent use of color benefits accessibility. An evaluation of color contrast includes text, images of text used as meaningful content, and graphics used for interaction or as meaningful content (non-decorative). Contrast ratios can be calculated with a wide variety of tools some of which are listed in theresourcesbelow. To satisfyWCAG 2.1 SC 1.4.3 Contrast (Minimum) (Level AA)text content needs a contrast ratio of:"
        },
        {
          "type": "list",
          "items": [
            "4.5:1between text and background",
            "3:1for 18pt and larger, or 14pt bold and larger text and background."
          ]
        },
        {
          "type": "p",
          "text": "WCAG uses points instead of pixels when referencing text size, noted inWCAG 2.1 Understanding Docs: The ratio between sizes in points and CSS pixels is 1pt = 1.333px, therefore 14pt and 18pt are equivalent to approximately 18.5px and 24px. Graphics like icons, illustrations, charts, and other non-text interactive elements only need a3:1contrast ratio against the background or sibling elements to satisfyWCAG 2.1 SC 1.4.11 Non-text Contrast (Level AA). Even if a graphic is used as decoration, it should have enough contrast to be distinguished from surrounding content, and any meaningful details within a graphic should be distinguished from surrounding elements. Read thedata visualization color guidelinesfor more information about the use of color for data visualization. In some instances, contrast must be checked in more than one way. Take a button for example, the button text must have at least a4.5:1contrast ratio with the button background at all states, and the button background should have at least a3:1contrast ratio with the background when the background is necessary for understanding the bounds of the control or to distinguish it from surrounding elements. Similarly, linked text that isn't underlined (or distinguished in a similar way) must have at least a3:1contrast ratio with surrounding textandat least a4.5:1contrast ratio with the background. Logos and text in logos are an exception to the contrast criteria, but when in our control we also aim for at least a3:1contrast ratio. Color doesn't always have to be associated with meaning, but when it is it can't be the only means of conveying the meaning. For example, a red border on an invalid form field is insufficient by itself to indicate an error, but if error text and even an error icon is present, then the red border isn't the only way the error is communicated. Likewise, an icon that only changes color to indicate a status is insufficient, but if the icon itself were to change, or it was paired with a clear text message, then color alone isn't being relied on. Not all users discern colors in the same way, so it's imperative that color is used to enhance meaning along with other elements. Color shouldn't be used as the only means of conveying the meaning of content. For example, a red border on an invalid form field is insufficient by itself to indicate an error. If accompanied by error text and an error icon, then the red border isn't the only way the error is communicated. Likewise, an icon that only changes color to indicate a status is insufficient. If the icon itself were to change, or it is paired with a meaningful text, then color alone isn't being relied on. Not all users discern colors in the same way, so it's imperative that color is used to enhance meaning along with other elements. Refer to theWCAG SC 1.4.1 Use of Color (Level A)docs for more information. A consistent use of color will help a user identify interactive, status, or other feedback patterns across a site. For example, blue is used for interactive elements like buttons and links, while green is used when a task is successful."
        },
        {
          "type": "list",
          "items": [
            "All text must have a contrast ratio of 4.5:1 or higher.",
            "All text states (hover, focus, and active) must have a 4.5:1 contrast ratio. The exception is disabled states, and for those we aim to have a contrast ratio of 3:1 even though as of WCAG 2.1 there isn't a specific criteria to satisfy.",
            "Even though logos don't need to meet the contrast ratio, they should have appropriatealttext. If possible though, it's better when a logo is legible and easily distinguished from its surroundings.",
            "Decorative text that conveys no information is excluded. For example, words that form a graphical pattern or that are part of a larger illustration where they are inconsequential.",
            "Color can not be the only attribute that conveys meaning.",
            "TheUI color paletteis used consistently and aligns with prescribed meanings."
          ]
        },
        {
          "type": "p",
          "text": "A page should have a logical flow that provides visual cues for hierarchy and content sectioning. The use of visual weight and spacing increases scannability and enhances relationships. As much as possible, the natural reading order and DOM order should align, which benefits a keyboard-only or screen reader user. Responsive behavior shouldn't alter the flow or hierarchy."
        },
        {
          "type": "list",
          "items": [
            "Headings help logically structure a page by providing visual hierarchy and meaningful sections.",
            "The reading order is closely aligned with the DOM order. If there was no CSS or visual cues, would the content make sense in the current order?",
            "Dynamic content, like alerts, feedback, or loading states make sense in the page hierarchy and don't unnecessarily break the flow.",
            "Content reflows predictably when responsive.",
            "If text references other page elements based on location, it must make sense responsively. For example, if the text says \"reference the status table to the right,\" but in a smaller viewport the table is below, then the text should be more general."
          ]
        },
        {
          "type": "p",
          "text": "Text scaling is a capability that many users take advantage of either through browser or system settings. In fact, perWCAG SC 1.4.4 Resize Text (Level AA)a user should be able to resize text \"up to 200 percent without loss of content or functionality.\" This doesn't apply to images of text or captions used as alternate media for video or audio."
        },
        {
          "type": "list",
          "items": [
            "If a user updated a system setting to increase text size, all text content should be readable and available up to 200 percent.Text that truncates should still easily be available in it's full form regardless of modality (mouse, keyboard, touch).Text should reflow appropriately and be legible, scrollable, and not have any loss in function or impede the legibility or function of other elements.",
            "Text that truncates should still easily be available in it's full form regardless of modality (mouse, keyboard, touch).",
            "Text should reflow appropriately and be legible, scrollable, and not have any loss in function or impede the legibility or function of other elements.",
            "System and browser settings are different, however, the above also applies when a user has updated browser settings to increase text or UI size up to 200 percent.",
            "The above is true regardless of translation."
          ]
        },
        {
          "type": "list",
          "items": [
            "Supporting the Design Phase with Accessibility Heuristics Evaluations- Article from Denis Boudreau of Deque that outlines ten accessibility heuristics that can be applied during the design process along with a helpful checklist (PDF).",
            "Colour Contrast Analyzer (CCA)- TPGi's free colour contrast checker app for Windows or Mac.",
            "ColorSlurp- Color picker app with accessibility and palette features.",
            "Link Contrast Checker- A tool from WebAIM to check contrast between link color and surrounding text, and link color and background.",
            "Axe for Designers- A Figma plugin from Deque to check contrast and more.",
            "Sim Daltonism- A color blindness simulator app for iOS and Mac.",
            "Additional resources can be found in the Color section of theAccessibility Cache."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/accessibility/wcag",
      "title": "GitLab Accessibility Conformance Report WCAG Edition | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Based on Version 2.5, November 2023 (template)"
        },
        {
          "type": "list",
          "items": [
            "Name of Product/Version:GitLab Enterprise Edition Premium version 17.0",
            "Report Date:Revised June, 2024",
            "Product Description:From project planning and source code management to CI/CD and monitoring, GitLab is a single application forthe entire DevOps lifecycle.",
            "Contact information:ux@gitlab.com",
            "Notes:This evaluation only refers to GitLab the product and does not include theabout.gitlab.comordocs.gitlab.comwebsites.The latest revision evaluates whether or not previous findings are still valid as of GitLab Enterprise Edition Premium version 17.0, but does not provide new evaluations. New success criteria from the VPAT 2.5 template have also been added. This revision supersedes earlier versions of this report.Table 3: Success Criteria, Level AAAhas been removed because the GitLab product has not been evaluated for WCAG 2.2 Level AAA conformance.GitLab supports the current and previous major version along with current minor version of the following browsers: Mozilla Firefox, Google Chrome, Chromium, Apple Safari, Microsoft Edge.GitLab does not support running with JavaScript disabled in the browser because several features require JavaScript extensively.ViewGitLab installation minimum requirementsfor both the supported operating systems and the minimum requirements needed to install and use GitLab.Known accessibility issues are linked in the tables below and may also be found by searchingGitLab.com(account required).",
            "This evaluation only refers to GitLab the product and does not include theabout.gitlab.comordocs.gitlab.comwebsites.",
            "The latest revision evaluates whether or not previous findings are still valid as of GitLab Enterprise Edition Premium version 17.0, but does not provide new evaluations. New success criteria from the VPAT 2.5 template have also been added. This revision supersedes earlier versions of this report.",
            "Table 3: Success Criteria, Level AAAhas been removed because the GitLab product has not been evaluated for WCAG 2.2 Level AAA conformance.",
            "GitLab supports the current and previous major version along with current minor version of the following browsers: Mozilla Firefox, Google Chrome, Chromium, Apple Safari, Microsoft Edge.",
            "GitLab does not support running with JavaScript disabled in the browser because several features require JavaScript extensively.",
            "ViewGitLab installation minimum requirementsfor both the supported operating systems and the minimum requirements needed to install and use GitLab.",
            "Known accessibility issues are linked in the tables below and may also be found by searchingGitLab.com(account required).",
            "Evaluation Methods Used:Conformance to the listed accessibility standards has been evaluated by GitLab using a combination of analysis tools and manual testing with assistive technologies. These tools include, but are not limited to:axe DevTools®,Lighthouse,NVDA, and VoiceOver on macOS."
          ]
        },
        {
          "type": "p",
          "text": "This report covers the degree of conformance for the following accessibility standard/guidelines:"
        },
        {
          "type": "list",
          "items": ["Level A (Yes)", "Level AA (Yes)", "Level AAA (No)"]
        },
        {
          "type": "list",
          "items": ["Level A (Yes)", "Level AA (Yes)", "Level AAA (No)"]
        },
        {
          "type": "list",
          "items": ["Level A (Yes)", "Level AA (Yes)", "Level AAA (No)"]
        },
        {
          "type": "p",
          "text": "The terms used in the Conformance Level information are defined as follows:"
        },
        {
          "type": "list",
          "items": [
            "Supports:The functionality of the product has at least one method that meets the criterion without known defects or meets with equivalent facilitation.",
            "Partially Supports:Some functionality of the product does not meet the criterion.",
            "Does Not Support:The majority of product functionality does not meet the criterion.",
            "Not Applicable:The criterion is not relevant to the product.",
            "Not Evaluated:The product has not been evaluated against the criterion. This can only be used in WCAG Level AAA criteria."
          ]
        },
        {
          "type": "p",
          "text": "The product has many instances where non-text content does not have a text alternative."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the&567and&564epics and will continue to be addressed."
          ]
        },
        {
          "type": "p",
          "text": "The product does not include prerecorded audio-only or video-only media."
        },
        {
          "type": "list",
          "items": [
            "A user can upload their own media and include alternative content, such as a text transcript by usingGitLab Flavored Markdown.",
            "There is no mechanism to verify that the user is including alternative content, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product does not include synchronized media."
        },
        {
          "type": "list",
          "items": [
            "User generated media that includes open captions can be linked to withGitLab Flavored Markdown.",
            "There is no mechanism to add captions to user generated media content, or to verify that the user is including captions, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product does not include prerecorded or synchronized media."
        },
        {
          "type": "list",
          "items": [
            "User generated media content can include alternative media in text form by adding it withGitLab Flavored Markdown.",
            "There is no mechanism to verify that the user is including alternative content, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product has many instances where information, structure, and relationships can not be programmatically determined."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the&567epic and will continue to be addressed.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product content is presented in a way that can be sequentially or programmatically determined. The product does not depend solely on sensory characteristics such as shape, size, visual location, orientation, or sound to understand content. The product does not primarily use colors as the only visual means of conveying information with the exception of some text links."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the#1084issue.",
            "Until we ensure all text links are updated, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product does not include auto-playing audio or provide the ability for user generated audio to automatically play. The product has many instances of content that is not operable through a keyboard."
        },
        {
          "type": "list",
          "items": [
            "Know instances are tracked in the&565epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "In most instances a user can move focus away from a focused element using only the keyboard."
        },
        {
          "type": "list",
          "items": [
            "Known instances where a user cannot navigate away from focused file editors are tracked in the&627epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product allows administrators to adjust any timeout functionality. The product does not include any moving, blinking, or scrolling content that lasts for more than 5 seconds. Information that is auto-updated is essential for showing correct status. The product does not use flashing interface elements that flash more than three times within a 1 second period, with the exception of user generated media which may contain flickering. The product provides an option to bypass the repeated navigation on each page by hitting tab on page load. Each page of the product includes a title that describes the topic or purpose. The product uses a logical tab order and in most instances consistent keyboard keys are used to perform actions."
        },
        {
          "type": "list",
          "items": [
            "Some components use inconsistent or non-normative keyboard controls, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product includes the purpose of most links."
        },
        {
          "type": "list",
          "items": [
            "Known instances of unclear product links are tracked in the&620epic.",
            "A user can add a link withGitLab Flavored Markdown, however, there is no mechanism to verify that the user has made a link's purpose clear. Therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product has no known instances where down-events are initialized without a method to easily undo or abort. The product uses the language attribute on the HTML element to specify the default language of a page. The product does not initiate a change of context when a component receives focus. The product does not initiate a change of context when a value setting is changed unless specified by the actionable area. Help is available in a consistent location. In most instances, the product describes input errors to the user and identifies which item the error originated from."
        },
        {
          "type": "list",
          "items": [
            "Known instances where the identification and description of an error is not always combined programmatically to help assistive technologies to identify an error are tracked in the&7341epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product ensures that most labels or instructions are provided for inputs."
        },
        {
          "type": "list",
          "items": [
            "Known instances where a label is not present are tracked in the&621epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product doesn't prevent redundant entry when available. The product has many instances where the name, role, or value cannot be programmatically determined or set."
        },
        {
          "type": "list",
          "items": [
            "Know instances are tracked in the&567epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "This criterion is not relevant because the product does not support live media. The product does not include synchronized media."
        },
        {
          "type": "list",
          "items": [
            "User generated videos may include audio descriptions and be linked withGitLab Flavored Markdown.",
            "There is no mechanism to include audio descriptions, or to verify that the user is including audio descriptions, therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product uses inputs that have a clear purpose. The product has some instances where the contrast ratio of text (enabled) is not at least 4.5:1."
        },
        {
          "type": "list",
          "items": [
            "Known instances are tracked in the&562epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "In most instances the product supports the use of standard zoom capabilities built into modern web browsers."
        },
        {
          "type": "list",
          "items": [
            "Known instances where text is clipped or inaccessible when zoomed are tracked in the&563epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product may include decorative images or illustrations that contain text."
        },
        {
          "type": "list",
          "items": [
            "An image of text may be added in user generated content withGitLab Flavored Markdownand there is the capability to add alternative text.",
            "Known instances are tracked in the&10943epic.",
            "There is no mechanism to verify that the user has included alternative text, or that if included, it's accurate. Therefore, we classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product has some instances where non-text contrast ratio is not at least 3:1."
        },
        {
          "type": "list",
          "items": [
            "Known instances are being tracked in the&8763epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product provides multiple ways to locate and navigate to a page. The product uses descriptive headings and labels to describe the purpose or topic on a page. The product uses visual changes to elements to indicate the current focus position."
        },
        {
          "type": "list",
          "items": [
            "There are instances where a state change happens but does not include a visible focus indicator.",
            "There are other instances where the default browser focus ring is present and may lack sufficient contrast.",
            "Until an assessment can be completed to determine the impact, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product has some instances where focus may be obscured."
        },
        {
          "type": "list",
          "items": [
            "Known instances are being tracked in the&14070epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "Dragging movements in the product cannot be done without dragging a single pointer."
        },
        {
          "type": "list",
          "items": [
            "Known instances are being tracked in the&14073epic.",
            "Until a majority of known instances have been addressed, we will classify this as does not support."
          ]
        },
        {
          "type": "p",
          "text": "The product has some instances where a target size may be too small."
        },
        {
          "type": "list",
          "items": [
            "Known instances are being tracked in the&14071epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product uses the language attribute on the HTML element to specify the default language of a page."
        },
        {
          "type": "list",
          "items": [
            "There is no mechanism to specify different languages for subsets of a page. For example, if a user were to enter a comment in a different language, therefore, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product consistently repeats navigation controls across pages. The product uses components that have consistent functionality across pages. In most instances the product provides suggestion for how to mitigate input errors."
        },
        {
          "type": "list",
          "items": [
            "Known instances where error remedies are not provided or are not programmatically associated to help assistive technologies are tracked in the&7341epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "The product ensure that when legal commitments or financial transactions occur users have the ability to correct validated input errors, review and confirm submission prior to submitting data, or reverse the submission. The product does not prevent the use of copy/paste, password managers, or showing hidden characters. Additionally, authentication steps don't rely on cognitive function tests\" or object recognition. In most cases the product uses roles to provide status messages to assistive technologies without receiving focus."
        },
        {
          "type": "list",
          "items": [
            "Known instances of visual responses to user actions that use a status message, but are not perceptive to assistive technologies are tracked in the&8764epic.",
            "Until all known instances have been addressed, we will classify this as partially supports."
          ]
        },
        {
          "type": "p",
          "text": "This document is provided for information purposes only and the contents hereof are subject to change without notice. GitLab does not warrant that this document is error-free, nor does it provide any other warranties or conditions, whether expressed orally or implied in law, including implied warranties and conditions of merchantability or fitness for a particular purpose. GitLab specifically disclaims any liability with respect to this document and no contractual obligations are formed either directly or indirectly by this document. GitLab further makes no representation concerning the ability of assistive technologies or other products to interoperate with GitLab products. This document addresses the named product(s) only and not prerequisite products for which GitLab supplies restricted use licenses. Last updated at:Friday, June 21, 2024 at 3:00 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-design/color",
      "title": "Color | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "This page includescolor swatchesfor our brand colors. The colors are denoted with apfor primary, andsfor secondary. Default to the following applications when using primary and secondary colors:"
        },
        {
          "type": "list",
          "items": [
            "Backgrounds can use gradients or select solid colors: white, Charcoal, or purple",
            "Graphical elements should default to colors in the primary palette; the colors in the secondary palette can be used as additional accents.",
            "Headlines and body copy should use white or charcoal.",
            "Calls to action (CTAs) and buttons should use white or charcoal.",
            "Colors other than white or Charcoal should not be applied in sentences or large bodies of copy.",
            "Hyperlinks commonly use Purple 01p on dark backgrounds or Purple 02p on light backgrounds.",
            "Other text, such as small titles or data points, can have color applied sparingly and with discretion for accessibility with a contrast minimum of 1.4.3 (Level AA) according toWCAG 2.1."
          ]
        },
        {
          "type": "p",
          "text": "The primary palette features colors from our core logo and signature purple. These colors are most frequently used and associated with our brand. The secondary palette expands upon our oranges and purples to provide more color varieties. These additional hues can be used to highlight various elements and add visual depth where needed. Adhere to the guidelines below regarding the colors in this palette:"
        },
        {
          "type": "list",
          "items": [
            "The teals carry a positive connotation, especially when used to reference product features.",
            "The pink is reserved exclusively for gradients.",
            "The cool grays offer neutral color options to be used for differentiating information and/or establishing hierarchy."
          ]
        },
        {
          "type": "p",
          "text": "The main gradient for our core brand consists of Orange 02p, Purple 01p, and Pink 01s with a white base fill. In some cases, custom gradients can be created for a more curated aesthetic to differentiate an asset from general-branded designs. Follow the parameters below to ensure visual consistency across all gradients:"
        },
        {
          "type": "list",
          "items": [
            "All gradients should feel organic and not distract from other elements on the design.",
            "All gradients should be generated using the freeform gradient feature in Illustrator, or by creating layered radial gradients in Figma.",
            "Gradients should be limited to no more than 3 colors, not including the base fill.",
            "Colors should feel soft and gently blur into one another; in most cases, keeping opacities below 30% achieves this look.",
            "Purple should always be included as one of the gradient’s colors.",
            "Charcoal and gray should not be used.",
            "Light-mode gradients should use white as the base fill.",
            "Dark-mode gradients should use Purple 04s as the base fill.",
            "When adding text or our logo, ensure that they are placed on a part of the gradient that provides adequate contrast."
          ]
        },
        {
          "type": "p",
          "text": "Using color combinations that have sufficient contrast benefits everyone and preserves readability. A contrast ratio of 4.5:1 or higher is preferred for text and UI elements, but 3:1 can be used for larger text. Illustrations are an exception and will use a larger range of the palette, although even the key elements should still be legible. Color accessibility enables people with visual impairments or color vision deficiencies to interact with digital experiences in the same way as their non-visually-impaired counterparts. For more information about color contrast in a digital context, view theWCAG Success Criterion 1.4.3 Contrast (Minimum)guidelines. Digital colorsrefer to colors that will be produced digitally. For instance, the colors on this webpage use HEX codes to generate the colors. If you are working with any digital asset, you can input either the HEX or RGB color codes, as detailed in the tables above. More digital use cases include: digital ads, digital billboards, video and animation, slide decks, and Canva."
        },
        {
          "type": "list",
          "items": [
            "HEX:HEX codes are based on the hexadecimal system in computing. HEX and RGB codes provide the same information, but in different formats. The HEX code includes a hashtag followed by six characters.Example:#FC6D26",
            "Example:#FC6D26",
            "RGB:RGB is an acronym for Red, Green, and Blue. All digital colors are generated using percentages of these three colors. As mentioned, RGB is interchangeable with HEX.Example:rgb(255, 255, 255)",
            "Example:rgb(255, 255, 255)"
          ]
        },
        {
          "type": "p",
          "text": "Print colorsrefer to colors that will be generated in printed assets. Generally speaking, digital screens saturate colors more deeply than printed materials do, so print-specific colors codes are used to create more visual consistency between the two formats. Some print use cases include: pop up banners, swag and merchandise, stickers, print billboards, and booth designs."
        },
        {
          "type": "list",
          "items": [
            "CMYK:CMYK is an acronym for Cyan, Magenta, Yellow, and Key. If an asset is a 'full-color' print, then CMYK is used. CMYK is usually the default for general printing and can be found in personal and commercial printers alike.Example:C:90, M:68, Y:41, K:90",
            "Example:C:90, M:68, Y:41, K:90",
            "PMS:PMS is an acronym for Pantone Matching System. Whereas CMYK colors are generated by ink values, PMS colors are pre-mixed, universal colors established byPantone. This technique provides the most consistent color across materials. PMS is used forspot colorprints (examples include embroidery and screen printing) and for more advanced print jobs to ensure quality and accuracy; vendors will usually specify when PMS is required. PMS colors have either a name or a code, which consists of a set of numbers followed by either a 'C' forcoatedor a 'U' foruncoated. Coated and uncoated refer to the paper; coated indicates gloss and uncoated refers to no coating/gloss (ie: matte paper).Example:433 C / 4280 U",
            "Example:433 C / 4280 U"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, July 26, 2024 at 2:01 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-design/marketing-illustrations",
      "title": "Marketing illustrations | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Illustrationsare the primary visual tool that we use throughout our marketing materials to depict GitLab’s values, features, user outcomes, and abstract concepts. The illustrations are an extension of our unique iconography system, and both reinforce our brand personality and are inspired by our values in the following ways:"
        },
        {
          "type": "list",
          "items": [
            "Overlapping elements with overlays, which highlight collaboration and transparency",
            "Intentional color application, driven by results",
            "Motion and dashed lines that represent efficiency and iteration"
          ]
        },
        {
          "type": "p",
          "text": "An illustration typically accompanies copy; the two together are necessary and should balance and complement one another. An illustration should elevate the message and act as a form of brand storytelling, adding clarity and context to complex ideas. When building illustrations, use thistemplateand adhere to the following guidelines to maintain visual consistency:"
        },
        {
          "type": "list",
          "items": [
            "Solid-filled shapes and Charcoal lineworkare combined and balanced throughout.",
            "Shapesadd weight to the piece and create the overall composition of the illustration.A single shape can also be used as a background element to ground the visual. In this case, the illustration should break out of the container.",
            "A single shape can also be used as a background element to ground the visual. In this case, the illustration should break out of the container.",
            "Linesare used for key areas of focus in the piece.Lines are 2px in weight.",
            "Lines are 2px in weight.",
            "Detailshould be minimal, but added for context.Secondary lines that depict motion use Purple 04s.",
            "Secondary lines that depict motion use Purple 04s.",
            "Backgroundsare typically white or a solid shape filled with Purple 02s.If working with a dark background, the illustration should be placed on a gradient-filled circle that provides ample contrast for the illustration.The background shape should have two corners with a border radius of 150px.",
            "If working with a dark background, the illustration should be placed on a gradient-filled circle that provides ample contrast for the illustration.",
            "The background shape should have two corners with a border radius of 150px.",
            "Cornersuse a mix of angles and curves. Rounded corners are used sparingly as a small addition of personality; the radius should be consistent throughout the illustration.",
            "Coloris used intentionally, with white and purples from thesecondary palettemaking up the majority of the composition. The remaining colors in that palette are used as highlights and accents to differentiate objects within the illustration."
          ]
        },
        {
          "type": "p",
          "text": "Marketing iconsare the building blocks of our illustration style and are used as singular units. They should be straightforward, only visualizing a single topic or call to action. Icons are quickly identifiable, representing common items in a redacted way. They take a secondary role to the copy and are used at small scales ranging from 24px - 216px; anything larger should default to an illustration and anything intended for functional use within the product should use theProduct icon setinstead. The marketing icons are created using the 8px grid system found within thistemplate. They consist entirely of linework, using a weight of 2px (1px for icons smaller than 64px) and Charcoal color. Alternatively, white is used if the icon is placed on a dark background. The icons should contain one rounded corner, if possible with the shape, with a radius of 12px (3px for icons smaller than 64px). This specific set of iconsrepresents each stage of our software development lifecycle at each stage of the process. They are designed to be presented as a set when referring to the entire journey of the lifecycle or individually when referring to a specific stage. Diagramsare used to illustrate the functionality of the GitLab product. They act like a manual, representing complex ideas step-by-step. They should be structured and visually clear, while using as minimal detail as possible."
        },
        {
          "type": "list",
          "items": [
            "Diagrams use plenty of white space to make the story easy to follow and understand.",
            "Orange 03p or Teal 02s can be used sparingly on icons to denote a positive or negative association.Example:Orange 03p for an X, or Teal 02s for a check mark.",
            "With white backgrounds, use Charcoal for the linework and type.Gray 03 can be used for dashed lines and motion linesPurple 01s can be used to add depth to elements or as an extra layer of color in the background.",
            "Gray 03 can be used for dashed lines and motion lines",
            "Purple 01s can be used to add depth to elements or as an extra layer of color in the background.",
            "With Charcoal backgrounds, use white for the linework and type.Gray 03 can be used for dashed lines and motion lines.Purple 01s can be used in parts of the linework to highlight and/or direct the user’s eye through the flow of the diagram.Gray 05 can be used to add depth to elements or used as an extra layer of color in the background.",
            "Gray 03 can be used for dashed lines and motion lines.",
            "Purple 01s can be used in parts of the linework to highlight and/or direct the user’s eye through the flow of the diagram.",
            "Gray 05 can be used to add depth to elements or used as an extra layer of color in the background."
          ]
        },
        {
          "type": "list",
          "items": [
            "Motion lines are used as accents; they should help tell the story and/or guide the user’s eye through the diagram’s flow.",
            "Line breaks give the feel of openness throughout the diagram. Lines should break before touching an icon, unless the icon is contained within a circle.",
            "Dashed lines are used to connect type and visual elements."
          ]
        },
        {
          "type": "list",
          "items": [
            "Lines should break before touching an icon, unless the icon is contained within a circle.",
            "When using an icon within a circle, ensure the icon has 25% padding around it."
          ]
        },
        {
          "type": "list",
          "items": [
            "A single-color tanuki (either Charcoal or Orange 02p) can be used sparingly in diagrams to denote a product feature.",
            "When representing how the GitLab product works in conjunction with or compared to another product, use the core logo."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-design/motion",
      "title": "Motion | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The motion guidelines follow a sleek, clean aesthetic allowing video producers to convey GitLab's ease of use and highlight messaging without cluttering the frame. These guidelines are the standard for any video involving motion graphics to any degree. Video producers can create large-scale, custom illustrations as part of a video concept. The illustrations should adhere to brand guidelines and match themarketing illustrationstyle."
        },
        {
          "type": "list",
          "items": [
            "Illustrations are assembled from multiple layers revealed in sequence.",
            "Each layer can have its own unique motion type which combine to create harmony.",
            "Strokes and lines are animated independently with a stroke reveal effect."
          ]
        },
        {
          "type": "p",
          "text": "Both interactive and expressive motion come with unique parameters to create scalable consistency in their use. Interactive ease is a standard ease in and out and the Expressive ease is an overshoot and snap back. Input the following data in theflow pluginto achieve Interactive and Expressive easing."
        },
        {
          "type": "list",
          "items": [
            "Iconography is used to convey concrete concepts, features, and benefits.",
            "Motion is used to make an icon feel purposeful.",
            "The design of an icon dictates its reveal.",
            "Motion should be swift at 0.65 seconds.",
            "Purposeful motion embraces the design elements and formulates a short visual narrative."
          ]
        },
        {
          "type": "list",
          "items": [
            "Dot animations help to convey abstract concepts that an icon or illustration alone can’t express.",
            "Dots can be paired with on-screen copy to enforce an idea.",
            "Dots are purposeful in their movement and quick moments of secondary motion and a slow drift are used to keep visual interest.",
            "Animation speed is variable and can change based on video length, music, and voice over."
          ]
        },
        {
          "type": "p",
          "text": "Voice over example: “No more stitching point solutions. All you need is GitLab.”"
        },
        {
          "type": "list",
          "items": [
            "In general, frame compositions should follow brand guidelines: maintain a large amount of negative space and do not clutter the frame with excessive elements or text.",
            "Frame is split into rows and columns.",
            "Points of interest like text, icons, or footage can appear and move between sections to allow for more negative space between the assets.",
            "Avoid diagonal movement."
          ]
        },
        {
          "type": "list",
          "items": [
            "Whenever introducing the GitLab logo in video, the trace logo animation may be used.",
            "It should animate on using a stroke reveal using Interactive ease.",
            "Don't use any other reveals such as fading on logo, having the logo move in from outside the frame, or scaling to reveal the logo."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use the Adobe Illustrator free-form gradient tool to create the gradient. It can be found in the gradient panel.",
            "Apply the gradient using points.",
            "Use 3-5 colors.",
            "To achieve softer colors, use the HSB palette and drop saturation of any brand color between 1-50%.",
            "The gradient sections can also be cropped to achieve a softer look.",
            "If the tanuki is placed on the background, it should be within the white area for legibility.",
            "The gradient can also be used inside text and linework of icons."
          ]
        },
        {
          "type": "p",
          "text": "Download the gradient file"
        },
        {
          "type": "list",
          "items": [
            "Use 3-5 colors to create an organic gradient with overlapping blurred shape layers (pink, purple, and orange).",
            "Blur at 71% with 3 iterations.",
            "Animate turbulent displacement evolution to create subtle animation."
          ]
        },
        {
          "type": "list",
          "items": [
            "Emphasize words or phrases by filling the text with one of the gradient options.",
            "The gradient can be used on keywords, whole phrases, and text repetitions.",
            "The text masks out the gradient."
          ]
        },
        {
          "type": "list",
          "items": [
            "Be careful not to go too heavy with one particular color.",
            "Don't overuse motion with gradients; keep movement subtle."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use quick snap edits in typographic animations to elicit excitement and draw attention to specific words.",
            "Use in lieu of any large-scale drifts, move ins, or zooms.",
            "Create a snap by jumping the text’s position in the middle of a scale animation."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use subtle drifts to maintain movement and avoid dead frames when a more subdued treatment is required.",
            "Use for moments of pause to let words sink in.",
            "Drifts utilize a 2-5% scale or position change."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use outlines and fills on text to create drama when revealing words or for emphasis.",
            "Text can be split into two parts: a fill and a stroke."
          ]
        },
        {
          "type": "p",
          "text": "The example below uses the following steps:"
        },
        {
          "type": "list",
          "items": [
            "Each word pops into place at 100% opacity, with  “innovation” popping in at 30% opacity",
            "Each character of “innovation” is separated with an individual stroke so each letter can animate uniquely.",
            "The stroke begins to animate as “innovation” moves to meet the other words.",
            "Once in place the opacity transitions from 30% to 100%."
          ]
        },
        {
          "type": "list",
          "items": [
            "Type repetitionsadd visual interest while drawing attention to areas of emphasis. They are a more dynamic, spirited way to emphasize text. They can be used to emphasize a single word or a whole phrase and can animate in a variety of ways.",
            "Slide the text lines upward into position behind masks one line at a time, transitioning opacity from 0-100 using Interactive ease."
          ]
        },
        {
          "type": "list",
          "items": [
            "In addition to straight cuts, when moving from animation to footage, footage to animation, or footage to footage, use the DevOps loop transition.",
            "The tanuki should never be used as a transition mask. Use only the loop itself."
          ]
        },
        {
          "type": "list",
          "items": [
            "In the DevOps loop transition, the loop is split into sections that are animated as masks to reveal another layer.",
            "DevOps loop transitions can be colorful and utilize solid colors as well as gradients."
          ]
        },
        {
          "type": "list",
          "items": [
            "Lower thirds are designed for clarity and simplified for contrast and legibility.",
            "Lower thirds will typically be white, but charcoal can be used on light backgrounds.",
            "Avoid mixing colors and refer to brandtypography guidelinesif needed.",
            "Lower thirds use the following flow:Transition in:Animate opacity from 0% to 100% over 1 second.Lower third remains onscreen for 4-5 seconds.Transition out:Animate opacity from 100% to 0% over 1 second.",
            "Transition in:Animate opacity from 0% to 100% over 1 second.",
            "Lower third remains onscreen for 4-5 seconds.",
            "Transition out:Animate opacity from 100% to 0% over 1 second."
          ]
        },
        {
          "type": "p",
          "text": "Motion details:Use white text for lower thirds on a dark background. Use Charcoal copy on light backgrounds. Animate opacity 0% > 100%. Duration of transition: 1 second."
        },
        {
          "type": "list",
          "items": [
            "Name:Inter Semi Bold, 60px (header)",
            "Organization and title:Inter Regular, 40px (subheader)"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-design/photography",
      "title": "Photography | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Photographyis how we frame DevSecOps in the real world. It is a useful tool for brand storytelling that allows users to see our product in action. It is important to keep visual consistency among all images, whether selecting stock photography or curating photos in-house. Images should be crisp with true-to-life colors and a natural editing style. Keep the following parameters in mind when selecting, creating, and using photos for our brand: Do:"
        },
        {
          "type": "list",
          "items": [
            "Use photos that reflect the natural world we live in and are also relevant (directly or metaphorically) to the content. Photos that feature real objects and landscapes are easier to recognize and relate to.",
            "When featuring subjects, include people from diverse backgrounds, ages, body types, races, and genders.",
            "Be mindful of our broad audience and keep images appropriate.",
            "Find photos that feel authentic and natural. This can be tricky with stock photography, but we want to capture people in a positive way.",
            "Use photos that feature, or work nicely with, our brand colors to reinforce our brand identity. TheBrand Design teamcan edit a photo, if needed, to add or alter colors."
          ]
        },
        {
          "type": "p",
          "text": "Don't:"
        },
        {
          "type": "list",
          "items": [
            "Don’t use photos that are heavily edited or have unnatural hues:example.",
            "Don’t use photos that have been generated by AI (including on Adobe Stock); these can pose Legal implications and have visual inaccuracies that are best avoided:example.",
            "Don’t use photos that feel too cinematic or fantasy-like:example.",
            "Don’t use photos that feature people working or collaborating in ways that feel irrelevant to our team members and customers:example.",
            "Don’t use photos that feel overly dramatic or are obvious the people are “acting”:example."
          ]
        },
        {
          "type": "p",
          "text": "Customers and contributors are our heroes, so their portraits should feel heroic. We capture this by photographing people at eye-level on a neutral background with soft, natural lighting. A shallow depth of field minimizes background distractions and draws the viewer’s attention to the person. Metaphorical photography allows us to convey intricate ideas in an abstract way. These photos are primarily shot top-down, with a focus on texture, patterns, or paths. The imagery should bring feelings of innovation, sustainability, positivity, and/or repetition. Images featuring infrastructure, people, nature, and structural repetition are excellent starting points. Collaboration is a common theme at GitLab, as it highlights our mission thateveryone can contribute. Capture collaborative scenes top-down or over a subject’s shoulder to show their working environment in a positive light. Subjects should be using their devices in a natural, candid way to show GitLab and DevSecOps as a normal part of everyday life. This technique draws attention to the working environment, rather than to the individual. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-design/typography",
      "title": "Typography | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "GitLab Sansis the default typeface for all GitLab materials. It is free for download and features a tall x-height to aid in readability. Although it comes in an array of weights, we primarily use Bold and Regular to preserve simplicity. Refer to the guidelines below when working with GitLab Sans:"
        },
        {
          "type": "list",
          "items": [
            "Different sizes and weights can be used to establish layout hierarchy.",
            "Keep the font size consistent within each block of copy.",
            "Left-align all copy. Never force-justify, center-align, or right-align, unless the written language dictates otherwise.",
            "Default to sentence case, and refrain from using all-caps.",
            "Keep text solid-filled, with the exception of motion graphics.",
            "Default to white or Charcoal for copy; refer to the color guidelines for exceptions.",
            "Headlines use GitLab Sans Bold with 105% leading and -45 tracking (-4.5% in Figma).",
            "Subheaders and intro/outro paragraphs use GitLab Sans Regular with 110% leading, -20 tracking (-2% in Figma), and optical kerning.",
            "Body copy uses GitLab Sans Regular with 135% leading, 0 tracking, and auto kerning.",
            "Call-to-actions and buttons use GitLab Sans SemiBold.",
            "If GitLab Sans is not available (such as Google applications), use Inter instead."
          ]
        },
        {
          "type": "p",
          "text": "GitLab Monois used sparingly alongside GitLab Sans. This font is visually reminiscent of code and can be used to provide more depth to the typography of any asset. It is best used for secondary elements such as labels, code snippets, callouts, select taglines, and numerical statistics. Refer to the guidelines below when working with GitLab Mono:"
        },
        {
          "type": "list",
          "items": [
            "Only use Regular weight to preserve simplicity and maintain visual similarities with code.",
            "With the exception of code blocks and/or product UI representations, GitLab Mono should not be used for large bodies of text.",
            "GitLab Mono should not be used within a larger body of text set in GitLab Sans."
          ]
        },
        {
          "type": "p",
          "text": "Type repetitions are a stylistic expression of GitLab’s commitment to iteration. It is reserved for moments of emphasis and adding visual interest. Follow these guidelines to properly achieve the type repetitions effect:"
        },
        {
          "type": "list",
          "items": [
            "Type out a single word in GitLab Sans Bold.",
            "Create a copy of the text and remove the bottom 1/4 of the text from the baseline.",
            "Take this newly redacted type and repeat it 2-4 times above the original text.",
            "Ensure that the vertical spacing between each repetition equals 3/4 of the bottom portion that was removed.",
            "Keep the font weight and color the same throughout, although opacity changes can be applied to the repetitions."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, July 26, 2024 at 2:01 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-logo/branded-lockups",
      "title": "Branded lockups | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Co-branded lockups are created by the Brand Design team for approved GitLab partnerships, events, and campaigns. We default to the partner company’s co-branding lockup standards, but adhere to the following when such standards do not exist:"
        },
        {
          "type": "list",
          "items": [
            "Use the core GitLab logo.",
            "Ensure both logos are visually equal in size.",
            "Insert a gray line (Gray 03) between the logos equal to the height of the GitLab logo.",
            "Center both logos vertically; the company’s logo should not exceed the height of the tanuki."
          ]
        },
        {
          "type": "p",
          "text": "Ensure proper clear space (x-height equal to the height of the letter 'a' from our wordmark) around all sides of both logos. Program lockups are used to identify GitLab’s various marketing efforts around product-related topics or bring general awareness to GitLab’s offerings; this occurs through programs, initiatives, and communities that are promoted both internally and externally. The lockup should always be accompanied by GitLab branding. For GitLab team members looking to create a lockup for their program, please access thisself-service templatevia Canva, or request a new design using the appropriateissue template. The format of the lockup is as follows:"
        },
        {
          "type": "list",
          "items": [
            "Begin withGitLabon its own line, followed by theprogram name. Text should not exceed 3 lines total or 12 characters per line.",
            "Use Inter Semi Bold forGitLaband Inter Regular for theprogram name. Set the leading to 112% (1.1 in Canva) and tracking to 0.",
            "Default to Charcoal for the fill color of the entire lockup.",
            "Add the lockup’s logomark; this shape extends from the top of the G down to the baseline of the second line of text and features two rounded corners, with the pointed corner leading to GitLab.",
            "Select a white icon from theicon librarythat represents the program. Center it in the logomark. There should be at least 30% padding around the icon. If you need a new icon created, please submit an issue for a new design request.",
            "Contact theBrand Design teamfor approval of the final lockup. You can also access thedesign approval featurein Canva for review."
          ]
        },
        {
          "type": "p",
          "text": "Ensure proper clear space (x-height equal to the height of the logomark) around all sides of the lockup. Program lockups should always be accompanied by the GitLab logo and never exceed 75% of the width of the GitLab logo on any given asset. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-logo/core-logo",
      "title": "Core logo | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The corelogoconsists of the full-color logomark and wordmark in horizontal format. The core logo is the standard logo orientation to be used across all marketing materials, when the application or surrounding elements are ideal for the width of its proportions. The name GitLab is inspired by the name of the Git open source version control system that GitLab uses, and the collaboration, experimentation, and innovation that occurs when teams iterate in a laboratory. The wordmark is a modified version ofInter Semi Bold. The wordmark can’t be used independently and should always be presented alongside the logomark. Clear space is the area, equal to the x-height, surrounding the entire logo; the x-height is measured by the height of the letter 'a' from the wordmark. This area should be kept free of any visual elements, including text, graphics, borders, patterns, and other logos. Ensuring proper clear space between the logo and surrounding elements preserves the visual integrity of our brand. When scaling either the logo or logomark, it should take up no more than 20% of the height of the frame of the asset. The percentage scales shown are based on the page height of 1080px. The minimum size is 20px for digital and 0.4” (11mm) for print. The GitLab logo and tanuki logomark are bold, eye-catching devices, so their placement requires thought and care. Alone, these assets can anchor text or expand to become the hero. They should not be overused or excessively repeated in a single asset. Placement should primarily be left-aligned, either at the top or bottom corner, depending on which location balances the design and surrounding elements best. This placement allows the copy to be the main focus. Centered placement should be reserved for times when the logo needs to be the main focus (i.e. video bumpers/end slates). In these cases, the logo is typically scaled larger. Right-aligned corner placement (top or bottom) can be used in specific cases when left-aligned or centered doesn't work with the design layout or output medium. Right-aligned is only decided on a case-by-case basis and when there is valid reason for its usage. The full color logo is the default logo to be used, however, there are times when the one color variation of the logo can be used. Consider using either the white or charcoal one color version when:"
        },
        {
          "type": "list",
          "items": [
            "Restricted to a single-color use, such as swag",
            "Brand awareness has already been established, such as a product release graphic"
          ]
        },
        {
          "type": "list",
          "items": [
            "Do not apply a stroke to the logo",
            "Do not recolor any part of the logo",
            "Do not transform, scale, or alter the logo in any way",
            "Do not rearrange the logo in any way",
            "Do not apply drop shadow or effects to the logo",
            "Do not rotate the logo in any way",
            "Do not distort the logo in any way",
            "Do not use the logo as a framing device for imagery",
            "Do not use the logo in a line of text"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, September 10, 2024 at 3:48 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-logo/logomark",
      "title": "Logomark | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The logomark personifies GitLab’s values, culture, and stewardship of open source, taking inspiration from the tanuki – a raccoon dog native to Japan. The tanuki is known for being fast, efficient, and collaborative. It is thought to symbolize trustworthiness, agility, and preparedness. Known for its transformational powers and collaborative nature, the tanuki works with others to achieve a common goal – a behavior that is also embodied by GitLab’s mission that everyone can contribute. The tanuki logomark can be used when the core logo has already been presented to provide context. It should never be obscured or hard to recognize. DevOps is at our core, and the logomark represents adaptability, iteration, development, and – like the DevOps loop – momentum. The construction of the GitLab tanuki was based on an infinity loop, representing the limitless possibilities of The DevSecOps Platform. Like the logo, the clear space for the tanuki logomark is measured by the x-height, which equals the height of the letter \"a\" from the wordmark. Ensuring proper clear space between the logomark and surrounding elements preserves the visual integrity of our brand; this area should be kept free of any visual elements, including text, graphics, borders, patterns, and other logos. The logomark should be used in full color by default, but there are times when a one color variation can be used. Consider the following:"
        },
        {
          "type": "list",
          "items": [
            "Default to full color usage for brand awareness.",
            "Charcoal or white should be the second alternative to full color. Consider these options when brand presence is already well-established or when usage is restricted to a single color.",
            "Orange 02p, Purple 01p, and Purple 02p are the other single color exceptions. These can be used occasionally and with discretion. Some examples include: an orange tanuki for browser favicons or a purple tanuki on swag for a pop of color.",
            "Note: If you need to use the tanuki in a color other than what is listed above, pleasereach out to the brand teamfor approval."
          ]
        },
        {
          "type": "list",
          "items": [
            "Do not apply a stroke to the mark",
            "Do not apply color to the mark",
            "Do not outline or create a keyline around the mark",
            "Do not flip or rotate the mark in any way",
            "Do not apply drop shadow or effects to the mark",
            "Do not add any other graphic elements to the mark",
            "Do not distort the mark in any way",
            "Do not use the mark as a framing device for imagery"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, September 10, 2024 at 3:48 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-messaging/brand-voice",
      "title": "Brand voice | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "GitLab’s brand voice represents and expresses who we are as a brand. It is a core part of our brand identity, informed by ourbrand personality. Our brand voice should come through clearly and consistently in everything we do, from our communications to our designs. These guidelines will help you incorporate the GitLab voice into your work while also allowing your individuality and creativity to shine through."
        },
        {
          "type": "list",
          "items": [
            "Share your expertise in a way that brings value.",
            "Give clear examples and provide data where possible.",
            "Ensure your recommendations are accurate, provable, and helpful for your audience."
          ]
        },
        {
          "type": "p",
          "text": "Examples:"
        },
        {
          "type": "list",
          "items": [
            "Blog:GitLab’s 2023 predictions: What’s next for DevSecOps?",
            "Blog:What the ML is up with DevSecOps and AI?",
            "Blog:Building GitLab with GitLab: How GitLab.com inspired Dedicated",
            "Website:10 reasons why enterprises choose GitLab",
            "Website:Global DevSecOps Survey"
          ]
        },
        {
          "type": "list",
          "items": [
            "Meet readers where they are — don't assume they know the technology or topics you're covering.",
            "Explain but don't patronize.",
            "Beinclusivein your writing."
          ]
        },
        {
          "type": "p",
          "text": "Examples:"
        },
        {
          "type": "list",
          "items": [
            "Blog:Quickstart guide for GitLab Remote Development workspaces",
            "Blog:The ultimate guide to SBoMs",
            "Handbook:CEO handbook page",
            "Handbook:Communication handbook page",
            "Handbook:Values handbook page"
          ]
        },
        {
          "type": "list",
          "items": [
            "Give your audience the information they need.",
            "Offer opportunities for readers to provide feedback.",
            "Use plain language and be honest, even if it means sharing limitations."
          ]
        },
        {
          "type": "p",
          "text": "Examples:"
        },
        {
          "type": "list",
          "items": [
            "Blog:New pricing for GitLab Premium",
            "Blog:Upcoming changes to user limits on Free tier of GitLab SaaS",
            "Blog:GitLab’s first ESG and DIB reports: Here’s what to know",
            "Website:GitLab Duo solution page"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, October 3, 2024 at 2:35 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-messaging/style-formatting",
      "title": "Style and formatting | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The style and formatting guidelines govern the way we write in our marketing materials — including our vocabulary, grammar, punctuation, and formatting — and ensure consistency across all of our content. Technical writing and product teams should follow thedocumentation style guidewhen developing content within the product. For any style questions not directly addressed below, refer to theAssociated Press Stylebook. Where the guidance below conflicts with AP style, the guidance below takes priority. For guidance on how to use specific terms, refer to therecommended word listin the documentation style guide. When usingacronyms or initialisms, ensure that your first mention uses the full term and includes the shortened version in parentheses directly afterwards. From then on you may use the acronym or initialism instead. If you only use an acronym or initialism once in a piece of content, you probably don’t need it and can simply use the full term instead. Only capitalize the words that make up an acronym or initialism if it’s a proper noun."
        },
        {
          "type": "list",
          "items": [
            "✅Dynamic application security testing (DAST)examines applications for vulnerabilities like these in deployed environments.",
            "✅GitLab Dynamic Application Security Testing (DAST)includes the following analyzers."
          ]
        },
        {
          "type": "p",
          "text": "We favor contractions (can’t, didn’t, it’s, we’re) to sound more human and less formal. If a numbered or bulleted list reads as a continuous sentence, don’t capitalize the first letter of each item in the list, and don’t include punctuation at the end of each item."
        },
        {
          "type": "list",
          "items": [
            "✅ GitLab Duo is unique because we:do not use your content to train modelsare transparent about all AI models used by GitLab Duouse the right AI model for each task, ensuring you always stay ahead of the curve",
            "do not use your content to train models",
            "are transparent about all AI models used by GitLab Duo",
            "use the right AI model for each task, ensuring you always stay ahead of the curve"
          ]
        },
        {
          "type": "p",
          "text": "If each item in the list reads as its own sentence, capitalize and punctuate as you would free-standing sentences."
        },
        {
          "type": "list",
          "items": [
            "✅ Here are three reasons GitLab Duo is unique:GitLab Duo features do not use your content to train models.Our publicly available documentation describes all AI models used by GitLab Duo.We use the right AI model for each task, ensuring you always stay ahead of the curve.",
            "GitLab Duo features do not use your content to train models.",
            "Our publicly available documentation describes all AI models used by GitLab Duo.",
            "We use the right AI model for each task, ensuring you always stay ahead of the curve."
          ]
        },
        {
          "type": "p",
          "text": "Unless referring to someone in particular, use gender-neutral pronouns (they, them)."
        },
        {
          "type": "list",
          "items": [
            "✅ With GitLab, a developer can integrate security intotheirworkflow.",
            "❌ With GitLab, a developer can integrate security intohis/herworkflow."
          ]
        },
        {
          "type": "p",
          "text": "Use double quotation marks (\" \") for direct quotes, and single quotation marks (' ') for a quote within a quote. Include periods and commas inside ending quotation marks. Any punctuation that is part of the quotation should be included inside of the quotation marks. Any punctuation that is not part of the quotation (aside from periods and commas, as noted above) should be outside of the quotation marks."
        },
        {
          "type": "list",
          "items": [
            "✅ Recently, an article was published stating, \"Software is eating the world.\"",
            "✅ What do you think of the claim, \"Software is eating the world\"?",
            "✅ \"Do you agree that software is eating the world?\" wrote the author."
          ]
        },
        {
          "type": "p",
          "text": "When including direct quotations from interviewees in blog posts, use present tense for verbs such assaysandexplains."
        },
        {
          "type": "list",
          "items": [
            "✅ \"Ruby was optimized for the developer, not for running it in production,\" says Sid."
          ]
        },
        {
          "type": "p",
          "text": "The exception would be when quoting from an event that was obviously in the past; in that case use the past tense so the reader is not confused or misled. We use American English by default on the GitLab blog and marketing site. Please refer tothis list of spelling differences. In content specifically created for a particular region, use the variant of English that is most appropriate for that region. Generally, useactive voicewhere possible. Using active voice ensures that your sentence includes a clear subject and verb."
        },
        {
          "type": "list",
          "items": [
            "✅ The GitLab community submitted 1 million merge requests in March 2019.",
            "❌ One million merge requests were submitted in March 2019."
          ]
        },
        {
          "type": "p",
          "text": "There may be limited cases where passive voice is the better option. Use your best judgment in each case, and if you decide to use passive voice, try to be aware of why you’re making that choice. Ensure you style brand names according to the company’s brand guidelines."
        },
        {
          "type": "list",
          "items": ["✅ WiFi Tribe, DigitalOcean"]
        },
        {
          "type": "p",
          "text": "If the word the forms part of a brand or publication's name, capitalize it. OmitTheif including it would make the sentence awkward."
        },
        {
          "type": "list",
          "items": [
            "✅ We spoke to a reporter fromThe Wall Street Journal.",
            "✅ We spoke to aWall Street Journalreporter."
          ]
        },
        {
          "type": "p",
          "text": "Generally, GitLab feature names are lowercase, but there are exceptions. Refer to therecommended word list in the documentationif you're unsure. Capitalize the name of the element, but not the word after (team, department, etc.)."
        },
        {
          "type": "list",
          "items": [
            "✅ Engineering team, Security department",
            "❌ Engineering Team, security department"
          ]
        },
        {
          "type": "p",
          "text": "Use lowercase for job titles in sentences, regardless of whether they appear before or after a person's name."
        },
        {
          "type": "list",
          "items": [
            "✅ John Smith, director of engineering, led the project.",
            "❌ John Smith, Director of Engineering, led the project."
          ]
        },
        {
          "type": "p",
          "text": "Capitalize the title when the person's name and title appear as a standalone (such as in the lower third of a video, a nametag, or attribution on a pull quote)."
        },
        {
          "type": "list",
          "items": [
            "✅ John Smith, Director of Engineering, XYZ Corporation",
            "❌ John Smith, director of engineering, XYZ Corporation"
          ]
        },
        {
          "type": "p",
          "text": "Generally, use sentence case (capitalize only the first word and any proper nouns) for all headlines, titles, and subheads. There may be exceptions where title case is preferred from a design standpoint."
        },
        {
          "type": "list",
          "items": [
            "✅ Remediating vulnerabilities with GitLab's security insights and AI",
            "❌ Remediating Vulnerabilities with GitLab's Security Insights and AI"
          ]
        },
        {
          "type": "p",
          "text": "For external-facing content, spell out the month and use a comma before the year. If the sentence continues after the year, also include a comma after the year. When you are only stating the month and the year, you don't need a comma after the month."
        },
        {
          "type": "list",
          "items": [
            "✅ Release date: November 16, 2023",
            "✅ On November 16, 2023, we released GitLab 16.6.",
            "✅ We released Gitlab 16.6 in November 2023."
          ]
        },
        {
          "type": "p",
          "text": "For internal content, use ISO format (2023-11-16). In content geared toward a specific region, use the format preferred in that region. Don't use rd/st/th after the date, unless the date appears independently from the month (See you on the 16th). Abbreviateante meridiemandpost meridiemusinga.m.andp.m.(lowercase, with periods between the letters and a space before it to separate it from the time:6:00 a.m.). We default to the 12-hour clock (9:00 p.m.). However, in content geared toward a specific region, use the format used in that region. When writing about physical events, use the time zone where the event is taking place. Don’t abbreviate time zones. For virtual events, use UTC. Use ampersands only where they are part of a company's name or the title of a publication or official name. Do not use an ampersand as a substitute forandin body copy. Ampersands may be used sparingly where character counts are very tight, such as a headline in a display ad. If a colon is used to introduce a complete sentence (including a question), capitalize the first word after the colon."
        },
        {
          "type": "list",
          "items": [
            "✅ AI isn’t just another fad: It’s seeing real adoption among practitioners.",
            "❌ AI isn’t just another fad: it’s seeing real adoption among practitioners.",
            "✅ We aimed to explore several topics: Where are things improving, and where are teams still running into roadblocks?",
            "❌ We aimed to explore several topics: where are things improving, and where are teams still running into roadblocks?",
            "✅ One thing stood out in the survey responses: the importance of security.",
            "❌ One thing stood out in the survey responses: The importance of security."
          ]
        },
        {
          "type": "p",
          "text": "Always capitalize the first word after a colon in a title, even if it’s not a complete sentence. Our default is to use serial (Oxford) commas. In content geared towards a specific region, feel free to use what is most common in that region."
        },
        {
          "type": "list",
          "items": [
            "✅ AI can help DevSecOps teams write code, resolve security vulnerabilities, accelerate code review, and improve collaboration.",
            "❌ AI can help DevSecOps teams write code, resolve security vulnerabilities, accelerate code review and improve collaboration."
          ]
        },
        {
          "type": "p",
          "text": "Use an em dash (—) instead of two dashes (--) to set off a distinct thought within a sentence. Place one space on each side of an em dash. Use an en dash (–) when communicating numeric ranges not preceded by the wordsfromorbetween(Join us October 20–25 in San Francisco). Don’t include a space on either side of the en dash. Include one space before and after an ellipsis ( … ). Use a hyphen to connect two or more words that jointly modify another word (built-in security). Do not hyphenate the adverb very or adverbs ending in-ly(fully integrated platform). Generally, don’t hyphenate prefixes such assemi, pre, non, un, sub, ormulti(multitenant, subtask). The exception is when the last letter of the prefix is the same as the first letter of the root word (sub-bucket). Do use a hyphen after a prefix followed by a proper noun and for words beginning with the prefixesall-, mid-, ex-(meaning \"former\"), andself-(mid-July, self-managed). Refer to therecommended word listfor guidance on how to hyphenate specific words. Use only one space (not two) after a period. Use a space between a number and a unit of measurement (128 GB). Generally, spell out numbers zero through nine. Exceptions include:"
        },
        {
          "type": "list",
          "items": [
            "Percentages: Generally, use numerals and a percent sign (%) for percentages, unless starting a sentence.",
            "Callout boxes and lists of stats: Use numerals for numbers less than 10 in instances where character counts are limited or when you'd like to emphasize the numbers, such as in a bulleted list of stats, or stat callouts at the top of a case study."
          ]
        },
        {
          "type": "p",
          "text": "Use numerals for 10 and above unless starting a sentence. Always use numerals when putting a number at the start of a headline (5 ways AI can help developers). Numbers with four or more digits should include a comma (2,000; 100,000). If you’re writing in a specific context where this might cause confusion (such as for regions that use commas as a decimal separator instead), do what makes the most sense for your audience. Generally, avoid abbreviations for large numbers, such ask(meaning “thousand”) andMormil. Use these abbreviations only where space is very limited, such as a callout box with a tight character limit. In contexts where currencies are mentioned, be sure to denote them in the format<CURRENCY_CODE> by using the code from theISO 4217 standard(e.g. 10 USD, 15 EUR, 30 CAD, 30,000 JPY, 29.99 CHF). Use % instead ofpercentat all times, unless the number is spelled out, in which case also spell outpercent. Last updated at:Tuesday, October 29, 2024 at 8:40 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-overview/brand-applications",
      "title": "Brand applications | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Brand Applications are purpose-built style guides that govern specific expressions of our brand identity. While each application has its own distinct requirements and guidelines, they all align with and support our core brand standards. Each style guide provides targeted guidance to ensure our brand remains both consistent and contextually appropriate across environments and audiences. Whether you're creating internal touchpoints, developing co-branded partner materials, or developing materials for product or marketing initiatives, you'll find clear, actionable guidelines here. Below are style guides for the existing brand extensions. GitLab Duo is the suite of AI capabilities powering GitLab’s DevSecOps workflows. The unique creative styling for GitLab Duo visualizes AI's role in our product, inspired by its intricacies and a sense of forward movement. GitLab Duo style guide| Password: clump-kiwi-home-scarf The Culture & Community style guide details the creative styling for internal GitLab teams, communities, departments, global locations, and team member resource groups (TMRGs). Culture & Community style guide| Password: random-expert-garnet-kinder Last updated at:Thursday, November 14, 2024 at 10:21 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-overview/introduction",
      "title": "Introduction | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Welcome to the GitLab Brand Guidelines, the official resource outlining our brand’s overall look and feel and its creative components. TheGitLabbrand exists as the creative expression of our companymission,vision, andvalues. At GitLab, everyone contributes to building and representing our brand. Consistently applying these guidelines across all of our work increases awareness, recognition, and trust. It also communicates our unique value, showcases our identity, and differentiates us from our competitors. A unified visual identity supports our goal for GitLab to be recognized as the most comprehensive AI-driven DevSecOps platform. The guidelines serve as the starting point for anyone who is interested in working with our brand. We recommend that you familiarize yourself with our design system if you are a:"
        },
        {
          "type": "list",
          "items": [
            "creative agency or vendor collaborating with us on our marketing efforts.",
            "partner or customer that is interested in representing our brand on digital or print materials.",
            "team member who is hosting events or speaking opportunities that showcase our brand.",
            "team member who wants to self-service creative assets with tools such as Canva.",
            "GitLab fan with a passion for our brand!"
          ]
        },
        {
          "type": "p",
          "text": "Have a creative request?Learn more about ourdesign workflow. Have a question about the Brand Guidelines?Contact the Brand Creative team. We have three key personality traits that bring our brand to life. We arevisionary,empathetic, andintentional; these characteristics come to life in both our messaging and designs to tell the greater story of who we are as a company. We are confident, sophisticated technical experts and category creators. We are committed to enabling and empowering our customers and community. We embrace new challenges, energizing our customers to navigate their own journeys with confidence. We lead by example through continuous innovation and a bias for action. We believe we are most successful when everyone can contribute. Example: We created the category. We are thoughtful, collaborative, and considerate, as well as approachable and inclusive on a global scale. We are dedicated to understanding and supporting the diverse needs of our team and customers and crafting solutions to help them succeed. Example: The GitLab Community; our mission enabling everyone to contribute We are purposeful, direct, and transparent. We communicate with clarity and focus to create a reliable experience for our customers. Example: Our monthly release post Last updated at:Wednesday, October 2, 2024 at 3:10 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand-overview/resources",
      "title": "Resources | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "On this page you will find the most up-to-date brand assets. If you have questions or you’re looking for something not listed on this page, please reach out in the #brand channel on Slack."
        },
        {
          "type": "list",
          "items": ["Press kit"]
        },
        {
          "type": "list",
          "items": ["RGB and CMYK swatch downloads(Internal access only)"]
        },
        {
          "type": "list",
          "items": ["Font downloadsfor GitLab Sans and GitLab Mono"]
        },
        {
          "type": "list",
          "items": ["Illustration library(Internal access only)"]
        },
        {
          "type": "list",
          "items": [
            "Icon library(Internal access only)",
            "Software development lifecycle(Internal access only)"
          ]
        },
        {
          "type": "list",
          "items": ["Diagram library(Internal access only)"]
        },
        {
          "type": "list",
          "items": [
            "Branded green screens(Internal access only)",
            "Zoom backgrounds(Press kit)"
          ]
        },
        {
          "type": "list",
          "items": ["Photo library(Internal access only)", "Adobe stock"]
        },
        {
          "type": "list",
          "items": [
            "General GitLab-themed deck templatewithinstructions",
            "The DevSecOps story deck- also found inHighspot",
            "GitLab AI story deck- also found inHighspot"
          ]
        },
        {
          "type": "list",
          "items": [
            "General templates for email assets(Access to GitLab'sCanva Enterpriseaccount required)",
            "Email signature template"
          ]
        },
        {
          "type": "list",
          "items": ["Google Docs branded templates"]
        },
        {
          "type": "list",
          "items": ["QR code design guidelines", "Pop-up event materials"]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, August 2, 2024 at 10:40 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/brand/overview",
      "title": "Pajamas Design System",
      "content": []
    },
    {
      "url": "https://design.gitlab.com/components",
      "title": "Component collection | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A component is a UI element that serves a singular purpose or function. Two or more simple components can combine to form a composite component that still has a single function. For example, an avatar, button, or combobox."
        },
        {
          "type": "list",
          "items": [
            "AccordionAn accordion is used to show and hide content.",
            "AlertAn alert is a system generated, contextual, and timely message to a user that may or may not result from their action.",
            "AvatarAn avatar represents a unique entity, like a person, group, or project.",
            "BadgeA badge highlights system generated metadata as an attribute of a larger object.",
            "BannerA banner promotes awareness of a new feature or high-priority research initiative.",
            "BreadcrumbA breadcrumb is a navigational element to help a user understand the current location in the application as well as content structure and hierarchy.",
            "Broadcast messageA broadcast message delivers an instance level message from the admin to all users.",
            "ButtonA button indicates a distinct action and executes a function. Text, icon, or a combination of the two express the action and are supported by the variant and occasionally a tooltip.",
            "CardA card displays a single group of content within a set of similar groups.",
            "CheckboxA checkbox form element represents a boolean option.",
            "Color pickerA color picker allows users to customize a component by choosing a color option. It is only available in instances where a user is adding bespoke content that needs to be differentiated.",
            "ComboboxA combobox is a panel of options typically opened by a button or text input.",
            "Date pickerThe date picker allows a user to choose and/or input a date by using a calendar dropdown or by typing the date into a text field.",
            "DisclosureA disclosure widget includes a button that opens a panel of links or actions.",
            "DrawerA drawer presents context-specific information and/or actions without leaving the current page.",
            "Dropdown overview",
            "FilterFilters allow a user to narrow down content by taking an existing list and removing items based on criteria that matches or doesn’t.",
            "Infinite scrollInfinite scroll helps users parse a large number of items by breaking up lists and distributing the results.",
            "LabelLabels are editable objects that allow users to manually categorize other objects, like issues, merge requests, and epics. They have a name, description, and a customizable color. They provide a quick way to recognize which categories the labeled object belongs to.",
            "LinkA link is a navigational element that takes a user to another URL, an element within a page, or a file.",
            "ModalA modal is used to reveal critical information, show information without losing context, or when the system requires a user response.",
            "PaginationPagination breaks up content into multiple pages with controls for navigating those pages.",
            "PathPaths are horizontal process flows composed of a series of stages.",
            "PopoverA popover is used to provide supplemental, useful, unique information about an element, including one or multiple actionable elements. It informs the user of additional information within the context of their original view, but without forcing them to act upon it like a modal.",
            "Progress barA progress bar indicates a percentage of completion.",
            "Radio buttonA radio button typically represents a single option in a group of related choices.",
            "SearchSearch patterns enable users to find certain information by adding criteria that match their query.",
            "Segmented controlA segmented control allows users to choose one out of a range of available options. It is a button group of equal options where only one can be selected and active. There must always be one option active.",
            "SelectAn HTML element, typically used in a form.",
            "Skeleton loaderA skeleton loader is a simplified preview of loading content.",
            "SocksSocks represent a unique way to warm your feet.",
            "SortingSorting allows users to quickly re-organize similar content on a long list when the default order may be insufficient for users to scan the data set.",
            "SpinnerA spinner is an animated element that appears after a user's action to indicate that saving or loading is in progress.",
            "StepperA stepper separates structured workflows into meaningful, ordered steps.",
            "TableTables display tabular data in a basic grid composed of cells, columns, and rows. This format makes it easy for users to scan and compare large amounts of data.",
            "TabsTabs divide content into meaningful, related sections.",
            "Text inputA component for the HTML input type=\"text\" element.",
            "TextareaA component for the HTML textarea element.",
            "ToastA toast displays a short system message as a result of a user's action.",
            "ToggleA toggle is a visual switch which acts as a boolean.",
            "TokenA token represents a keyword used to add or filter objects.",
            "TooltipTooltips identify elements or provide additional, useful information about the referring elements.",
            "TreeA tree component structures parent and child nodes into a meaningful hierarchy."
          ]
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/accordion",
      "title": "Accordion | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An accordion is used to show and hide content."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Caret: Identifies when the accordion is open or closed. Pointing down is open. Pointing right is closed.",
            "Title: Identifies the title of the accordion.",
            "Body: Contains the content of an accordion."
          ]
        },
        {
          "type": "list",
          "items": [
            "Displaying and grouping additional information.",
            "Adding granular control over the information on a given page.",
            "Shortening pages to reduce scrolling."
          ]
        },
        {
          "type": "list",
          "items": [
            "Displaying critical system information or a primary action to be taken on the page. (for example,alerts, confirmation or cancellation buttons).",
            "Displaying navigation elements such astabs.",
            "Displaying links pointing to sections of the same page, instead use a semantic HTML list.",
            "Creating hierarchy levels by nesting them within each other. If you need to add hierarchy to the content use atree.",
            "Displaying a set of visual components following the same style, prefer using Collapsable.(TODO: Add link to collapsable)."
          ]
        },
        {
          "type": "p",
          "text": "To reduce cognitive load and time to task completion, the icon should be located before the header, so users always click on the same spot to expand/collapse the accordion. The icon should always reflect the state of the accordion (expanded or collapsed). The following icons should be used: The affordance of the chevron means that additional information can be found \"under\" the header. Just likemodals, the header of an accordion could be a question or a title. Either way, headers should give context about the underlying content in a concise and actionable way. Examples of headers can be \"What can GitLab offer me?\", or \"More options\". The content in the accordion body should be visually different from the rest of the page as it is secondary information. The accordion body is always displayed below its header. Use spacing (margin/padding/horizontal rule) and/or hierarchy (font size, color) to structure the body content. The content should directly relate to the header. For example, the content for \"What can GitLab offer me?\" could be \"GitLab helps organizations deliver better products faster, increase operational efficiencies, and reduce security and compliance risks...\". Users should be able to expand and collapse the body by clicking or tapping a single area containing the accordion header and icon. Changing the accordion state will trigger ananimation. In the case of a page layout built around several accordions following each other (for example, FAQ page where each question is an accordion), changing one accordion state does not reflect on the other, each accordion would need to be expanded/collapsed individually by users. Use proper semantic markup, so that users of screen readers are aware of the states of the accordion."
        },
        {
          "type": "list",
          "items": [
            "Thearia-controlsattribute should define that the header is acting as a trigger to reveal content (the accordion body).",
            "Thearia-expandedattribute should be used to indicate the state of the accordion.",
            "After a user expands/collapses the accordion, the focus should remain on the area wrapping the header and the icon, so that the user can trigger the accordion using the keyboard.",
            "The accordion should not rely on JavaScript to reveal the body content."
          ]
        },
        {
          "type": "list",
          "items": [
            "NN/G: Progressive disclosure",
            "Smashing Magazine - Designing The Perfect Accordion",
            "NN/G: Accordions Are Not Always the Answer for Complex Content on Desktops",
            "Viget - Testing Accordion Menu Designs & Iconography"
          ]
        },
        {
          "type": "list",
          "items": ["Modal", "Tree", "Tabs"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/accordion/code",
      "title": "Accordion | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An accordion is used to show and hide content."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/accordion/lookbook",
      "title": "Accordion | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An accordion is used to show and hide content."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/alert",
      "title": "Alert | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An alert is a system generated, contextual, and timely message to a user that may or may not result from their action."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Icon: Supports the variant meaning.erroricon for error and danger alerts.warningicon for the warning alert.check-circleicon for the success alert.information-oicon for the information alert.bulbicon for the tip alert.",
            "erroricon for error and danger alerts.",
            "warningicon for the warning alert.",
            "check-circleicon for the success alert.",
            "information-oicon for the information alert.",
            "bulbicon for the tip alert.",
            "Title(optional): Conveys what event triggered the alert.",
            "Dismissal(optional): Permanently removes the alert for a user.",
            "Message: Text content indicating the purpose and potential next steps.",
            "Actions(optional): Buttons used to provide explicit action(s) the user can take to either remedy the alert or continue with a task."
          ]
        },
        {
          "type": "list",
          "items": [
            "Advise the user that they should be aware of, or address something related to their current context.",
            "Reaffirm to the user that a prior action, likely in a different location or context, has been successful.",
            "Educate the user about new or unused feature, or information related to their current context.",
            "In combination with form validation to help users remedy errors. See theaccessibilitysection for more."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to deliver an instance level message from an admin to all users, use abroadcast messageinstead.",
            "If you are immediately confirming a user's action while they remain in the same view, use atoastinstead.",
            "If you are promoting, soliciting feedback, or informing a user about a feature, use abannerinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Danger: Advise the user that their attention is needed to address or be aware of a critical issue that relates to the current context.",
            "Warning: Caution the user that their attention or action may be needed within the current context, but it may not be critical.",
            "Success: Reaffirm to the user that a prior action they have taken, often in a different location within the application, has been successful.",
            "Information: Provide supplemental information to the user in regards to the current context or action they are about to take.",
            "Tip: Educate the user about new or unused features, and other useful information."
          ]
        },
        {
          "type": "list",
          "items": [
            "Permanently dismissible only when the alert relates to a user's individual instance and wasn't triggered by a system condition.",
            "Permanently dismissible when a task isn't blocked or if no action is required.",
            "A dismissed alert can reappear if an action or system event reproduces it."
          ]
        },
        {
          "type": "list",
          "items": [
            "All copy within an alert should be short, actionable, and use clear language.",
            "Keep translations in mind when writing copy and followUI textguidelines."
          ]
        },
        {
          "type": "list",
          "items": [
            "Be brief and keep it to a single line by using a sentence fragment.",
            "Avoid punctuation, like periods, commas, or semicolons."
          ]
        },
        {
          "type": "list",
          "items": [
            "Provide next steps, troubleshooting actions, or links to learn about or remedy the event that triggered the alert.",
            "Avoid paraphrasing the title if one is included.",
            "Write as if the title was the first sentence of the message.",
            "Keep to one or two sentences when possible.",
            "Use sentence case and appropriate punctuation based on ourpunctuation guidelines."
          ]
        },
        {
          "type": "list",
          "items": [
            "Up to two actions can be used at a time.",
            "Primary action uses theconfirmbutton variant.",
            "Secondary action uses thedefaultbutton variant.",
            "Left aligned, except in right-to-left languages where they are right aligned and the order is the same. See buttonalignmentandorderfor more details."
          ]
        },
        {
          "type": "list",
          "items": [
            "Global: Impacts the entire experience, is always full-width, and is placed directly below the breadcrumb bar.Full-width danger alert",
            "Page-level: Appears near the top of a page, directly above a header section, and is restricted to the content container width, which can be either fixed or fluid, depending on a user’s preference.Page-level danger alert in the main content area with space above and below",
            "In-page: Within a section of the page when the message is specific to that content.In-page danger alert contextually placed with space above and below"
          ]
        },
        {
          "type": "list",
          "items": [
            "Usesposition: stickyto keep critical information in view as the page scrolls.",
            "Helpful when an alert is added without a page refresh and its position would otherwise be out of view.",
            "Usually is reserved for errors, as they need to be addressed by users.",
            "Only one sticky alert should be used at a time."
          ]
        },
        {
          "type": "list",
          "items": [
            "Multiple alerts should be avoided if at all possible, but if necessary ensure the placement of each is in the same context as the content it relates to.",
            "When multiple alerts are present in the same location, order them from most to least severe."
          ]
        },
        {
          "type": "list",
          "items": [
            "An alert should receive focus and usearia-liveto announce its presence and allow a user to interact with it immediately.",
            "If sticky positioning is used, the user must still be able to access and view focusable elements the alert may be covering.",
            "An alert is separate from, but complimentary tovalidationerror messages. In this way an alert announces that there are validation errors and links a user to each instance."
          ]
        },
        {
          "type": "list",
          "items": ["Broadcast message", "Toast"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, July 15, 2024 at 8:47 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/alert/code",
      "title": "Alert | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An alert is a system generated, contextual, and timely message to a user that may or may not result from their action."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, July 15, 2024 at 8:47 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/alert/lookbook",
      "title": "Alert | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An alert is a system generated, contextual, and timely message to a user that may or may not result from their action."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the alert component in our\n        Lookbook. Last updated at:Monday, July 15, 2024 at 8:47 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/avatar",
      "title": "Avatar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An avatar represents a unique entity, like a person, group, or project."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Image or identicon: A unique image or fallback representing the object.",
            "Label and sub-label(optional): Text corresponding to the image or identicon."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use an avatar to consistently represent a person, group, or project where the visual or semantic relationship provides context to the content it's in proximity to."
          ]
        },
        {
          "type": "list",
          "items": [
            "An avatar only represents a user, project, or group. Consider aniconto visually represent interactive elements or other metaphors."
          ]
        },
        {
          "type": "list",
          "items": [
            "Circle: A circle is used for a person.",
            "Square: A rounded square is used for a group or project."
          ]
        },
        {
          "type": "list",
          "items": [
            "The size of an avatar varies depending upon its context.",
            "Available sizes(in pixels): 16, 24, 32, 48, 64, 96."
          ]
        },
        {
          "type": "list",
          "items": [
            "A standalone avatar without adjacent descriptive text must use atooltipclarifying what it represents."
          ]
        },
        {
          "type": "list",
          "items": [
            "An avatar image is added to a profile, group, or project by a user.A circle avatar for a user has aGravatarfallback of either a configured or randomly generated image.A square avatar uses a text fallback (identicon) where the text character is an abbreviation of the object it represents.",
            "A circle avatar for a user has aGravatarfallback of either a configured or randomly generated image.",
            "A square avatar uses a text fallback (identicon) where the text character is an abbreviation of the object it represents.",
            "A text label identifies the subject of the avatar.",
            "A text sub-label provides content or metadata for the label."
          ]
        },
        {
          "type": "p",
          "text": "The following only applies to circle avatars."
        },
        {
          "type": "list",
          "items": [
            "A collection of avatars without labels can be grouped.",
            "When the group wraps to more than one line use a text action to show and hide additional avatars.Use \"+{#} more\" to expand the group. Replace \"#\" with the number of avatars that aren't visible.Use \"- show less\" to collapse the group.",
            "Use \"+{#} more\" to expand the group. Replace \"#\" with the number of avatars that aren't visible.",
            "Use \"- show less\" to collapse the group."
          ]
        },
        {
          "type": "list",
          "items": [
            "Avatars form a horizontal stack when space is especially limited.",
            "The number of avatars in a stack is variable, but should never cause wrapping.",
            "Use abadgeafter the last avatar to display the number of avatars that aren't visible. It can optionally be an action that leads a user to more context for all associated avatars. The badge and avatar sizes should be the same."
          ]
        },
        {
          "type": "list",
          "items": [
            "A standalone avatar image should use a descriptivealttag where the content matches that of the tooltip. See thebehaviorsection for more about the use of a tooltip.",
            "If an avatar image is adjacent to descriptive text, like a user or project name, it should use an emptyalttag so it can be ignored by a screen reader."
          ]
        },
        {
          "type": "list",
          "items": ["Badge", "Breadcrumb"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/avatar/code",
      "title": "Avatar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An avatar represents a unique entity, like a person, group, or project."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/avatar/lookbook",
      "title": "Avatar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An avatar represents a unique entity, like a person, group, or project."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/badge",
      "title": "Badge | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A badge highlights system generated metadata as an attribute of a larger object."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Icon(optional): Supports or directly communicates the metadata meaning, always left aligned.",
            "Text(optional): Conveys the status or other attribute of the metadata."
          ]
        },
        {
          "type": "list",
          "items": [
            "Highlight system generated metadata that provides additional meaning or status to a primary object, like an issue or merge request."
          ]
        },
        {
          "type": "list",
          "items": [
            "Showing metadata doesn't always require the use of a badge. If it doesn't need to be highlighted consider using a static icon or plain text.",
            "A badge shouldn't be a standalone, floating element. If it can't be placed within direct relationship to the object it supports, consider using another method that provides more context for the metadata.",
            "If the metadata is created and applied by a user, or customizable, use alabelinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Neutral muted(default): Metadata that is stable and requires minimal emphasis. Has a neutral meaning.",
            "Neutral: Metadata that is stable but special, or that requires moderate emphasis. Has a neutral meaning.",
            "Info: Metadata that is noteworthy, or communicates a state of active progress. Has a neutral to slightly positive meaning.",
            "Success: Metadata that is positive or desired. Has a clearly positive connotation.",
            "Warning: Metadata that is sub-optimal but not critical. Has a slightly negative meaning.",
            "Danger: Metadata that is critical or problematic. Has a strongly negative meaning.",
            "Tier: Metadata that indicates which product tier an entity belongs to."
          ]
        },
        {
          "type": "list",
          "items": [
            "A badge is static (non-interactive) by default.",
            "A badge should link to the object it refers to if the user isn't seeing the most detailed state of that object (for example, the object's detail page)."
          ]
        },
        {
          "type": "list",
          "items": [
            "Information can be represented by an icon, text, or both together.",
            "Avoid long text strings.",
            "When text overflows the width, it's truncated and aided by atooltip(content doesn't wrap).",
            "Text can be emphasized withboldweight, but use sparingly.",
            "Text can contain not only words, but also numbers which act ascounters(for example, a number badge in atab).",
            "When only using an icon, provide atooltipwith a brief explanation."
          ]
        },
        {
          "type": "list",
          "items": [
            "When a badge only has an icon, the icon must usearia-labelwith text that identifies the metadata.",
            "When an icon is present with text it must usearia-hidden=\"true\"to avoid being announced by a screen reader.",
            "When a badge is used as meta information to support content it's inline with, ensure that its meaning is clear. If necessary, addsr-onlytext after the badge. For example,<gl-badge>9</gl-badge><span class=\"sr-only\">to-do's</span>clarifies what \"9\" quantifies.",
            "If a badge isn't inline with the content it supports, usearia-describedby=\"badgeID\"to associate the content with the badge, wherebadgeIDis the unique ID of the badge. Note thataria-describedbysupport is mostly on focusable elements and headings."
          ]
        },
        {
          "type": "p",
          "text": "Other terms that are commonly used to refer to a badge: counter, status, chip, tag, metadata, lozenge, pill, and bubble."
        },
        {
          "type": "list",
          "items": ["Label", "Button", "Tabs"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, September 26, 2024 at 10:20 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/badge/code",
      "title": "Badge | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A badge highlights system generated metadata as an attribute of a larger object."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, September 26, 2024 at 10:20 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/badge/lookbook",
      "title": "Badge | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A badge highlights system generated metadata as an attribute of a larger object."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the badge component in our\n        Lookbook. Last updated at:Thursday, September 26, 2024 at 10:20 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/banner",
      "title": "Banner | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A banner promotes awareness of a new feature or high-priority research initiative."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Illustration(optional): Compliments the content.",
            "Title: Header for the content.",
            "Message: Text content indicating the purpose and potential next steps.",
            "Dismissal: Removes the banner for a user.",
            "Action: A single button to provide an explicit action the user can take based on the message."
          ]
        },
        {
          "type": "p",
          "text": "A banner should be used sparingly and with consideration of its impact to neighboring components and the overall user experience to:"
        },
        {
          "type": "list",
          "items": [
            "Inform a user of a feature that isn't enabled.",
            "Promote a new feature over a limited amount of time. For example, while a feature is inbetaor within a singlemajor version.",
            "Solicit user feedback."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to communicate that a feature hasn't been configured or used, consider using anempty stateinstead.",
            "If you're giving tips and hints for an existing or established feature, consider thetip alert variantinstead.",
            "If you need to communicate system status, consider using analertinstead.",
            "If a user can't take immediate action, activate a feature, or benefit from the content, then the banner shouldn't be displayed."
          ]
        },
        {
          "type": "list",
          "items": [
            "Introduction: Provide a basic introduction to help users get started with an existing feature. Illustration optional.",
            "Promotion: A promotional message to encourage exploring or upgrading to a new feature. Illustration optional."
          ]
        },
        {
          "type": "list",
          "items": [
            "A banner can always be dismissed.It doesn't reappear by default, but in rare circumstances the banner can reappear after 7 days have passed.",
            "It doesn't reappear by default, but in rare circumstances the banner can reappear after 7 days have passed.",
            "The action should direct a user to one of the following:Docs for an installation guide.Where they can upgrade their plan to enable a feature.A format for contributing or providing feedback.",
            "Docs for an installation guide.",
            "Where they can upgrade their plan to enable a feature.",
            "A format for contributing or providing feedback.",
            "When using a banner to solicit feedback, ensure a clear metric of success is set to remove the banner once complete. For example, using a banner to collect survey responses and removing the banner once 100 responses are collected."
          ]
        },
        {
          "type": "list",
          "items": [
            "Title should be concise and indicate the purpose of the banner.",
            "The message describes the benefits of performing the action.",
            "An optionalillustrationto support the message uses thesmallillustration size androundcontainer shape."
          ]
        },
        {
          "type": "list",
          "items": [
            "Similar toalert placement, the content within the banner will determine its placement on the page.",
            "Generally speaking, an introduction banner should be used at the page-level and relate to all content on the page, whereas a promotion banner can either be used at the page-level or in-page level. If in-page level is used, the banner should be placed directly above the content it relates to."
          ]
        },
        {
          "type": "list",
          "items": [
            "When an illustration is used, it should be hidden from screen readers witharia-hidden=\"true\"."
          ]
        },
        {
          "type": "list",
          "items": ["Alert", "Broadcast message", "Button", "Empty states"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, July 16, 2024 at 7:56 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/banner/code",
      "title": "Banner | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A banner promotes awareness of a new feature or high-priority research initiative."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, July 16, 2024 at 7:56 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/banner/lookbook",
      "title": "Banner | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A banner promotes awareness of a new feature or high-priority research initiative."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the banner component in our\n        Lookbook. Last updated at:Tuesday, July 16, 2024 at 7:56 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/breadcrumb",
      "title": "Breadcrumb | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A breadcrumb is a navigational element to help a user understand the current location in the application as well as content structure and hierarchy."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Avatar(optional): Prefixes a group or project link.",
            "Link: Opens the page in the same window.",
            "Separator: A forward slash character/separates each link."
          ]
        },
        {
          "type": "list",
          "items": [
            "A breadcrumb should exist on every page of the application, except for the register and sign in page, to show the hierarchy in the context of the current page."
          ]
        },
        {
          "type": "list",
          "items": ["If you need to link to sibling or related pages."]
        },
        {
          "type": "list",
          "items": [
            "An avatar can appear to the left of the text for any group or project in the breadcrumb.",
            "A bottom border may be applied to a parent container to visually distinguish the breadcrumb from the content of the page."
          ]
        },
        {
          "type": "list",
          "items": [
            "The full breadcrumb path should remain visible when there's enough horizontal space to fit on one line.",
            "When space is limited, use anellipsis buttonto collapse links from left to right.",
            "Collapsed items are revealed with a flat hierarchy in asimple disclosure dropdownwhen selecting the ellipsis button.",
            "All but the last breadcrumb item is truncated to 128px if there isn't enough horizontal space to fit them on one line."
          ]
        },
        {
          "type": "list",
          "items": [
            "Ignore theGitLabinstance name in the breadcrumb.",
            "Every item must contain a link to the page it's associated with.",
            "The breadcrumb should include the name of the context matching the navigation sidebar.",
            "For a page that presents the details of an individual item (issue, merge request, snippet, pipeline, job, milestone, commit, tag, environment, cluster, pipeline schedule), the last breadcrumb element should include the element's ID. For example, merge request!1234is represented asGitLab.org / GitLab / Merge requests / !1234.",
            "For a page that allows a user to create a new item, the last breadcrumb element should include the wordNewfollowed by the name of the element. For example,GitLab.org / GitLab / Issues / NewbecomesGitLab.org / GitLab / Issues / New issue. Only using theNewtext may cause confusion when translating GitLab into different languages.",
            "Use sentence casefor each breadcrumb element.",
            "Collection titles that group primary navigation sections are not included in the breadcrumb."
          ]
        },
        {
          "type": "p",
          "text": "Some pages have a special breadcrumb path to make the text intuitive. They are defined as follows:"
        },
        {
          "type": "list",
          "items": [
            "Anavelement witharia-label=\"Breadcrumb\"wraps an ordered list to provide a navigation landmark.",
            "Ensure the last item in a breadcrumb is a link (rather than plain text) so it's included in the focus order. Added benefits of doing so include making it easy to generate a pristine page link (without a trailing anchor reference to a heading, diff, comment, or other location within the page) or to refresh the page.",
            "aria-current=\"page\"is on the last link to indicate that it's the current page.",
            "See theWAI-ARIA Authoring Practices Breadcrumb Examplefor more details."
          ]
        },
        {
          "type": "list",
          "items": ["Avatar", "Button"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/breadcrumb/code",
      "title": "Breadcrumb | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A breadcrumb is a navigational element to help a user understand the current location in the application as well as content structure and hierarchy."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/breadcrumb/lookbook",
      "title": "Breadcrumb | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A breadcrumb is a navigational element to help a user understand the current location in the application as well as content structure and hierarchy."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/broadcast-message",
      "title": "Broadcast message | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A broadcast message delivers an instance level message from the admin to all users."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Icon: Thebullhornicon indicates an announcement.",
            "Message: Text content indicating the purpose.",
            "Dismiss button(optional): Permanently removes the broadcast message for a user."
          ]
        },
        {
          "type": "list",
          "items": [
            "Make an announcement or provide a notification from an admin to all users within a single instance."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to provide a system generated, contextual, and timely message to a user, use analertinstead.",
            "If you are immediately confirming a user's action while they remain in the same view, use atoastinstead."
          ]
        },
        {
          "type": "p",
          "text": "Background color is chosen by the admin from a set of swatches when creating the broadcast message. Expires after a set period defined by the admin, but may also be dismissed by a user if the dismiss setting is enabled by the admin. Contains a small amount of text content that uses the container width when user preference is set to use afixed widthlayout."
        },
        {
          "type": "list",
          "items": [
            "At the top of every page.",
            "Multiple broadcast messages stack vertically."
          ]
        },
        {
          "type": "list",
          "items": [
            "Part of the DOM order on load, and should flow in the natural reading order.",
            "The dismiss button usesaria-label=\"Dismiss\"."
          ]
        },
        {
          "type": "list",
          "items": ["Alert"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, April 29, 2024 at 3:30 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/broadcast-message/code",
      "title": "Broadcast message | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A broadcast message delivers an instance level message from the admin to all users."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, April 29, 2024 at 3:30 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/broadcast-message/lookbook",
      "title": "Broadcast message | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A broadcast message delivers an instance level message from the admin to all users."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the broadcast_banner component in our\n        Lookbook. Last updated at:Monday, April 29, 2024 at 3:30 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/button",
      "title": "Button | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A button indicates a distinct action and executes a function. Text, icon, or a combination of the two express the action and are supported by the variant and occasionally a tooltip."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Icon: Icon indicating or supporting the action.",
            "Label: Text clarifying the action.",
            "Dropdown:chevron-downicon indicating a dropdown menu.",
            "Emoji: Pictogram character.",
            "Badge(optional): Counts the number of items or provides a status related to the action."
          ]
        },
        {
          "type": "list",
          "items": [
            "A button (<button>) element is used to indicate an action."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you are directing a user to a new location, consider using an anchor (<a>) element, which can also be styled like a button when actions and destinations are present in the same set of controls."
          ]
        },
        {
          "type": "p",
          "text": "Use categories to bring varying action hierarchy and emphasis that guide the user when performing tasks. Choose a category based on the overall hierarchy on a given page, as well as the individual contexts found within. Defining context depends on the hierarchy of information displayed on the screen, the motivated user flow, and the available tasks. For example, a settings page may have multiple equally important contexts, each requiring its own primary button to complete a task. Note that contexts may be temporary, such as a modal. Too many secondary actions in a single view can flip the intended hierarchy. For example, a list of items where each has a secondary danger button can be overwhelming and distracting, especially when that action is repetitive and understood. In cases like these it may be better to use the tertiary category or the default variant in order to preserve the intended hierarchy."
        },
        {
          "type": "list",
          "items": [
            "Primary: Provide the strongest visual emphasis to an action with a solid background — one per context.",
            "Secondary: Indicate a supplemental action with a border that matches the variant and a background that is close to, or the same as the page background color — one or more per context.",
            "Tertiary: Incorporate a borderless action into the flow that has a background during interaction for affordance — one or more per context."
          ]
        },
        {
          "type": "p",
          "text": "Use the visual style (variant) in combination with an icon or label to identify the type of action performed and its importance compared to other actions in the same context."
        },
        {
          "type": "list",
          "items": [
            "Default: Use for an action that doesn’t warrant prominence, typically when a primary variant is already used in the same context.",
            "Confirm: Indicate a positive or negative non-destructive action that is confirmation of what the user desires to take place.",
            "Danger: Highlight an action that is destructive and undoable or has potentially detrimental consequences. In a long list of items where each contains a destructive action, use thedefaultvariant to avoid having many danger buttons overwhelm the page. Any final confirmation that is destructive must use thedangervariant (unless a browser dialog is used).",
            "Dashed: Highlight an action to indicate an object has yet to be created.",
            "Link: Visually style an action like an anchor link when using alinkisn't possible."
          ]
        },
        {
          "type": "list",
          "items": [
            "Medium(default): The medium button size is sufficient in most cases and provides the largest possible click target size.",
            "Small: Decrease the size of a button to prevent it from competing with a primary button, or to decrease the overall size of a group or string of buttons. Although it's possible to use the small size for an icon-only button, using the default medium size is encouraged to provide a larger click target.",
            "Block: Expand the width of a button to fill the parent container which can help provide balance in mobile (xsbreakpoint) layouts."
          ]
        },
        {
          "type": "p",
          "text": "States change visually and/or programmatically depending on user interaction or a predetermined state. For example, programmatically moving focus to a button in a modal when it opens. This ensures they're accessible and feel reactive for different modalities."
        },
        {
          "type": "list",
          "items": [
            "Disabled: Prevents the user from performing an action. It lets the user know a certain action would be possible if circumstances were different. All buttons regardless of variant appear the same when disabled. Additionally, they will show the \"not-allowed\" cursor when hovered. To includetooltiporpopovercontent with a disabled button, wrap the button with an element that can receive focus and trigger the content."
          ]
        },
        {
          "type": "list",
          "items": [
            "Loading: Place a button in the loading state with theloadingproperty. The loading status is indicated by the use of aspinner, and the button is disabled while the state persists.Forbuttons containing text, the spinner is added to the left of the button, before the icon or label.For icon buttons, the spinner replaces the icon.",
            "Forbuttons containing text, the spinner is added to the left of the button, before the icon or label.",
            "For icon buttons, the spinner replaces the icon.",
            "Selected: Acts like a toggle that indicate whether or not an option is in a selected state. To indicate to screen readers that the button functions as a toggle it should havearia-pressed=\"true\"to align with the visually selected state, otherwisearia-pressed=\"false\"."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use concise language that conveys what happens when the button is activated.",
            "Usesentence case.",
            "Append an ellipsis (…) to the button label text when the action will require additional input from the user before final completion. Does not apply todanger actions.",
            "Try not to use text-only and icon-only buttons in the same context.",
            "For destructive actions, use clear text and always indicate what is being destroyed. For example, useDelete pageinstead of justDelete.",
            "For buttons that copy content to the clipboard, don't useto clipboard. For example, useCopy branch nameinstead ofCopy branch name to clipboard."
          ]
        },
        {
          "type": "p",
          "text": "Use either an icon or text in buttons, not both, as neither should require the other to be understood. While some buttons combine icon and text, this approach is generally not recommended.Icon-only buttonshave additional considerations."
        },
        {
          "type": "list",
          "items": [
            "Only use icons fromGitLab's SVG library.",
            "Icons use the default size (16×16px)."
          ]
        },
        {
          "type": "list",
          "items": [
            "A singlebadgecan be used to the right of a text label to indicate status or a numeric count.",
            "A badge that includes a numeric count should be followed by a<span>with thesr-onlyclass providing a text description of what's being counted.",
            "The badge variant should match the button variant. For example, a danger badge within a danger button.",
            "The badge size should match the button size. For example, a small badge within a small button."
          ]
        },
        {
          "type": "p",
          "text": "Buttons can be aligned left, right, or center depending on the context.\nMultiple alignments can be combined within a single screen, but not within an individual context. For example, on a single screen the main content uses left alignment, while the sidebar with multiple settings uses right alignment."
        },
        {
          "type": "list",
          "items": [
            "Left alignment: In page content and forms where the content is typically unconstrained other than by the grid layout. In these instances an F-pattern (top to bottom and left to right in a horizontal movement) is common for reading flow, and buttons align with other content on the page like headings, lists, input labels, and form labels. Left alignment is a benefit foraccessibilityin many ways, including reading flow, focus order, and page zoom where right-aligned buttons may be initially off screen.Left-aligned buttons in a formLeft-aligned buttons in a page flow",
            "Right alignment: In constrained containers like modals and dialogs, flows that continue in a progressive direction, actions with a global impact, and toolbars. In these instances a Z-pattern (top to bottom and left to right with a diagonal, scanning movement) is common for reading flow. In these instances a user may be taking a progressive action, like affirming a modal, or an action upon a section, like formatting text in a comment.Right-aligned buttons in a modalRight-aligned buttons in a sidebar with multiple settingsRight-aligned buttons as global actionsRight-aligned buttons in toolbars",
            "Center alignment: Only used for empty states where content is promotional or the actions are the only ones available in context.Center-aligned buttons in an empty state",
            "Right to left languages: Reverse button alignment forright-to-left languageswhile maintaining the same order.",
            "Additional considerations:Do: Keep buttons visually groupedDon't: Separate buttons or mix alignment (unless the separated button is destructive)Do: Keep destructive buttons separateDon't: Group destructive buttons with confirmation buttonsDo: Keep buttons inline when space allowsDon't: Stack buttons vertically if there is space to place them inline"
          ]
        },
        {
          "type": "list",
          "items": [
            "Affirmative actions are positioned to the outer edge of a container. This means that on left-aligned buttons the affirmative action is the left-most action, and on right-aligned buttons, the affirmative action is the right-most action.",
            "An affirmative action is something that takes the users further in their journey (for example, Save or Delete), while a dismissive action takes a user back (for example, Cancel). Depending on the context, an affirmative action may be destructive.Affirmative action on left edge for left alignmentAffirmative action on right edge for right alignment",
            "The visual hierarchy is primary buttons on the outer edge, followed by secondary buttons, and so on.",
            "One exception to the visual hierarchy is an ellipsis button. When using an ellipsis button, place it on the outer edge.Hierarchy from left to right for left alignmentHierarchy from right to left for right alignment"
          ]
        },
        {
          "type": "p",
          "text": "Buttons can contain different content depending on the situation. For example, some buttons only have text, while others only have an icon. A combination may be used when space allows and more emphasis is required. Icons are always positioned to the left of text. Two icons should never be used in the same button, unless it is an icon dropdown."
        },
        {
          "type": "list",
          "items": [
            "Label: A button may also be attached to a label, such as a commit SHA.",
            "Emoji: An emoji button allows a user to react to content with an emoji. The button uses the medium (default) size and is displayed with a count of how many times the reaction has been applied. A selected state visually indicates when the current user has added the reaction."
          ]
        },
        {
          "type": "p",
          "text": "A dropdown button triggers a panel with adisclosureorcombobox.Which dropdown panel should you use?"
        },
        {
          "type": "list",
          "items": [
            "Text and icon dropdowns: A dropdown button uses thechevron-downicon to the right of the text label. The chevron is the only icon that should be present with a text label.",
            "Split dropdown: A dropdown button is split when additional related actions are available. The left half displays the default action and the additional related actions are contained within the attached dropdown on the right half. The options available in the dropdown perform the action on click."
          ]
        },
        {
          "type": "list",
          "items": [
            "An icon can be used in place of text.",
            "Use atooltipto provide context, unless the action may be universally understood, like a closing action using theclose icon.",
            "An icon-only button shouldn't be used to toggle between two states. If the icon and action of the button change after clicking it, it can be difficult to determine if the icon represents the current or future state. For example, a button that uses theeyeicon and changes toeye-slashwhen clicked doesn't make it clear on its own whether or not it represents that an objectisconfidential orwill beas a result of clicking. Use atoggleorcheckboxwith a label to more clearly indicate alternating states. Note that this scenario is different than an icon-only button with aselected state, as there the icon doesn't change."
          ]
        },
        {
          "type": "p",
          "text": "An ellipsis button is a specific kind of icon-only button that allows for expanding content inline. It can be used when content is hidden for the purpose of not overloading the user or because of initial space constraints. Button groups visually group buttons that have similar or related actions together to emphasize the relationship and aid with arrangement and spacing. When button groups are used to select an option from a series of options, a single button in a button group can act as an indicator of the currently selected state. Paginationandsegmented controlsare specific types of button groups."
        },
        {
          "type": "list",
          "items": [
            "Maintain parity between focus order and visual order (don't use CSS to reorder buttons).",
            "A visible focus state must always be present, regardless of the mode of operation (mouse, keyboard, other). We currently rely on:focusfor this state. In the future, we may explore the use of:focus-visible, but more research needs to happen first, specifically around browser heuristics. Many kinds of users benefit from visible focus indicators (like a focus ring), not just keyboard users. FromUnderstanding SC 2.4.7(forFocus Visible(Level AA)): \"People with attention limitations, short term memory limitations, or limitations in executive processes benefit by being able to discover where the focus is located.\" Matsuko'sUnderstanding Visible Focus Indicatorslists additional examples of users that benefit from visible focus indicators:Users using alternative input devices, such as keyboards and switches.Users with low vision.Users with cognitive disabilities, especially those that affect memory or attention such as dementia and ADHD (Attention-Deficit/Hyperactivity Disorder).",
            "Users using alternative input devices, such as keyboards and switches.",
            "Users with low vision.",
            "Users with cognitive disabilities, especially those that affect memory or attention such as dementia and ADHD (Attention-Deficit/Hyperactivity Disorder).",
            "Icon-only buttons must usearia-labelto indicate the action.",
            "When an icon is used with a text label, the icon should be hidden from screen readers witharia-hidden=\"true\"."
          ]
        },
        {
          "type": "p",
          "text": "These variants have been deprecated, don‘t use in production:"
        },
        {
          "type": "list",
          "items": [
            "Info: Activation or informative processes, replaced byconfirmvariant.",
            "Success: Positive actions such as the creation or addition of items, replaced byconfirmvariant.",
            "Warning: Actions that can be undone or rectified but warrant caution, replaced byconfirmordefaultvariant depending on context."
          ]
        },
        {
          "type": "list",
          "items": [
            "Dropdown disclosure",
            "Segmented control",
            "Pagination",
            "Tooltip",
            "Spinner",
            "Badge",
            "Modal"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/button/code",
      "title": "Button | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A button indicates a distinct action and executes a function. Text, icon, or a combination of the two express the action and are supported by the variant and occasionally a tooltip."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/button/lookbook",
      "title": "Button | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A button indicates a distinct action and executes a function. Text, icon, or a combination of the two express the action and are supported by the variant and occasionally a tooltip."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the button component in our\n        Lookbook. Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/card",
      "title": "Card | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A card displays a single group of content within a set of similar groups."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Header(optional): Contains the title.",
            "Title(optional): Conveys the purpose of the card.",
            "Picture(optional): Visual indication about the content of the card",
            "Content: Contains a wide variety of content types and controls depending on the purpose.",
            "Actions(optional): Buttons or links used to provide explicit action(s) the user can take related to the card content."
          ]
        },
        {
          "type": "list",
          "items": [
            "Display a single, concise group of content within a set of similar, related groups. As a set, each card is meaningful on its own, but also in relationship and comparison to other cards."
          ]
        },
        {
          "type": "list",
          "items": [
            "A card shouldn't be used for the sole purpose of styling a single block of content. Use availableutility classesinstead.",
            "If you're only displaying static text or items that don't require comparison or additional grouping, consider using a semantic HTML list instead.",
            "If you need to present or compare data, consider using atableinstead.",
            "If you need to show a high level overview of a single data point, use asingle statcomponent."
          ]
        },
        {
          "type": "p",
          "text": "There are two different variants for the cards: vertical and horizontal."
        },
        {
          "type": "list",
          "items": [
            "Horizontal: Horizontal cards work well on larger screens. They can be used in a maximum of 2 columns due to their larger width.",
            "Vertical: Vertical cards work well on smaller screens and increase readability. They can be used in a maximum of 3 colums due to their smaller width."
          ]
        },
        {
          "type": "list",
          "items": [
            "Card width is fluid by default.",
            "A card can be static or draggable when there is an option to reorder it within a set of other cards.When dragging a card, any adjacent cards should remain visible.For touch devices, there should be a longer hold on the card to avoid collision with the act of scrolling.When a card is currently being dragged, there should be an indication it's in a draggable state.",
            "When dragging a card, any adjacent cards should remain visible.",
            "For touch devices, there should be a longer hold on the card to avoid collision with the act of scrolling.",
            "When a card is currently being dragged, there should be an indication it's in a draggable state.",
            "If a card contains an action, a button or link inside the card should trigger the action, not the entire card."
          ]
        },
        {
          "type": "list",
          "items": [
            "All copy within a card should be short, actionable, and use clear language.",
            "A card should utilize theskeleton loaderpattern when possible to represent loading content within."
          ]
        },
        {
          "type": "list",
          "items": [
            "Be brief and keep it to a single line by utilizing a sentence fragment.",
            "Avoid using punctuation such as periods, commas, or semicolons.",
            "Use a full stop only when it's a full sentence."
          ]
        },
        {
          "type": "list",
          "items": [
            "Since a card can be used for many purposes, body content can be just about anything from an image to meta information and plain text.",
            "Body content for each card within a set should follow a similar pattern and structure so that the cards are scannable and consistent."
          ]
        },
        {
          "type": "list",
          "items": [
            "For horizontal layout, the image should be top/left-aligned with the content container.",
            "For vertical layout, the image should be center-aligned with the content container."
          ]
        },
        {
          "type": "list",
          "items": [
            "Buttons are left aligned, except in right-to-left languages where they are right aligned and should follow thealignment and order guidelines for buttons.",
            "Contains the primary and secondary action (if applicable) for a card.",
            "Located below the content."
          ]
        },
        {
          "type": "list",
          "items": ["Table"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/card/code",
      "title": "Card | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A card displays a single group of content within a set of similar groups."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/card/lookbook",
      "title": "Card | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A card displays a single group of content within a set of similar groups."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the card component in our\n        Lookbook. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/checkbox",
      "title": "Checkbox | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A checkbox form element represents a boolean option."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Legend(optional): A title for a group of checkboxes.",
            "Checkbox: The element that provides the visual affordance for the control.",
            "Label: Text indicating the option.",
            "Help text(optional): Used to further clarify an option."
          ]
        },
        {
          "type": "list",
          "items": [
            "In a form for a user to indicate a selection of one or more options."
          ]
        },
        {
          "type": "list",
          "items": [
            "If only one option in a set can be selected, useradio buttonsinstead.",
            "If you are wanting to have a change immediately applied when an option is selected, consider using atoggleinstead.",
            "If selecting an option would change the state or view of other content, consider using asegmented controlinstead.",
            "If choices exist outside of a form and as a menu of options, use acomboboxinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Options are stacked vertically, with one checkbox per line."
          ]
        },
        {
          "type": "list",
          "items": [
            "Unchecked: The option is unselected.",
            "Checked: The option is selected and thecheckedattribute is applied.",
            "Indeterminate: Occurs when nested checkboxes under a parent checkbox are in both checked and unchecked states. The indeterminate state can only be programmatically set with Javascript (example).",
            "Disabled: Any of the previous states can also be disabled so that the current state can't be changed."
          ]
        },
        {
          "type": "list",
          "items": [
            "Selecting an option changes it state to either checked or unchecked.",
            "Selecting a child checkbox can change the state of a parent checkbox to either checked, unchecked, or indeterminate depending on the state of sibling checkboxes.",
            "Selecting the parent checkbox to either checked or unchecked, all children checkboxes must match its state."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use afieldsetwithlegendto group a set of checkboxes with a clear name and purpose.",
            "A text label is positioned to the right of the checkbox element (for left-to-right languages), and should be as concise as possible.",
            "Help textcan be added below the checkbox label or as a paragraph below the group."
          ]
        },
        {
          "type": "list",
          "items": [
            "Some screen readers will announce the contents of the legend before each nested input to maintain context for a user.",
            "When usingGlFormGroup, thelabelprop alone does not give the input an accessible name.",
            "Thelabel-forprop must also be provided to give the input an accessible name."
          ]
        },
        {
          "type": "code",
          "code": "<gl-form-checkboxv-model=\"status\"value=\"task-complete\">{{ __('Task complete') }}</gl-form-checkbox>"
        },
        {
          "type": "code",
          "code": "<gl-form-checkboxv-model=\"status\"value=\"task-complete\"><spanclass=\"gl-sr-only\">{{ __('Task complete') }}</span></gl-form-checkbox>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Task list')\"><gl-form-checkboxvalue=\"task-1\">{{ __('Task 1') }}</gl-form-checkbox><gl-form-checkboxvalue=\"task-2\">{{ __('Task 2') }}</gl-form-checkbox></gl-form-group>"
        },
        {
          "type": "p",
          "text": "UsingGlFormCheckboxGroup:"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Task list')\"><gl-form-checkbox-groupv-model=\"selected\":options=\"options\"/></gl-form-group>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Task list')\"label-sr-only><gl-form-checkboxvalue=\"task-1\">{{ __('Task 1') }}</gl-form-checkbox><gl-form-checkboxvalue=\"task-2\">{{ __('Task 2') }}</gl-form-checkbox></gl-form-group>"
        },
        {
          "type": "p",
          "text": "UsingGlFormCheckboxGroup:"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Task list')\"label-sr-only><gl-form-checkbox-groupv-model=\"selected\":options=\"options\"/></gl-form-group>"
        },
        {
          "type": "list",
          "items": ["Radio button", "Toggle", "Segmented control", "Select"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/checkbox/code",
      "title": "Checkbox | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A checkbox form element represents a boolean option."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/checkbox/lookbook",
      "title": "Checkbox | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A checkbox form element represents a boolean option."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/color-picker",
      "title": "Color picker | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A color picker allows users to customize a component by choosing a color option. It is only available in instances where a user is adding bespoke content that needs to be differentiated."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "list",
          "items": [
            "The user may edit the color by:Choosing a new color from the list of suggestionsUsing the color picker popoverEntering a HEX value",
            "Choosing a new color from the list of suggestions",
            "Using the color picker popover",
            "Entering a HEX value"
          ]
        },
        {
          "type": "list",
          "items": [
            "Pre-populated with the default value of#6699CC.",
            "Can only enter HEX formats."
          ]
        },
        {
          "type": "list",
          "items": [
            "Allows a user to visualize what HEX code is currently inputted."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 17, 2023 at 5:39 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/date-picker",
      "title": "Date picker | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The date picker allows a user to choose and/or input a date by using a calendar dropdown or by typing the date into a text field."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Label: Text associated with the text field.",
            "Text field: Input element that gets populated with a date.",
            "Calendar button: Opens the calendar dropdown.",
            "Clear button: Clears the text field content.",
            "Calendar dropdown: Dropdown showing the month."
          ]
        },
        {
          "type": "list",
          "items": ["Choose a date from a calendar to populate a text field."]
        },
        {
          "type": "list",
          "items": [
            "If a user needs to enter a familiar date, like a birthday, consider using a regulartext inputwithout the date picker functionality instead (see note in theReferencesection)."
          ]
        },
        {
          "type": "list",
          "items": [
            "Date picker: Choose a single date.",
            "Date range picker: Choose a start and end date."
          ]
        },
        {
          "type": "list",
          "items": [
            "The user can either type a date into the text field or choose a day from the calendar dropdown which will populate the text field with the chosen date.",
            "A user can enter a date in different formats. For example,January 22, 2020or22/01/2020. The date picker translates the format to GitLab's default (ISO 8601) in the API.",
            "For date ranges, the date picker for the end (\"To\") date only allows a user to pick a date that is either equal to or after the start (\"From\") date. The days preceding the start date will be disabled.",
            "For date ranges, the ending date month should initially default to the same month chosen for the start date.",
            "On smaller viewports, the two date text fields in a date range picker are full-width and vertically stacked so the user’s language reading direction doesn’t have an effect on the order."
          ]
        },
        {
          "type": "list",
          "items": [
            "The label for a date picker can specify what the date selection is for, while the date range picker labels should be \"From\" for the start date and \"To\" for the end date.",
            "The text field uses \"YYYY-MM-DD\" as placeholder text to indicate the expected format of time to be entered.",
            "The text field accepts all special characters and numbers.",
            "The current month (MM) is the default month shown in the calendar dropdown.",
            "The order of the “From” and “To” text fields should match the user’s reading language setting (left-to-right by default).",
            "When the date range picker limits the number of selectable days, indicate it in the UI with text that summarizes the number of days currently selected, followed by aninfo icon. The tooltip on the info icon should clarify the date range limit."
          ]
        },
        {
          "type": "list",
          "items": [
            "In Adrian Roselli's article,Maybe You Don't Need a Date Picker, he states that \"Users generally do not want a complex date picker every time you ask for any date. At least not users with a keyboard.\" He follows therobustness principlewhere you should \"be conservative in what you do, be liberal in what you accept from others\" in his exploration. A date picker can simply be overwhelming for something as simple as entering a familiar date, especially for keyboard-only users. Anecdotally he backs this up with 20 years of research. To be clear though, he also mentions that a plain text field will not work \"if you need to see chosen dates, unavailable dates, weekends, holidays, date spans, date ranges, dates where counts from start or end dates matter, and so on.\"",
            "In HTML5 an input withtype=\"date\"is available, butaccessibility supportfor screen readers and voice control is inconsistent."
          ]
        },
        {
          "type": "list",
          "items": ["Text input"]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/date-picker/code",
      "title": "Date picker | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The date picker allows a user to choose and/or input a date by using a calendar dropdown or by typing the date into a text field."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/date-picker/lookbook",
      "title": "Date picker | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The date picker allows a user to choose and/or input a date by using a calendar dropdown or by typing the date into a text field."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/drawer",
      "title": "Drawer | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A drawer presents context-specific information and/or actions without leaving the current page."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Header: Contains the title, close button, and actions.",
            "Title: Conveys the purpose of the drawer.",
            "Close button: Closes the drawer.",
            "Top-level actions(optional): Buttons or links used to provide explicit action(s) the user can take related to the entire drawer content.",
            "Content: Contains a wide variety of content types and controls depending on the purpose, related content, and contextual user tasks.",
            "Contextual actions(optional): Buttons or links used to provide contextual action(s) in relation to the content within the drawer."
          ]
        },
        {
          "type": "list",
          "items": [
            "Display additional or supplemental information to the user about an element or item.",
            "Make simple, contextual tasks available, for example adding or editing items within forms that would create scrolling or other usability issues if presented inline or in a modal."
          ]
        },
        {
          "type": "list",
          "items": [
            "If supplemental content isn't suited for small areas or is part of a flow, consider loading a new page or revealing content with anaccordioninstead.",
            "A drawer provides contextual information while also keeping the main object in view. If you need to view specific content while only maintaining underlying context, consider using amodalinstead.",
            "To confirm an action, consider using atoastormodalinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "The drawer follows themotion guidelinesand slides in from the right side of the viewport.200mswith an ease-in animation.By default, the drawer is above all page content.If full-width elements exist on the page and you do not want the drawer to cover them then you may specify the drawer to be embedded in the page and push some or all of the content rather than covering it.",
            "200mswith an ease-in animation.",
            "By default, the drawer is above all page content.",
            "If full-width elements exist on the page and you do not want the drawer to cover them then you may specify the drawer to be embedded in the page and push some or all of the content rather than covering it.",
            "Only one drawer can be open on a page at a time.",
            "A drawer should never take the user by surprise — let a user’s action open it.",
            "A drawer can be closed with the close button or theEsckey.",
            "When content overflows the drawer height, it scrolls vertically under the header.",
            "If the content is likely to scroll, consider placing contextual action in a fixed footer. Otherwise, contextual actions should always flow inline with the content.",
            "If the content within the drawer container exceeds the height, then a scrim (gradient overlay) appears at the bottom of the container as an overflow affordance. The scrim is removed when a user has scrolled to the end of the content.",
            "The drawer maintains its behavior down to the smallest breakpoint, at which point it takes up the full viewport width.",
            "The drawer should have a width of400px."
          ]
        },
        {
          "type": "list",
          "items": [
            "All copy within a drawer should be short, actionable, and use clear language.",
            "The drawer should utilize theskeleton loaderpattern when possible to represent loading content.",
            "If an empty state is required, please follow theempty-stateguidelines.",
            "If a form is added to the drawer, followformguidelines when deciding the layout of components, includingbuttons.",
            "Left aligned, except in right-to-left languages where the content is right aligned.",
            "For drawers that show documentation, the content is stored in a markdown file in thegitlabrepo.\nFor details, see thecontribution documentation."
          ]
        },
        {
          "type": "list",
          "items": [
            "Be brief and keep it to a single line by utilizing a sentence fragment.",
            "Avoid using punctuation such as periods, commas, or semicolons.",
            "Use a full stop only when it's a full sentence.",
            "Title should use a level 2 (h2) heading."
          ]
        },
        {
          "type": "list",
          "items": [
            "Left aligned, except in right-to-left languages where they are right aligned and the order is the same. See buttonalignmentandorderfor more details."
          ]
        },
        {
          "type": "list",
          "items": [
            "Drawer states (expanded/collapsed) should be announced by a screen reader.",
            "The focus should move to the drawer once opened. An intentional keyboard trap keeps tab order (looped) within the drawer until it is closed. This is so a user cannot focus on anything outside or under the drawer.",
            "TheEsckey should close the drawer along with activating the close icon button."
          ]
        },
        {
          "type": "list",
          "items": [
            "Modal",
            "Toast",
            "Accordion",
            "Skeleton loader",
            "Button",
            "Animation fundamentals",
            "Empty states"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/drawer/code",
      "title": "Drawer | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A drawer presents context-specific information and/or actions without leaving the current page."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/drawer/lookbook",
      "title": "Drawer | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A drawer presents context-specific information and/or actions without leaving the current page."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-combobox",
      "title": "Combobox | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A combobox is a panel of options typically opened by a button or text input."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Text input or button: Triggers the panel to open or close.",
            "Panel: Wraps the content.",
            "Header(optional): Provides more context for the options.",
            "Header action(optional): Changes the selected state of options.",
            "Listbox: A group of options.",
            "Option: Item available for selection.",
            "Scrim: Gradient overlay when items overflow the panel.",
            "Footer(optional): Contains 2 or less actions related to the options.",
            "Search within(optional forcollapsible listbox): A nested input can limit the number of available options.",
            "Section title(optional): Groups options under a shared title.",
            "Selected option: Option in selected state."
          ]
        },
        {
          "type": "list",
          "items": [
            "To select options within a listbox (role=\"listbox\") of single or multiselect options (role=\"option\").",
            "For sorting a list (seereference).",
            "If an option is more than just text. For example, if an avatar or other graphical elements is included as part of the option."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to solely display a list of actions (semantic buttons or links, notrole=\"option\"), then use adisclosureinstead.",
            "If a user is selecting a single text option from a group of options within aform, consider using aselect,radio group, orcheckboxesinstead.",
            "If you need a way for a user to expand or collapse a content section, use anaccordioninstead."
          ]
        },
        {
          "type": "p",
          "text": "There are two combobox variants that vary based on how they are triggered, whether through a button or a text input.\nSeediagramfor additional help in choosing between them."
        },
        {
          "type": "list",
          "items": [
            "Collapsible listbox(GlCollapsibleListbox, most common): A button triggers a panel of single or multiselect options.",
            "Combobox(GlFormCombobox): A text input triggers a panel of options. An optional button next to the input can also trigger the panel."
          ]
        },
        {
          "type": "p",
          "text": "Abuttonthat triggers a combobox comes in a few variants to fit different situations."
        },
        {
          "type": "list",
          "items": [
            "Dropdown button: A dropdown button has achevron-downicon to the right of the text label to indicate it will toggle additional content.",
            "Icon dropdown: An icon button, like one that uses the vertical or horizontalellipsis icons, functions similarly to other trigger buttons with the only difference being only an icon label with no visible text."
          ]
        },
        {
          "type": "list",
          "items": [
            "Trigger: Thetext inputorbuttonwidth is determined by the properties available for each of those components.",
            "Panel: Has a minimum and maximum width and a maximum height to keep content near the trigger and to keep panels consistent throughout the UI. The height of the panel is initially set to the height of its content (dynamic height) when less than the maximum, but can optionally be set to always use a fixed height."
          ]
        },
        {
          "type": "list",
          "items": [
            "By default, the panel opens below the trigger button and is aligned to the left of it.",
            "The panel can be positioned to the right of the trigger button if it makes more sense in the layout.",
            "When there isn't enough space in the viewport, the panel uses edge detection to position it above and/or aligned to the right of the trigger button.",
            "When the panel boundaries don't allow it to flip to the other side of the trigger button because there isn't enough space, it shifts along the x-axis.",
            "There will always be some padding between the vertical edges of the panel and the vertical edges of the viewport.",
            "The tip of the panel points at the trigger and is center-aligned with it by default.",
            "If the content within the panel exceeds the maximum height then a scrim (gradient overlay) appears at the bottom of the panel as an overflow affordance. When a user has scrolled to the bottom of the overflowed content the scrim is removed.",
            "A panel is closed by clicking outside of it, using theEsckey, or by focus moving to an element outside of the component.",
            "Two or less actions that don't scroll can be fixed in a footer at the bottom of a panel. Unlike a header action, a footer action doesn't change the state of the options within the panel.",
            "Collapsible listbox:An optional text inputwithinthe panel can limit available options when a term is entered.For single select:When an option is selected, the panel is closed and the control updated.IfAnyorAllis included, it should be the first option to indicate that any or all parameters can apply.For multiselect:When one or more options are selected, they can optionally be grouped in a section above unselected options, although they may not be visibly grouped until the selections are applied and the panel is opened again.When one or more options are selected, the panel stays open until the user closes it by one of the available methods. AnApplybutton is not necessary. Depending on the logic, the selection may sync with the database on each selection and update the UI in real-time, or it may sync with the database after the panel is closed and then update the UI.A header action can change per use case. For example, aSelect allaction can change toUnselect allafter options are selected.",
            "An optional text inputwithinthe panel can limit available options when a term is entered.",
            "For single select:When an option is selected, the panel is closed and the control updated.IfAnyorAllis included, it should be the first option to indicate that any or all parameters can apply.",
            "When an option is selected, the panel is closed and the control updated.",
            "IfAnyorAllis included, it should be the first option to indicate that any or all parameters can apply.",
            "For multiselect:When one or more options are selected, they can optionally be grouped in a section above unselected options, although they may not be visibly grouped until the selections are applied and the panel is opened again.When one or more options are selected, the panel stays open until the user closes it by one of the available methods. AnApplybutton is not necessary. Depending on the logic, the selection may sync with the database on each selection and update the UI in real-time, or it may sync with the database after the panel is closed and then update the UI.A header action can change per use case. For example, aSelect allaction can change toUnselect allafter options are selected.",
            "When one or more options are selected, they can optionally be grouped in a section above unselected options, although they may not be visibly grouped until the selections are applied and the panel is opened again.",
            "When one or more options are selected, the panel stays open until the user closes it by one of the available methods. AnApplybutton is not necessary. Depending on the logic, the selection may sync with the database on each selection and update the UI in real-time, or it may sync with the database after the panel is closed and then update the UI.",
            "A header action can change per use case. For example, aSelect allaction can change toUnselect allafter options are selected.",
            "Combobox:A user can either type a term in the text input or select an available option.The text input can use autocomplete capability based on available options.When an option is selected, the panel is closed and the text input updated with the selection.",
            "A user can either type a term in the text input or select an available option.",
            "The text input can use autocomplete capability based on available options.",
            "When an option is selected, the panel is closed and the text input updated with the selection."
          ]
        },
        {
          "type": "list",
          "items": [
            "Error validation is shown inline and may happen in real-time or on submission if used in a form.",
            "Real-time validation should help a user understand and remedy the error if possible.",
            "A validation message should always be visible and not placed in a tooltip. The message is placed directly below the trigger element, similar toform validation, and both are presented in an error state, which changes the text and border color of the trigger element to red."
          ]
        },
        {
          "type": "list",
          "items": [
            "Placeholder text in an input should only be used for extra, non-essential information when the input purpose is still understood in its absence; it's not a replacement for a visible label. An exception is thesearchinput, which includes asearchicon to further clarify its purpose.",
            "A header can provide context for the list of options.",
            "Within a listbox:Section titles can categorize options into meaningful groups.Option text should be concise and clearly indicate the choice it represents.When possible, the order of options should follow numeric (Option 1, Option 2, Option 3…), alpha (Option A, Option B, Option C…), or natural (Option 1–3, Option 4–7, Option 8–11…) ordering.",
            "Section titles can categorize options into meaningful groups.",
            "Option text should be concise and clearly indicate the choice it represents.",
            "When possible, the order of options should follow numeric (Option 1, Option 2, Option 3…), alpha (Option A, Option B, Option C…), or natural (Option 1–3, Option 4–7, Option 8–11…) ordering.",
            "Actions within a footer should be concise and relate to the options."
          ]
        },
        {
          "type": "list",
          "items": [
            "A text input must be clearly labeled and identified.",
            "See theWAI-ARIA Combobox documentationfor more details.",
            "See theWAI-ARIA Listbox documentationfor more details.",
            "When options in a panel are filtered, a screen reader should announce how many options are now available viaaria-live.",
            "It should be clear for all modalities whether an option is selected or not."
          ]
        },
        {
          "type": "list",
          "items": [
            "Why use a listbox for sorting? After muchdiscussion, we determined that this route provides the most consistent implementation while aligning with a user's goal of selecting an option (in this case the option for how they'd like to sort) and having the selected choice reflected in the UI and the control itself.",
            "Drop-Down Usability: When You Should (and Shouldn’t) Use Them, by Baymard Institute"
          ]
        },
        {
          "type": "list",
          "items": ["Dropdown disclosure", "Button", "Accordion"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, April 25, 2024 at 3:11 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-combobox/code",
      "title": "Combobox | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A combobox is a panel of options typically opened by a button or text input."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, April 25, 2024 at 3:11 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-combobox/lookbook",
      "title": "Combobox | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A combobox is a panel of options typically opened by a button or text input."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, April 25, 2024 at 3:11 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-disclosure",
      "title": "Disclosure | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A disclosure widget includes a button that opens a panel of links or actions."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Button: Triggers the panel to open or close.",
            "Panel: Wraps the content.",
            "Action: Button or link styled as an option.",
            "Scrim: Gradient overlay when items overflow the panel.",
            "Header(optional): Provides more context for the actions.",
            "Custom content(optional): Custom content included in a slot."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use a disclosure dropdown to toggle a panel of links (<a>) or actions (<button>) that can be performed in a specific context, including thenavigation sidebar.",
            "In the instance where a combination of links and actions are present in the dropdown, a disclosure is preferred over other dropdown options that are more semantically prescriptive."
          ]
        },
        {
          "type": "list",
          "items": [
            "If the options within the panel are selectable instead of directly performing an action, refer to thecomboboxcomponent.",
            "If a user is selecting a single text option from a group of options within aform, consider using aselect,radio group, orcheckboxesinstead.",
            "If you need a way for a user to expand or collapse a content section, use anaccordioninstead.",
            "If there is only ever a single option, display that option directly. For example, if the only option isRemove, use abuttoninstead."
          ]
        },
        {
          "type": "p",
          "text": "Abuttonthat triggers a dropdown panel comes in a few variants to fit different situations."
        },
        {
          "type": "list",
          "items": [
            "Dropdown button: A dropdown button has achevron-downicon to the right of the text label to indicate it will toggle additional content.",
            "Split dropdown button: A split dropdown button is a special button group with two segments. The left text button is for the most common option and an attached dropdown button to the right opens a panel with additional options.",
            "Icon dropdown: An icon button, like one that uses the vertical or horizontalellipsis icons, functions similarly to other trigger buttons with the only difference being only an icon label with no text."
          ]
        },
        {
          "type": "list",
          "items": [
            "Trigger: Thebuttonwidth is determined by its available properties.",
            "Panel: Has a minimum and maximum width and a maximum height to keep content near the trigger button and to keep panels consistent throughout the UI. The height of the panel is initially set to the height of its content (dynamic height) when less than the maximum, but can optionally be set to always use a fixed height."
          ]
        },
        {
          "type": "list",
          "items": [
            "By default, the panel opens below the trigger button and is aligned to the left of it.",
            "The panel can be positioned to the right of the trigger button if it makes more sense in the layout.",
            "When there isn't enough space in the viewport, the panel uses edge detection to position it above and/or aligned to the right of the trigger button.",
            "When the panel boundaries don't allow it to flip to the other side of the trigger button because there isn't enough space, it shifts along the x-axis.",
            "There will always be some padding between the vertical edges of the panel and the vertical edges of the viewport.",
            "The tip of the panel points at the trigger and is center-aligned with it by default.",
            "If the content within the panel exceeds the maximum height then a scrim (gradient overlay) appears at the bottom of the panel as an overflow affordance. When a user has scrolled to the bottom of the overflowed content the scrim is removed.",
            "When a link is selected the user is taken to the destination.",
            "When an action is selected that impacts the current view, the panel is closed and the action performed.",
            "When an action option is selected that causes a page refresh or other change of context the panel returns to a closed state.",
            "All panels can be closed by clicking outside of them, using theEsckey, or by focus moving to an element outside of the component.",
            "A limited amount of options that don't scroll can be fixed at the bottom of a dropdown panel."
          ]
        },
        {
          "type": "list",
          "items": [
            "Text should be concise and clearly indicate the link destination or action it performs.",
            "Destructive actions should be the last of the available options."
          ]
        },
        {
          "type": "list",
          "items": [
            "See theWAI-ARIA Disclosure (Show/Hide) documentationfor more details."
          ]
        },
        {
          "type": "list",
          "items": [
            "Drop-Down Usability: When You Should (and Shouldn’t) Use Them, by Baymard Institute",
            "Link + Disclosure Widget Navigation, by Adrian Roselli"
          ]
        },
        {
          "type": "list",
          "items": ["Dropdown combobox", "Button", "Accordion"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, May 8, 2024 at 7:59 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-disclosure/code",
      "title": "Disclosure | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A disclosure widget includes a button that opens a panel of links or actions."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, May 8, 2024 at 7:59 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-disclosure/lookbook",
      "title": "Disclosure | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A disclosure widget includes a button that opens a panel of links or actions."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, May 8, 2024 at 7:59 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/dropdown-overview",
      "title": "Dropdown overview | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "In general terms, a \"dropdown\" is a combination of a trigger that opens a panel. A dropdown can mean many things while not being specific to any particular implementation. For that reason we've specified two distinct components and included variants where necessary. While the UI is nearly identical for each, there are important considerations related to a user's task and underlying semantics. Read on to learn the differences, or go directly to thedisclosure widgetandcomboboxcomponent pages for specifics. Adisclosure widgetis a type of dropdown that includes a button that opens a panel of links or actions. Thinka user needs to do something or go somewherewhen you consider a disclosure. A disclosure is more forgiving than a combobox semantically, since nearly any element can be a child of the expanded panel. It also includes an optional header to provide more context for the panel content. Acomboboxis a type of dropdown that includes a panel of options typically opened by a button or text input. Thinka user needs to select an optionwhen you consider a combobox. A combobox is the more complex of the two and includes two different implementations,GlCollapsibleListboxandGlFormCombobox. In addition to the listbox of options with particular semantics, a combobox includes the following optional features: header, section titles, and a fixed footer with related actions."
        },
        {
          "type": "list",
          "items": [
            "A menu (role=\"menu\") is a particular type of dropdown that should only be used for app-like JavaScript actions or functions, like replicating a dropdown in an application. Menus aren't currently used in GitLab since many dropdowns that would include JavaScript actions also include links, making the disclosure a more ideal option.",
            "Thetooltipandpopovercomponents share similar interactions with a disclosure and combobox, however their primary use is to provide contextual information and by default don'tdrop downin the same fashion, making this category less intuitive.",
            "Anaccordionis a disclosure widget, but since the end goal is showing and hiding content with a different behavior, it is a separate component with a different purpose.",
            "Aselect(<select>) has the closest relationship to the disclosure and combobox, however it's use is limited to the context of a form as much as possible."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, April 26, 2024 at 4:45 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/filter",
      "title": "Filter | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Filters allow a user to narrow down content by taking an existing list and removing items based on criteria that matches or doesn’t."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "list",
          "items": [
            "Input: The input field of the filter.",
            "Query: Consists of three main token parts: key (3), logical operator (4), and value (5).",
            "Key: acts as the label of the filter value, for example,assignee.",
            "Logical operator: the condition that binds the key to the value, for example,isoris not.",
            "Value: the item that the condition will base results on, for example, a@username.",
            "Raw text: Additional raw text can be typed into the filter",
            "Clear button: Clears the entire input field (all queries and raw text).",
            "Search button: Triggers the search."
          ]
        },
        {
          "type": "list",
          "items": [
            "Filters utilize thesearch componentwith three maintokenparts that form a query (seeStructure).",
            "Queries are positioned inline with the text cursor in the input field. The input field scrolls horizontally when the queries overflow the width.",
            "Queries include aremove iconthat removes the whole query from the search box when clicked."
          ]
        },
        {
          "type": "list",
          "items": [
            "Clicking on any of the three parts of a query opens a corresponding dropdown for that part of the query. For example, if a user clicks on the value part of the query, the value dropdown appears.",
            "If the operator is selected, the related dropdown appears and the value part of the query is removed if the operator is changed.",
            "If the key is selected, the related dropdown appears and the operator and the value of the query are removed if the key is changed.",
            "The text content of the clicked part (operator or key) becomes editable and the text cursor is immediately placed at the end of that text string so that users can either type or select a suggestion from a dropdown.",
            "Certain keys are compatible so the operator and value don’t need to be removed in the event of change (for example, changing the key from author to assignee).",
            "If a user selects a different value from the dropdown when editing a text string, that new value replaces the old one.",
            "Raw text appears within a token after tabbing or clicking outside of the search box. Setting theterms-as-tokensprop totruewill enable the correctterm rendering and interaction behavior.",
            "If the user clicks anywhere outside the dropdown or the search box, the string is turned back to a token with whatever its value was at the time of the event.",
            "If a user tries to edit a key with an invalid value, the token is removed and converted to a plain text string.",
            "If a user tries to edit an operator with an invalid value, the first option is chosen and the invalid text becomes the value text string.",
            "After a query is successfully added, a dropdown with suggestions for other keys appears immediately.",
            "If a query is deleted by interaction through the keyboard, the input should remain focused and a new dropdown should appear.",
            "Clicking the clear button inside the input clears all filters, keeps the input focused, and shows a dropdown.",
            "Pressing theEsckey on the keyboard hides the dropdown. Pressing the↓key or clicking inside the input shows it again. If there's a string already in the input it can be:Turned into a token if it's a valid match for a value.Turned into raw text on all other occasions.",
            "Turned into a token if it's a valid match for a value.",
            "Turned into raw text on all other occasions.",
            "The experience of adding a query should be as follows:The user clicks into a search box and a dropdown with the keys that can be used appears.The user chooses the key of what they want to filter the list by (for example,assignee).The user chooses the logical operator (isoris not) from a dropdown.The user defines the value part of the query (for example, choosing a @username from a dropdown or typing a text value).The user needs to repeat steps 1–4 for each query they want to add.Once done, the user needs to confirm the search to trigger it. They do so by clicking on the search button or by using their keyboard.",
            "The user clicks into a search box and a dropdown with the keys that can be used appears.",
            "The user chooses the key of what they want to filter the list by (for example,assignee).",
            "The user chooses the logical operator (isoris not) from a dropdown.",
            "The user defines the value part of the query (for example, choosing a @username from a dropdown or typing a text value).",
            "The user needs to repeat steps 1–4 for each query they want to add.",
            "Once done, the user needs to confirm the search to trigger it. They do so by clicking on the search button or by using their keyboard."
          ]
        },
        {
          "type": "list",
          "items": [
            "Each part is a variant of atoken.",
            "Filters are always used in combination with the“search by confirmation” search boxpattern.",
            "Each filter can consist of only one value and can’t be repeated. For example, a list of issues can only be narrowed down by specifying one assignee.",
            "While filter results aren't part of the component itself, theEmpty Statespage has additional guidance on what to display if there are no matching filters."
          ]
        },
        {
          "type": "list",
          "items": [
            "Token",
            "Search",
            "Dropdown disclosure",
            "Dropdown combobox"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, August 22, 2024 at 6:46 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/filter/code",
      "title": "Filter | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Filters allow a user to narrow down content by taking an existing list and removing items based on criteria that matches or doesn’t."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, August 22, 2024 at 6:46 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/filter/lookbook",
      "title": "Filter | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Filters allow a user to narrow down content by taking an existing list and removing items based on criteria that matches or doesn’t."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, August 22, 2024 at 6:46 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/icon",
      "title": "Pajamas Design System",
      "content": []
    },
    {
      "url": "https://design.gitlab.com/components/infinite-scroll",
      "title": "Infinite scroll | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Infinite scroll helps users parse a large number of items by breaking up lists and distributing the results."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Item: Item within the infinite scroll list.",
            "Scrollbar: Scrollbar that appears when scrolling the list.",
            "Count: Text displaying number of shown items out of total number of items in the list."
          ]
        },
        {
          "type": "p",
          "text": "Based on anaccessibility evaluation, there are accessibility concerns for infinite scrolling and it should be replaced with aload more patternorpagination."
        },
        {
          "type": "list",
          "items": [
            "A list with content that updates frequently.",
            "A list when there is no sort/filter functionality."
          ]
        },
        {
          "type": "list",
          "items": [
            "If a list ismore than 20items long, consider usingpagination."
          ]
        },
        {
          "type": "list",
          "items": [
            "Infinite scroll is triggered once the user has reached the 20th item of a list and there are more items to load.",
            "Aloading spinnerappears at the bottom of the list for the duration of the load time.",
            "When a user returns to a list from a list entry using the back button in the browser, they should be returned to the same place in the list where they left off."
          ]
        },
        {
          "type": "p",
          "text": "Always display a counter that details how many items have already loaded and how many items remain. This gives the user an indication of where they are relative to the list."
        },
        {
          "type": "list",
          "items": ["Pagination", "Spinner"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/infinite-scroll/code",
      "title": "Infinite scroll | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Infinite scroll helps users parse a large number of items by breaking up lists and distributing the results."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/infinite-scroll/lookbook",
      "title": "Infinite scroll | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Infinite scroll helps users parse a large number of items by breaking up lists and distributing the results."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/label",
      "title": "Label | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Labels are editable objects that allow users to manually categorize other objects, like issues, merge requests, and epics. They have a name, description, and a customizable color. They provide a quick way to recognize which categories the labeled object belongs to."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "If displaying more generic object metadata that are not categories, consider usingbadges."
          ]
        },
        {
          "type": "list",
          "items": [
            "Scoped Labels: Scoped labels are a unique type of label, characterized by their mutually exclusive behavior. Each scoped label has akeyand avalue. An issue, epic, or merge request can only have one scoped label of a specifickey. For example, if an issue has the labelworkflow::ready for design, it cannot have any otherworkflow::labels at the same time. Applying a secondworkflow::label will automatically replace the former. A scoped label is visually differentiated from a regular label by the contrasting colors on the left and right sides of the label."
          ]
        },
        {
          "type": "list",
          "items": [
            "Clicking on a label filters the view, or navigates the user to a list view filtered by that label.",
            "Users can manually filter lists and other types of views by labels.",
            "Labels can include aclose iconthat, when clicked, remove the label from the interface."
          ]
        },
        {
          "type": "list",
          "items": [
            "A label's description is shown in atooltipwhen hovering the label."
          ]
        },
        {
          "type": "list",
          "items": ["Badge"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/label/code",
      "title": "Label | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Labels are editable objects that allow users to manually categorize other objects, like issues, merge requests, and epics. They have a name, description, and a customizable color. They provide a quick way to recognize which categories the labeled object belongs to."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/label/lookbook",
      "title": "Label | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Labels are editable objects that allow users to manually categorize other objects, like issues, merge requests, and epics. They have a name, description, and a customizable color. They provide a quick way to recognize which categories the labeled object belongs to."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/link",
      "title": "Link | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A link is a navigational element that takes a user to another URL, an element within a page, or a file."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Text: Specifies or references the link's destination.",
            "Icon(optional): Indicates the destination is on an external domain."
          ]
        },
        {
          "type": "list",
          "items": [
            "A link (anchor<a>) element is used as navigation to:A new URL.An element within a page.A file.",
            "A new URL.",
            "An element within a page.",
            "A file."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you are performing an action, like saving, consider using abuttonelement instead."
          ]
        },
        {
          "type": "p",
          "text": "There are four categories of links in GitLab. Although all links are navigational, those that persist from page to page and guide users through the application – such as those within thenavigation sidebar,breadcrumbs, andpagination– are described separately, and not included as part of the link component."
        },
        {
          "type": "list",
          "items": [
            "Inline text link: Link that appears within body text, like a paragraph or sentence. In order to distinguish a linked reference from surrounding content, a link within body copy must be underlined. Inline text links can be user-generated, for example, referencing an issue with \"#3126\" in the markdown editor of a merge request description where the link's primary function is linking to the referred issue. They can also be in text generated from a source file, for example, a \"learn more about pipelines\" link in the paragraph of an empty state template.",
            "User interface (UI) link: Standalone link in the UI. User interface links are not user-generated. For example, a link in the system notes that compares the changes in a new commit to a previous one. The placement, color, and actionable text all provide link affordance. Alink buttonhas a similar style, but is used for an action and not a link.",
            "Meta link: Standalone text or text within a short string of system-generated content may contain multiple meta links. Meta links share a meaningful datapoint or reference, and are only links secondarily. For example, the primary function of including \"%15.8\" in a string is to communicate the milestone, though it can also link to more information about it.",
            "Mention: Indicates when a user is \"@\" mentioned in the content. The username links to the user's profile. A mention link can be within body or meta content."
          ]
        },
        {
          "type": "list",
          "items": [
            "An inline text link should always be underlined to distinguish it from surrounding text, regardless of formatting applied (bold, italic, or monospace) or parent text element (heading, paragraph, list, or code).",
            "A UI link has no underline at rest, but is underlined for hover, focus, and active states.",
            "Meta links represent a wide variety of content and their style adapts for each context. Meta links don't have an underline at rest, but are underlined for hover, focus, and active states. Similar to inline links, they appear this way regardless of formatting applied (bold, italic, monospace). Because of the available styling, which can appear similar to unlinked text, it's critical to ensure that users understand what is linked and what isn't in each context. Additionally, similar types of linked meta content should be styled the same throughout the product.",
            "A mention link has a background color that depends on whether it's for the current user or another user. When embedded in body text and on hover the text is underlined.",
            "Although a UI or meta link can have a style similar to alink button, select the correct component based on meaning rather than by appearance alone. SeeWhen to useabove.",
            "All links have a visible focus state. SeeAccessibilitynotes below."
          ]
        },
        {
          "type": "list",
          "items": [
            "A link opens the destination in the same window by default. By doing so a user can still choose to open the link in a new tab or window, whereas usingtarget=\"_blank\"removes all other methods.",
            "A link can usetarget=\"_blank\"if it's intentional that the user cannot use the browser's back function to return to the reference, and that it's clear to the user they are leaving the current experience.",
            "Native controls to open a link in a new tab or window aren't suppressed.",
            "Texttruncationguidelines also apply to links."
          ]
        },
        {
          "type": "list",
          "items": [
            "A user should be able to predict where they will go upon click.",
            "Avoid vague text such as \"click here,\" URLs as link text, or creating a link from more than just a short sentence. Link texts should be clear and meaningful. For example,Before reviewing a MR, review thebest practices.",
            "If a link is at the end of a sentence, the period should not be part of the link.",
            "An external link should use the external link icon. The icon should usearia-label=\"(external link)\", or similar, to communicate the purpose to screen reader users. For example,Learn more about Kubernetes."
          ]
        },
        {
          "type": "p",
          "text": "For all links:"
        },
        {
          "type": "list",
          "items": [
            "All links and their states must have a contrast ratio of at least 4.5:1 against the background color (Understanding WCAG SC 1.4.3 Contrast Minimum).",
            "A link must have a visible focus state (Understanding WCAG SC 2.4.7 Focus Visible).",
            "As noted above, links open in the same window by default. Forcing a link to open in a new tab or window can be an unexpected change of context for some users. Additionally, it may prevent the use of a browser's back capability, making it difficult to return to the previous context. SeeGiving users advanced warning when opening a new window. Also, consider these articles:Link Targets and 3.2.5,External links: In or Out."
          ]
        },
        {
          "type": "p",
          "text": "For inline text links:"
        },
        {
          "type": "list",
          "items": [
            "Color can't be the only way to visually distinguish a link. The link color doesn't have at least a 3:1 contrast ratio from surrounding text, therefore, an underline is used for all states as a visual means to indicate it. SeeUnderstanding WCAG SC 1.4.1 Use of Color.",
            "Since an underline is used as a required graphical element to distinguish a link, it must have at least a 3:1 contrast ratio against the background color for all states. SeeUnderstanding WCAG SC 1.4.11 Non-text Contrast."
          ]
        },
        {
          "type": "p",
          "text": "For user interface links:"
        },
        {
          "type": "list",
          "items": [
            "The placement and text of a link should identify itself as such in a predictable way.",
            "An underline is not required at rest, but present for hover.",
            "Consecutive interface links should have sufficient space between them so that they appear as separate elements and not one continuous sentence or link."
          ]
        },
        {
          "type": "p",
          "text": "For meta links:"
        },
        {
          "type": "list",
          "items": [
            "As mentioned in thecategoriessection, the main purpose of a meta link is first and foremost as content. It's not necessary for the text to be linked, but it is so that a user could get more information if desired. Therefore, the visual emphasis that would come from an underline is not used, even if the link is within a string of unlinked text. An underline is present on hover. This is an intentional decision to visually simplify certain sections in the UI that contain multiple meta links and may change in the future. More discussion and consideration can be foundthis issue."
          ]
        },
        {
          "type": "p",
          "text": "For mention links:"
        },
        {
          "type": "list",
          "items": [
            "When the link is within body copy, follow the above guides for inline text links. The background color and/or@prefix don't qualify for sufficient contrast or visual distinction in this context.",
            "When the link is used as meta information, that is, first and foremost as content where linking to a user isn't necessary or consequential, then follow the above guides for meta links."
          ]
        },
        {
          "type": "list",
          "items": ["Button"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/link/code",
      "title": "Link | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A link is a navigational element that takes a user to another URL, an element within a page, or a file."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/link/lookbook",
      "title": "Link | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A link is a navigational element that takes a user to another URL, an element within a page, or a file."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/modal",
      "title": "Modal | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A modal is used to reveal critical information, show information without losing context, or when the system requires a user response."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Dialog: Modal dialog container.",
            "Title: A short question or descriptive phrase that conveys an overview of the purpose.",
            "Dismissal: Icon to dismiss the modal.",
            "Message: Text content indicating the purpose and potential next steps.",
            "Actions(optional): Buttons used to provide explicit action(s) the user can take to either remedy the modal or continue with a task.",
            "Backdrop: Transparent overlay that covers the page content."
          ]
        },
        {
          "type": "list",
          "items": [
            "Serve as a single purpose dedicated to completing the user's task.",
            "Reveal critical information without losing context.",
            "Require a user response from the system.",
            "Confirm a non-revertible destructive action."
          ]
        },
        {
          "type": "list",
          "items": [
            "When content can be displayed inline. Utilize elements such aspopovers,accordions, ordrawersto present additional information while allowing the user to maintain focus on the page.",
            "If you need to deliver a brief, auto-expiring element for a user to consume while staying focused on their task, use atoastinstead.",
            "For a significant amount of content, take the user to a different page to utilize space a modal can‘t provide.",
            "Consider alternative patterns such as non-modal dialogs or undo patterns to continue the system-user conversation while keeping the user focused on their task."
          ]
        },
        {
          "type": "p",
          "text": "For simple edits, consider inline editing: Clicking the \"edit\" button places a user in an \"edit mode\" for this row, which utilizes form inputs to edit text fields:"
        },
        {
          "type": "list",
          "items": [
            "Small: A small modal is used for simple tasks with little content.",
            "Medium (default): A medium modal is used for most use cases.",
            "Large: A large modal is used for wide content that might use tabs or a table or otherwise benefit from a wider container."
          ]
        },
        {
          "type": "list",
          "items": [
            "Opens on top of all other content with a transparent backdrop behind to cover it.",
            "Top-aligned at the extra-small (xs) breakpoint and otherwise vertically centered in the viewport.",
            "Always center horizontally and scale down responsively when the page is narrower than the modal's max width.",
            "The height of the modal is determined by the content.When modal content extends below the viewport, the viewport remains scrollable.If modal content exceeds the height of the viewport and impedes a user’s ability to maintain context or see important actions, the content within the modal can be made scrollable. However, this should be avoided, if possible, because doing so impacts the ability fordropdownsand other popups (tooltipsandpopovers) to extend outside the boundary of the modal when necessary and to reposition as needed depending on available space.",
            "When modal content extends below the viewport, the viewport remains scrollable.",
            "If modal content exceeds the height of the viewport and impedes a user’s ability to maintain context or see important actions, the content within the modal can be made scrollable. However, this should be avoided, if possible, because doing so impacts the ability fordropdownsand other popups (tooltipsandpopovers) to extend outside the boundary of the modal when necessary and to reposition as needed depending on available space.",
            "On small screens where content requires scrolling, consider opening the content in a new page instead.",
            "Focus should be placed on the modal title (read theaccessibilitynotes for details).",
            "Keyboard focus is contained in the modal while it remains open.",
            "A modal can be dismissed by:Clicking on theClosebutton within it.Clicking on aCancelbutton (or similar) within it.TheEsckey being pressed.Clicking outside of it.",
            "Clicking on theClosebutton within it.",
            "Clicking on aCancelbutton (or similar) within it.",
            "TheEsckey being pressed.",
            "Clicking outside of it.",
            "When dismissed, focus returns to the referring control."
          ]
        },
        {
          "type": "list",
          "items": [
            "The header is either a question, a descriptive phrase, or title. The header also contains the close icon in every instance.",
            "The content in the body should never be ambiguous and unclear. Strive to be as concise as possible and provide the user with specific information in regards to their task. Do not ask a vague question or pose a vague statement. Instead, explain what you are asking the user to do by usingUI textthat's straightforward and easy to understand.",
            "There should be no more than 3 actions and no fewer than 1. Actions should always be located within an action bar at the bottom of the modal. Button order and positioning should follow ourguidelines for buttons.",
            "When labeling your actions, let the user know what will happen for each possible decision you are affording to them and be specific. For example, when asking the user to set their status, use \"Set status\" and \"Remove status\" instead of simply, \"Save\" and \"Delete\".",
            "There should always be multiple ways to close/dismiss this type of modal, including allowing the user to click outside of the modal area or use the escape key. This is important as some modals can be tall and we want to avoid making the user scroll up to close a modal."
          ]
        },
        {
          "type": "list",
          "items": [
            "A modal usesrole=\"dialog\"to indicate that it's a descendant of the main window.",
            "Focusing on a button or form element within can move a user past important contextual information or even scroll the start of the modal content out of view — it's also inconsistent from modal to modal. Therefore, it's recommended to initially place focus on the modal title and reference it by using thearia-labelledbyattribute on the dialog. If there's no content before a control, except for the title, then focus can be placed on the control.",
            "A modal must be labeled witharia-labeloraria-labelledby.",
            "See theWAI-ARIA Dialog (Modal) documentationfor more details."
          ]
        },
        {
          "type": "list",
          "items": [
            "Making Modal Windows Better For Everyone, again...",
            "The current state of modal dialog accessibility",
            "What we learned from user testing of accessible client-side routing techniques with Fable Tech Labs",
            "Modal & Nonmodal Dialogs: When (& When Not) to Use Them"
          ]
        },
        {
          "type": "list",
          "items": [
            "Accordion",
            "Button",
            "Drawer",
            "Popover",
            "Toast",
            "Tooltip"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/modal/code",
      "title": "Modal | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A modal is used to reveal critical information, show information without losing context, or when the system requires a user response."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/modal/lookbook",
      "title": "Modal | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A modal is used to reveal critical information, show information without losing context, or when the system requires a user response."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/pagination",
      "title": "Pagination | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Pagination breaks up content into multiple pages with controls for navigating those pages."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Previous icon: Achevron-lefticon as part of the \"previous page\" link.",
            "Previous label: Text that indicates navigating to the previous page.",
            "Page link: Sequential page number.",
            "Active page link: Highlights current page.",
            "Truncation: Indicates more pages exist that can't be listed due to space.",
            "Next label: Text that indicates navigating to the next page.",
            "Next icon: Achevron-righticon as part of the \"next page\" link.",
            "Help text: Text that indicates the current page and total number of pages."
          ]
        },
        {
          "type": "list",
          "items": [
            "Break up a list or a large content block into multiple pages that can be navigated sequentially or by choosing a specific page within the set.",
            "Lists withmore than 20items require pagination at the bottom of a page. Pagination is generally not required on lists with20 or feweritems but can be considered depending on the context (that is, the paginated list is embedded within another component)."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to navigate between steps in a flow, consider using thepathcomponent orbuttonsinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "There is 24pxspacingbetween pagination and the element it relates to."
          ]
        },
        {
          "type": "p",
          "text": "There are two types of pagination,offset, andkeyset(sometimes called cursor-based). General use is outlined below, but either can be used for any scenario since factors like performance, the number of results returned, user expectations, and how data is queried will ultimately help determine the best approach. Offset pagination allows a user to navigate page by page within a defined set of pages. The page number is visible and can be directly clicked in the pagination component. This method is good when records aren't added or subtracted to the results as a user navigates through them. Because page numbers are visible, the first and last page links are not truncated so that a user can quickly navigate to the beginning or end of the contents. Keyset pagination only hasPrevandNextoptions and no page numbers. It's ideal for paginating results that may have dynamic additions or subtractions as a user can only move to the previous or next set of results, regardless of where it is in the set. Keyset pagination is a good alternative toinfinite scrollsince it can provide a more predictive and accessible experience."
        },
        {
          "type": "list",
          "items": [
            "Disabled: The previous and next controls can be disabled when a user is either on the first or last page and can't navigate back or forward.",
            "Active: Link that indicates the current \"active\" page."
          ]
        },
        {
          "type": "list",
          "items": [
            "Truncation is shown using…when the number of pages exceeds the pagination display limit. By default…are shown after the5th pageon large and medium viewports and after the2nd pageon small and mobile viewports.",
            "Double truncation occurs when the current page is separated by 5 or more pages from the first and last page on large and medium viewports. On small and mobile viewports, double truncation occurs when 1 or more pages separate the current page from the first and last page."
          ]
        },
        {
          "type": "list",
          "items": [
            "Since pagination is a form of navigation, there are a few helpful considerations:Wrap the list in a<nav>element witharia-labelso it can easily be navigated to as alandmark.Usearia-current=\"page\"on the active page link.Each link should havearia-labelto clarify what the page number means. For example,<a href=\"/p3\" aria-label=\"Page 3\">3</a>.",
            "Wrap the list in a<nav>element witharia-labelso it can easily be navigated to as alandmark.",
            "Usearia-current=\"page\"on the active page link.",
            "Each link should havearia-labelto clarify what the page number means. For example,<a href=\"/p3\" aria-label=\"Page 3\">3</a>.",
            "When navigating with pagination, the focus and scroll position should be at the top of the new page content so a user can continue moving through the results."
          ]
        },
        {
          "type": "list",
          "items": ["Button", "Path", "Infinite scroll"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, April 29, 2024 at 3:30 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/pagination/code",
      "title": "Pagination | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Pagination breaks up content into multiple pages with controls for navigating those pages."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, April 29, 2024 at 3:30 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/pagination/lookbook",
      "title": "Pagination | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Pagination breaks up content into multiple pages with controls for navigating those pages."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, April 29, 2024 at 3:30 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/path",
      "title": "Path | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Paths are horizontal process flows composed of a series of stages."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "list",
          "items": [
            "When there is a process with unique content at each stage, for example, aDevOps lifecycle."
          ]
        },
        {
          "type": "list",
          "items": [
            "To segment tasks that are related and linear, use astepperinstead.",
            "To represent percentage of completion or progress of an activity, process, or task, use aprogress barinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Simple Path: A simple path only contains stages with labels.",
            "Counter Path: A counter path contains stages with a counterbadgeshowing the number of items it contains. If there are any ”All,” “Overview,” or “Summary” stages, then the counter of that stage should equal the sum total of all the others. Counters shouldn’t be included if they break this pattern.",
            "Metric Path: A metric path contains stages with an abbreviated metric, such as 12d or 1.5h. The metric can be an integer or float, but should be limited to 5 digits maximum (and fewer when possible). Don’t use multiple metric types on a single path. For example, 1d and 6kg.",
            "Combination Path: Some processes may be more complicated and require a path with a combination of icons, counters, and metrics. An icon can also be used at a specific stage, such as an “Overview,” to make it stand out more. Try to limit path complication by only using necessary attributes."
          ]
        },
        {
          "type": "list",
          "items": ["Tabs", "Stepper"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/path/code",
      "title": "Path | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Paths are horizontal process flows composed of a series of stages."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/path/lookbook",
      "title": "Path | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Paths are horizontal process flows composed of a series of stages."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/popover",
      "title": "Popover | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A popover is used to provide supplemental, useful, unique information about an element, including one or multiple actionable elements. It informs the user of additional information within the context of their original view, but without forcing them to act upon it like a modal."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Title(optional): Header for the content.",
            "Dismissal(optional): Icon to dismiss the popover.",
            "Content: Additional information about an element.",
            "Tip: Points to the referring element."
          ]
        },
        {
          "type": "list",
          "items": [
            "You don't want the user to lose context, but still want to provide additional useful unique information about referring elements.",
            "It isn't critical for the user to act upon the information.",
            "You want to give a user a summary of extended information and the option to learn more if needed."
          ]
        },
        {
          "type": "list",
          "items": [
            "Consider if placing the content within a popover is needed at all. In many cases the most helpful, andboring solution, is to have the content inline and visible by default.",
            "If you're not providing rich markup or actionable items, consider using atooltip.",
            "If you're displaying critical content needed for users to complete a task, consider using amodal.",
            "If you're displaying supplemental information to the user about an element or item, consider using adrawer."
          ]
        },
        {
          "type": "list",
          "items": [
            "By default, a popover is placed above the referring element.",
            "When there isn't enough space in the viewport, the popover is moved to the side or below as needed.",
            "If a popover blocks related content, the placement can be manually set to avoid this.",
            "To optimize for readability, content within a popover uses left-alignment.",
            "Be mindful of the popover content that could overflow the viewport, and avoid a popover that flexes 100% of the container width.",
            "A popover has a default width of280px, but it can be adapted to have different sizes, depending on the content being wrapped."
          ]
        },
        {
          "type": "list",
          "items": [
            "A popover is opened by clicking on an element that has the sole purpose of triggering it.",
            "A popover is opened by a user action. Do not show a popover on page load.",
            "When the popover is visible, theTabkey moves focus through any interactive elements within it.",
            "A popover can be dismissed by:Clicking on the close button within it.Clicking outside of it.TheTabkey moving focus to another element.TheEsckey being pressed.",
            "Clicking on the close button within it.",
            "Clicking outside of it.",
            "TheTabkey moving focus to another element.",
            "TheEsckey being pressed."
          ]
        },
        {
          "type": "list",
          "items": [
            "A popover can contain interactive content such as alinkorbutton.",
            "A popover can contain rich content like anavatar.",
            "All copy within a popover should be short, actionable, and use clear language.",
            "The copy in the header should be shorter and even more concise than the copy in the body of the popover."
          ]
        },
        {
          "type": "p",
          "text": "When a popover is visible:"
        },
        {
          "type": "list",
          "items": [
            "The focus can move to the next logical interactive element in the DOM and doesn't loop in the popover.",
            "The content within is next in the reading order from the trigger element and not appended to the DOM."
          ]
        },
        {
          "type": "list",
          "items": ["Tooltip", "Modal", "Drawer"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, October 28, 2024 at 11:01 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/popover/code",
      "title": "Popover | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A popover is used to provide supplemental, useful, unique information about an element, including one or multiple actionable elements. It informs the user of additional information within the context of their original view, but without forcing them to act upon it like a modal."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, October 28, 2024 at 11:01 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/popover/lookbook",
      "title": "Popover | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A popover is used to provide supplemental, useful, unique information about an element, including one or multiple actionable elements. It informs the user of additional information within the context of their original view, but without forcing them to act upon it like a modal."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, October 28, 2024 at 11:01 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/progress-bar",
      "title": "Progress bar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A progress bar indicates a percentage of completion."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Progress indicator: Solid shape indicating the current percent of completion.",
            "Track: Background indicating the available space the progress indicator can fill."
          ]
        },
        {
          "type": "list",
          "items": [
            "To represent percentage of completion or progress of an activity, process, or task."
          ]
        },
        {
          "type": "list",
          "items": [
            "To indicate that content is loading, use askeleton loaderorspinnerinstead.",
            "To segment tasks that are related and linear, use astepperinstead."
          ]
        },
        {
          "type": "list",
          "items": ["Extra small", "Small", "Medium"]
        },
        {
          "type": "p",
          "text": "The progress indicator is a static representation of progress at a given point of time and doesn't animate."
        },
        {
          "type": "list",
          "items": [
            "The progress bar component should be supported by visible text indicating what the bar is for, and the units of progress represented. SeeReferencefor additional considerations.",
            "Thearia-labeloraria-labelledbycontent should also clarify the purpose of the progress bar."
          ]
        },
        {
          "type": "list",
          "items": [
            "Progress bars aren't focusable elements, but they can be accessed with a screen reader's read/browse mode.",
            "Use the HTML<progress>element in conjunction with eitheraria-labeloraria-labelledby.",
            "The WAI-ARIAprogressbarrole can also be used."
          ]
        },
        {
          "type": "p",
          "text": "Although browser support is good for<progress>, screen readers handle them inconsistently. You may want to consider hiding it from screen readers and relying on visible text instead. For more details, read Scott O'Hara's post,Styles Progress Bar."
        },
        {
          "type": "list",
          "items": ["Spinner", "Skeleton loader", "Stepper"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/progress-bar/code",
      "title": "Progress bar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A progress bar indicates a percentage of completion."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/progress-bar/lookbook",
      "title": "Progress bar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A progress bar indicates a percentage of completion."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the progress component in our\n        Lookbook. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/radio-button",
      "title": "Radio button | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A radio button typically represents a single option in a group of related choices."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Legend: A title for a group of radio buttons.",
            "Radio button: The input element that provides the visual affordance for the control.",
            "Label: Text indicating the option.",
            "Help text(optional): Used to further clarify an option."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use a radio button group for a set of options, where only one option can be selected at a time."
          ]
        },
        {
          "type": "list",
          "items": [
            "Radio buttons use high-contrast colors for labels and custom styles (based onBootstrap) instead of browser defaults for the radio control.",
            "Radio buttons are vertically stacked, with one radio button per line."
          ]
        },
        {
          "type": "list",
          "items": [
            "In a radio button group, only one option can be selected at a time and there must be a default selected option.",
            "To pick an option, the user can select the radio button or its content."
          ]
        },
        {
          "type": "list",
          "items": [
            "Radio button labels are set in regular font weight, positioned to the right of the element, and should be as short as possible."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use afieldsetwithlegend(set in bold font weight and positioned above the group of radio buttons) to group a set of radio buttons. Some screen readers will announce the contents of the legend before each nested input to maintain context for a user."
          ]
        },
        {
          "type": "list",
          "items": [
            "Help textcan be added below the radio button label or as a paragraph below the group."
          ]
        },
        {
          "type": "list",
          "items": [
            "Do not nest or add other elements within a radio button group. Keep the radio button group as a single cohesive unit to ensure the user can properly traverse the controls.",
            "When usingGlFormGroup, thelabelprop alone does not give the input an accessible name.",
            "Thelabel-forprop must also be provided to give the input an accessible name."
          ]
        },
        {
          "type": "code",
          "code": "<gl-form-radiov-model=\"status\"value=\"opened\">{{ __('Opened') }}</gl-form-radio>"
        },
        {
          "type": "code",
          "code": "<gl-form-radiov-model=\"status\"value=\"opened\"><spanclass=\"gl-sr-only\">{{ __('Opened') }}</span></gl-form-radio>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue status')\"><gl-form-radiovalue=\"opened\">{{ __('Opened') }}</gl-form-radio><gl-form-radiovalue=\"closed\">{{ __('Closed') }}</gl-form-radio></gl-form-group>"
        },
        {
          "type": "p",
          "text": "UsingGlFormRadioGroup:"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue status')\"><gl-form-radio-groupv-model=\"selected\":options=\"options\"/></gl-form-group>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue status')\"label-sr-only><gl-form-radiovalue=\"opened\">{{ __('Opened') }}</gl-form-radio><gl-form-radiovalue=\"closed\">{{ __('Closed') }}</gl-form-radio></gl-form-group>"
        },
        {
          "type": "p",
          "text": "UsingGlFormRadioGroup:"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue status')\"label-sr-only><gl-form-radio-groupv-model=\"selected\":options=\"options\"/></gl-form-group>"
        },
        {
          "type": "list",
          "items": ["Checkbox", "Segmented control", "Select", "Toggle"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/radio-button/code",
      "title": "Radio button | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A radio button typically represents a single option in a group of related choices."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/radio-button/lookbook",
      "title": "Radio button | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A radio button typically represents a single option in a group of related choices."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/search",
      "title": "Search | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Search patterns enable users to find certain information by adding criteria that match their query."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Search by typing: This pattern doesn't use a button to trigger the search. When users start typing the search action triggers after a short delay. In order to communicate that a search is being performed, a spinner is added in the right corner of the search box. A magnifying glass icon is placed in the left corner of the search box to indicate to the user that the input is a search field. Narrowing down a large list of results as a user types can create performance issues. Consider using the Search by confirmation pattern below if performance is a concern.",
            "Search by confirmation: This pattern is visually different from the one above because users interact with it differently. The magnifying glass icon is placed inside the button which triggers the search action. The presence of the button indicates the need for confirmation to trigger the search.Enteralso triggers the action. A dropdown containing search history is commonly used as an addition to the search by confirmation pattern."
          ]
        },
        {
          "type": "p",
          "text": "It’s a common practice to place the search box on the top right of the page — it’s where Internet users learned to expect it. When the search box is a simple search or filter, it should be positioned on the top right in the layout, and limited in width. More complex search boxes can be wider and positioned elsewhere."
        },
        {
          "type": "list",
          "items": [
            "The placeholder in a search box should ideally be justSearchbecause it should be clear what the user is searching through from the placement of the search box on the page. For example, a search box placed under a titleLabelssearches through labels. If that’s not possible, a more specificSearch labelsplaceholder can be used. The search patterns are one of those exceptions where the input field labels aren’t present at all. Because of that, a placeholder should always be there to clearly indicate to users that this is a search box.",
            "Don’t use ellipsis (…) in the placeholder unless it’s truncated or the text is incomplete (seePunctuation). For example,SearchorSearch labelsdon’t need an ellipsis, butSearch and jump to…uses one because the text is incomplete.",
            "Even though the search patterns can be used for either filtering or searching for information, always try to use the wordSearchfor the placeholder. This is another small detail that makes the pattern easier to recognize. As an exception, it’s OK to use another word if it makes the interaction and the experience clearer."
          ]
        },
        {
          "type": "p",
          "text": "Search by typing variant uses delayed feedback to reduce the server load. Use a fasterdebounce periodwhen possible to make search results feel quick and responsive. While search results aren't part of the component itself, theEmpty Statespage has additional guidance on what to display if the search returns no results."
        },
        {
          "type": "list",
          "items": ["Button", "Filter", "Sorting", "Spinner", "Text input"]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 23, 2024 at 11:19 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/search/code",
      "title": "Search | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Search patterns enable users to find certain information by adding criteria that match their query."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 23, 2024 at 11:19 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/search/lookbook",
      "title": "Search | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Search patterns enable users to find certain information by adding criteria that match their query."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 23, 2024 at 11:19 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/segmented-control",
      "title": "Segmented control | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A segmented control allows users to choose one out of a range of available options. It is a button group of equal options where only one can be selected and active. There must always be one option active."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "list",
          "items": [
            "If there are only a few options and enough room to fit within the UI."
          ]
        },
        {
          "type": "list",
          "items": [
            "Each button must be equal in width and prominence.",
            "Button labels should ideally be only one word."
          ]
        },
        {
          "type": "list",
          "items": [
            "Label positioning rules are the same as they are forforms. They can be placed to the left of segmented control when there’s a lack of vertical space. But by default, the label comes above the segmented control.",
            "The label can be omitted in cases when it’s clear what the segmented control is referring to from the UI (for example, switching between a day, week or month view in a calendar UI).",
            "Alternatively, icons can be used to replace button labels."
          ]
        },
        {
          "type": "list",
          "items": ["Results are effective and visible immediately."]
        },
        {
          "type": "list",
          "items": ["Contain 2 or 3 options and should not go beyond 5."]
        },
        {
          "type": "list",
          "items": [
            "Button",
            "Checkbox",
            "Dropdown disclosure",
            "Radio button",
            "Select",
            "Toggle",
            "Tabs"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, October 30, 2024 at 9:36 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/segmented-control/code",
      "title": "Segmented control | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A segmented control allows users to choose one out of a range of available options. It is a button group of equal options where only one can be selected and active. There must always be one option active."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, October 30, 2024 at 9:36 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/segmented-control/lookbook",
      "title": "Segmented control | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A segmented control allows users to choose one out of a range of available options. It is a button group of equal options where only one can be selected and active. There must always be one option active."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, October 30, 2024 at 9:36 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/select",
      "title": "Select | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "An HTML element, typically used in a form."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "To indicate a selection of a single item from a list of options.",
            "To present sort options when the sort order button isn't required (see thesortingcomponent for a comparison)."
          ]
        },
        {
          "type": "list",
          "items": [
            "If there are five or less options to select from or the user needs to easily see all of options, then consider usingradio buttonsinstead.",
            "If more than one option can be selected, consider usingcheckboxesinstead.",
            "If the option is a binary decision that takes immediate effect, consider using atoggleinstead.",
            "If selecting from a list of options outside of aformor for more complex interactions, then a combobox is preferred."
          ]
        },
        {
          "type": "list",
          "items": [
            "When usingGlFormGroup, thelabelprop alone does not give the input an accessible name.",
            "Thelabel-forprop must also be provided to give the input an accessible name."
          ]
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue status')\"label-for=\"issue-status\"><gl-form-selectid=\"issue-status\"v-model=\"status\":options=\"options\"/></gl-form-group>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue status')\"label-for=\"issue-status\"label-sr-only><gl-form-selectid=\"issue-status\"v-model=\"status\":options=\"options\"/></gl-form-group>"
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/skeleton-loader",
      "title": "Skeleton loader | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A skeleton loader is a simplified preview of loading content."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Shapes: Simple shapes represent different content types in a single skeleton loader."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use the skeleton loader when loading content and a loadingspinneris not prominent enough.",
            "Use when there is more than a single content element loading at the same time that requires an indicator.",
            "Offer a simplified preview of loading content to help manage user expectations while decreasing perceived load time.",
            "Avatars, cards, charts, content blocks, lists, and tables are good candidates for a skeleton state."
          ]
        },
        {
          "type": "list",
          "items": [
            "Instantly loading content doesn't need a skeleton loader.",
            "For an inline action or feedback, like analert, consider aspinneror no loading state instead.",
            "Dynamic content revealed upon user interaction shouldn't be replaced by a skeleton loader, as the content should already be loaded by the time the user is able to interact with it. For example, content within a toast message, dropdown menu, or modal.",
            "For background processes, a loading state tied to a specific component, or a piece of existing content, use aspinnerinstead.",
            "A skeleton loader shouldn’t be used in combination with aspinner, choose the one that fits the use case best."
          ]
        },
        {
          "type": "list",
          "items": [
            "Comprised of one or more basic, grayscale shapes that have a horizontally pulsingmotionto indicate they are loading.",
            "Use rounded corners, even for rectangular shapes. Shapes follow thestandard spacing guidelines.",
            "Each shape should represent content in a recognizable way. For example, a long rectangle for a line of text or a circle for an avatar."
          ]
        },
        {
          "type": "p",
          "text": "To create a new skeleton loader:"
        },
        {
          "type": "list",
          "items": [
            "Start by designing with the variants in thePajamas UI Kitand use spacing that follows thegeometric progression.",
            "Output an SVG of the skeleton loader.",
            "Use the<gl-skeleton-loader>component and customize the SVG properties."
          ]
        },
        {
          "type": "list",
          "items": [
            "Content immediately replaces each skeleton loader when it's available."
          ]
        },
        {
          "type": "list",
          "items": [
            "When a change occurs in the UI, like a loading state, it's good practice to notify the user what's happening. However, since a skeleton loader should only be present for a short period of time, and during an expected loading period, it does not need to be a live region or communicate that the page is busy."
          ]
        },
        {
          "type": "list",
          "items": [
            "TheSkeleton Loadingcomponent has been deprecated in favor of the Skeleton Loader.",
            "Everything you need to know about skeleton screens, by Bill Chung.",
            "More Accessibile Skeletons, by Adrian Roselli."
          ]
        },
        {
          "type": "list",
          "items": ["Spinner"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/skeleton-loader/code",
      "title": "Skeleton loader | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A skeleton loader is a simplified preview of loading content."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/skeleton-loader/lookbook",
      "title": "Skeleton loader | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A skeleton loader is a simplified preview of loading content."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/socks",
      "title": "Socks | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Socks represent a unique way to warm your feet."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "p",
          "text": ""
        },
        {
          "type": "list",
          "items": [
            "If you need puppets in a pinch.",
            "To create separation between your feet and your shoes.",
            "To show off your quirky personality.",
            "To walk around the house without waking up anyone.",
            "To free your house-elf."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you're walking on a beach.",
            "If you're swimming.",
            "If you're getting a pedicure.",
            "If you're an aspiring foot model.",
            "If walking outside, consider usingslippers."
          ]
        },
        {
          "type": "list",
          "items": ["Socks should be in an easy-to-reach drawer."]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, October 11, 2024 at 8:22 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/sorting",
      "title": "Sorting | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Sorting allows users to quickly re-organize similar content on a long list when the default order may be insufficient for users to scan the data set."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "list",
          "items": [
            "Use the sorting component when the list has pagination and spans multiple pages, as it can make it easier for users to digest and find relevant content.",
            "A user's sort selections are meant to be persisted. If they make a sort selection and then leave the page, when they return to the page, their previous sort selections will be preserved.",
            "Sorting can occur in tables and in lists. While sorting in lists relies on the sorting component described on this page, sorting within a table happens in the table header.See table sorting guidelines."
          ]
        },
        {
          "type": "list",
          "items": [
            "When using the sorting component, make sure the list in the dropdown doesn't contain more than 10 items, otherwise it will create usability problems.See combobox guidelines.",
            "If a list is static, easy to search/scan, or where the data set won't grow, the sorting component is unnecessary."
          ]
        },
        {
          "type": "list",
          "items": [
            "The sorting component is comprised of two parts: a dropdown, and a sort direction icon button."
          ]
        },
        {
          "type": "list",
          "items": [
            "The dropdown allows users to choose their sorting criteria, whether it be by label, date, or popularity.",
            "As soon as an item in the dropdown is selected, the list content re-sorts automatically.",
            "The sort dropdown allows for sorting by a single selected item.",
            "The sort direction icon button allows users to change the direction of the sort, from ascending to descending or vice-versa.",
            "Avoid using invisible attributes for sorting because it lacks visual reinforcement of the user's action, which can be confusing.",
            "The default sort order on a list is determined by the designer on a page-by-page basis."
          ]
        },
        {
          "type": "list",
          "items": ["Dropdown disclosure", "Dropdown combobox", "Filter"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 21, 2024 at 4:59 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/sorting/code",
      "title": "Sorting | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Sorting allows users to quickly re-organize similar content on a long list when the default order may be insufficient for users to scan the data set."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 21, 2024 at 4:59 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/sorting/lookbook",
      "title": "Sorting | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Sorting allows users to quickly re-organize similar content on a long list when the default order may be insufficient for users to scan the data set."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 21, 2024 at 4:59 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/spinner",
      "title": "Spinner | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A spinner is an animated element that appears after a user's action to indicate that saving or loading is in progress."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Track: Background that the segment travels on during the looped animation.",
            "Segment: Animated element of the spinner."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use a spinner to signify that something is loading.",
            "In some instances, the UI will reflect a change before the change is actually saved and the spinner is used to indicate background activity until information is successfully saved."
          ]
        },
        {
          "type": "list",
          "items": [
            "Ideally, only one spinner should be used at a time. If a larger section of content is loading, consider using a larger size spinner instead of multiple smaller ones or askeleton loaderinstead.",
            "In combination with askeleton loader. Choose one or the other, whichever fits the use case best.",
            "If user action is required before content can be displayed."
          ]
        },
        {
          "type": "list",
          "items": [
            "Dark: Forneutralbackgrounds that are$gray-200or lighter, orchromaticbackgrounds that are300or lighter.",
            "Light: Forneutral or chromaticbackgrounds that are400or darker."
          ]
        },
        {
          "type": "list",
          "items": [
            "Small: 16px, used with text labels or inside other UI elements, like abutton.",
            "Medium: 24px, used within larger visual elements, like merge widget status icons.",
            "Large: 32px, indicates larger components are loading, like achart.",
            "Extra large: 64px, indicates a large content area of the UI is loading."
          ]
        },
        {
          "type": "p",
          "text": "The default visibleLoading...text isn't part of the component itself. However, you may consider replacing that message with something more descriptive when the action is dependent on GitLab. For an in-product example, see the updated'merge active' status message."
        },
        {
          "type": "list",
          "items": [
            "A 100ms delay occurs before showing a spinner to mitigate unnecessary spinners showing up at the same time when load times are minimal."
          ]
        },
        {
          "type": "list",
          "items": [
            "When a change occurs in the UI, it's good to audibly notify assistive technology that a process is happening through the use ofrole=\"status\", see theWAI-ARIAstatusdocumentation.",
            "Since the spinner contains no text content,aria-labelis used to provide a short message, for example,aria-label=\"Loading\".",
            "The spinner animation is currently not changed byperfers-reduced-motionbecause it can be considered essential to understanding the state of the application. SeeNote 4inUnderstanding WCAG SC 2.2.2 Pause, Stop, Hide.",
            "See theWAI-ARIAstatusdocumentationfor more details."
          ]
        },
        {
          "type": "list",
          "items": ["Skeleton loader", "Button", "Search"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/spinner/code",
      "title": "Spinner | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A spinner is an animated element that appears after a user's action to indicate that saving or loading is in progress."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/spinner/lookbook",
      "title": "Spinner | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A spinner is an animated element that appears after a user's action to indicate that saving or loading is in progress."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Findmore scenariosof the spinner component in our\n        Lookbook. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/stepper",
      "title": "Stepper | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A stepper separates structured workflows into meaningful, ordered steps."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "list",
          "items": [
            "Stepper: Complete component.",
            "Indicator: Shows what step you are on, and general progress information.",
            "Step: Contains all the content and actions for that task."
          ]
        },
        {
          "type": "list",
          "items": ["Segment tasks that are related and linear."]
        },
        {
          "type": "list",
          "items": [
            "When there is a small number of fields or if user input can happen in any order, instead use aform.",
            "When representing the percentage of completion of an activity, process, or task, instead use aprogress bar.",
            "When there is a process with unique content at each stage, for example, a DevOps lifecycle, instead use apath."
          ]
        },
        {
          "type": "list",
          "items": [
            "Steps are always linear, guiding the user to complete them in a specific order.",
            "Any step can be optional.",
            "A user can return to a previous step through a visibleBackbutton or the browser back button.",
            "A user can progress to the next page through a primary button with descriptive button text.",
            "Optional steps should additionally have a visibleSkipbutton.",
            "Progress is prevented and clear errors are displayed if any required inputs are invalid.",
            "A user should easily be able to change their decision during the process. For example, moving to step 2 will not trigger something that is unchangeable if they go back to step 1. If this cannot be done, include a warning that input cannot be changed once submitted.",
            "All steps should be shown in theIndicatorif the number of steps is determined from the start. For example, when signing up for a new account, user input does not impact the total number of steps, so all steps can be shown.",
            "Only one step in theIndicatorshould be populated at a time if the number of steps is undetermined. For example, if user input removes a future step, only one step should be shown at once. This followsprogressive disclosure guidelinesand ensures that conditional logic can work properly without impacting the user's ability to navigate to previous steps."
          ]
        },
        {
          "type": "list",
          "items": [
            "Avoidhiddenitems being created or deleted in the background throughout the process, insteadprovide feedbackto the user so they are aware of what happens between steps.",
            "A confirmation dialog should be triggered if the user leaves the flow before they complete their process. Ideally, the progress would be saved so that when they return, they can pick up where they left off. If that is not possible, be sure to communicate they will lose all data they entered.",
            "When possible, the last step should contain a summary of all user selections so the user can review before submitting.",
            "After triggering the process, the user should ideally be sent to the page where that object lives, so they can take action on what they created. If the object cannot be created immediately, stillprovide feedbackto the user by providing an estimated waiting time until the operation completes, if possible."
          ]
        },
        {
          "type": "list",
          "items": [
            "Each step has a title and optional description.",
            "If a step is optional, the description can state that it is.",
            "Step titles should be kept as descriptive as possible while remaining concise.",
            "Content in a step should always relate to the step title. When using steppers to request input from a user, the content within the step should consist of form elements."
          ]
        },
        {
          "type": "list",
          "items": ["Progress bar", "Path"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/table",
      "title": "Table | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tables display tabular data in a basic grid composed of cells, columns, and rows. This format makes it easy for users to scan and compare large amounts of data."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Caption: Provides a meaningful description for a table. A caption should only be optional when a heading directly precedes the table and provides clear enough context for it.",
            "Header cell: Can be used to sort table content.",
            "Icon: Indicates sort direction:arrow-upicon for sorting ascending.arrow-downicon for sorting descending.",
            "arrow-upicon for sorting ascending.",
            "arrow-downicon for sorting descending.",
            "Body cell: Supports text, buttons, links, and text accompanied by other common elements like an avatar or icon."
          ]
        },
        {
          "type": "list",
          "items": [
            "Display tabular data for comparison.",
            "Display structured content, where each entry has the same attributes.",
            "Let users review, enter, edit, or filter granular data sets.",
            "Display a data set that will continue to grow (e.g. Issues, Environments, and User Profile pages)."
          ]
        },
        {
          "type": "list",
          "items": [
            "Create page layout or design structure.",
            "Display a list of continuous, vertical indexes of text or images. Use a semantic HTML list instead.",
            "Display contained content and actions on a single topic. UseCardsinstead.",
            "For hierarchical structures. Use theTreeview instead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Basic: A basic table is the default option for this component, however, additional functionality can be added to enhance the table for different use cases.",
            "Striped: A striped table adds zebra-striping to the entire table, starting with the the header row. The alternating row background colors can be helpful to differentiate row content.",
            "Condensed: A condensed table cuts the body cell padding in half. Use a condensed table when the content presented is data heavy and text only. For example, displaying log files."
          ]
        },
        {
          "type": "list",
          "items": [
            "Tables work across multiple screen sizes and conform toresponsive guidelines.",
            "Tables take up the full width of their container element. However, it is important to note that wide tables make it difficult to read and scan small amounts of content, because the data is widely separated. For legibility, ensure content is laid out and aligned properly.",
            "Don’t simply shrink an entire table to fit the viewport or apply a fixed width to a table to the point that it compromises legibility. The same way stretching tables 100% to the width of the viewport is not recommended, a small, shrunken table view can create a cluttered interface. Use a responsive table view instead.",
            "Order the table content by importance, based on the information needs of your users.",
            "Text in tables tends to end up in narrow columns. Left-align text content, rather than justifying or centering it, to avoid confusion or readability issues.",
            "Thelabeltext stylesare used for product tables since the content is more data rich and requires less line height.",
            "Theparagraphtext stylesare used for Markdown tables in GitLab issues, merge requests, and documentation.",
            "In some circumstances, right-aligning the text content helps with readability. For example, right-align the numeric data with a consistent number of decimal places to improve scannability.",
            "Tables may switch their alignment for right-to-left audiences when designing forinternationalization.",
            "Use white space in tables to improvescannability, visually separating data elements so that each can be individually identified and read as separate from the others.",
            "To help with styling, use horizontal lines between rows to visually separate content, including the last row item. Avoid any border or frame surrounding the table. Do not style tables to look like nets, with every number enclosed.",
            "Do not apply vertical lines between columns. In general, tables without vertical lines look better and are easier to scan and read.",
            "By default, row content is verticallytopaligned. However, in some cases it does makes sense to verticallycenteralign content. Use your best judgement on when this is an exception.",
            "As general rule, consider that alignment within a table is more important than consistency from table to table."
          ]
        },
        {
          "type": "p",
          "text": "Any filtering controls that manipulate the data set should be placed directly above the table with the option to clear all data.See filter guidelines. When a new row is dynamically added by the system, the background color of the row should be set to$green-50in order to highlight the addition."
        },
        {
          "type": "list",
          "items": [
            "Sorting is designed as a native functionality of tables. Tables use column sorting rather thanlist sorting.",
            "The default sort direction of a table is usually ordered by one specific column attribute, such as status, last updated, or priority. Sorting is indicated in the table header using thearrow downandarrow upicons.",
            "Clicking the column header will sort the rows based on the selected column, in ascending order first, and subsequently toggling between ascending and descending order.",
            "Sorting can be disabled to prevent users from changing the sorting order of a column. The default order will utilize one specific attribute.",
            "The sorting icon and functionality should not be visible on responsive tables.",
            "To enable sorting for a particular table column, addsortableas a property in yourfieldsdata, like so:"
          ]
        },
        {
          "type": "code",
          "code": "fields:[{key:'first_name',label:'First name',sortable:true,},...]"
        },
        {
          "type": "list",
          "items": [
            "Tables displaying data sets with more than 20 items should use pagination.See pagination guidelines",
            "If a condensed table is used, data sets with more than 40 items should usepagination."
          ]
        },
        {
          "type": "list",
          "items": [
            "A table row can include additional actions in the far-right column.",
            "These actions should be visible at all times rather than showing on-hover.",
            "If there are two or more actions in a table row, consider using a button group or a“more menu” buttonwith a dropdown list option."
          ]
        },
        {
          "type": "p",
          "text": "At smaller breakpoints, tables can either maintain a tabular layout and scroll horizontally to view the overflow without breaking the page layout, or each row can be transformed into its own group where header content is present within each group."
        },
        {
          "type": "list",
          "items": [
            "If the data in each row needs to be compared to data in other rows then maintain the tabular layout.",
            "If the content simply shares headers and can live on its own without comparison, transform each row into its own group.",
            "If a row has embedded actions that could be missed when overflowing in the default tabular layout, transform each row into its own group so the actions can always be visible."
          ]
        },
        {
          "type": "p",
          "text": "If table cells needs to be navigable (not just some of the content within), consider extending the table as agridcomposite widget. A<caption>provides a meaningful description for a table."
        },
        {
          "type": "list",
          "items": [
            "A table header is the row at the top of the table that helps identify the columns below. The header provides clarity if data is non-descriptive or ambiguous.",
            "Tables should always include table headers. For short tables and for tables whose data are self explanatory, column headers are sufficient. For long tables or tables where data may be confusing, it is best to include row and column headers.",
            "Headers should be short, descriptive, and relevant. Avoid headers that are too long for the content in the rows below, and use title-case."
          ]
        },
        {
          "type": "p",
          "text": "Columns should be ordered by priority or in a way that tells a story with the data. Size columns according to the data they contain rather than making them all an even width. For example, columns of small content should be narrow, while columns of paragraphs should be relatively wide. Allow the browser to lay out the tables according to the viewport size. Rows can have a mix of read-only and editable cells with content populated by users. Seeadditional actionson table rows. A table's empty state displays when there is no data, yet.See empty states guidelines Representing null values should be made on a case-by-case basis. Some ways of addressing this are:"
        },
        {
          "type": "list",
          "items": [
            "Keep the cell empty. For example, if no data is returned.",
            "Use text to indicate what is missing. For example, \"Unassigned\" if there is no assignee.",
            "Use a dash (\"-\"). For example, if there is no data and a text explanation is not applicable."
          ]
        },
        {
          "type": "p",
          "text": "Lengthy content should be truncated according to thelayout guidelines. Use proper semantic markup, so that users of screen readers can navigate through the table one cell at a time, hearing column and row headers spoken to them."
        },
        {
          "type": "list",
          "items": [
            "<th>should not contain heading elements.",
            "<th>should be descriptive and relevant.",
            "<th>should have a definedscopeattribute to establish relationships between the table headings and rows/columns; for example,<th scope=\"col\">.",
            "<caption>must be used to provide a title for a table.",
            "<caption>must be an immediate child element of<table>."
          ]
        },
        {
          "type": "list",
          "items": [
            "Code Review Analytics + Table Component: Design evaluation & usability testing"
          ]
        },
        {
          "type": "list",
          "items": [
            "Card",
            "Tree",
            "Filter",
            "Button",
            "Tooltip",
            "Pagination",
            "Empty states"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/table/code",
      "title": "Table | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tables display tabular data in a basic grid composed of cells, columns, and rows. This format makes it easy for users to scan and compare large amounts of data."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/table/lookbook",
      "title": "Table | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tables display tabular data in a basic grid composed of cells, columns, and rows. This format makes it easy for users to scan and compare large amounts of data."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tabs",
      "title": "Tabs | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tabs divide content into meaningful, related sections."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Tab group: Contains all tabs.",
            "Tab: Contains text label and badge.",
            "Active indicator: Highlights the active tab.",
            "Label: Text representing the content of the tab panel.",
            "Badge(optional): Counts the number of items within the tab panel.",
            "Overflow indicator: Chevron that dynamically appears on either side of the tab group when the combined tab width is greater than the tab group width. Enables scrolling to view tabs that aren't immediately visible.",
            "Tab panel: Contains the content related to the active tab."
          ]
        },
        {
          "type": "list",
          "items": [
            "To show one content section at a time while maintaining a view of related options."
          ]
        },
        {
          "type": "list",
          "items": [
            "When presenting a filtered view of content, consider using thefiltercomponent instead.",
            "If content from multiple tabs should be viewed at the same time, consider using anaccordioninstead.",
            "If content is part of a flow, consider using thepathcomponent instead.",
            "Avoid confusing tabs with navigation. Tabs help users remain in the same context; use thenavigation-sidebarfor changing context."
          ]
        },
        {
          "type": "list",
          "items": [
            "A tab reveals its associated content (tab panel) when activated.",
            "Only one tab can be active at a given time.",
            "Tabs may be nested with a maximum nesting of two levels. This pattern should only be considered as a last resort due to the complexity it creates both in code and for the user experience.",
            "Each tab at the parent level should have its own unique URL. When determining whether to implement unique URLs for child tabs, consider whether or not a user would want to bookmark or link to the tabbed content.",
            "Tabs should ideally scroll horizontally when adapting to the browser size or when a large number of tab buttons are needed.Currently, due totechnical limitations, when adding buttons to the tab group, tabs will wrap when they overflow the container.",
            "Currently, due totechnical limitations, when adding buttons to the tab group, tabs will wrap when they overflow the container."
          ]
        },
        {
          "type": "list",
          "items": [
            "A text label should be concise and indicate what is in the related tab panel.",
            "Truncate longer labels, showing the full text in atooltip.",
            "Each tab can include abadgewith a count of how many items the related tab panel contains.If an “All” tab exists, it should have a badge that is the sum of the other tab badges.A badge that includes a numeric count should be followed by a<span>with thesr-onlyclass providing a text description of what's being counted.",
            "If an “All” tab exists, it should have a badge that is the sum of the other tab badges.",
            "A badge that includes a numeric count should be followed by a<span>with thesr-onlyclass providing a text description of what's being counted.",
            "The label + badge (if present) determines individual tab width unless justified tabs are used (seeAlignment)."
          ]
        },
        {
          "type": "list",
          "items": [
            "Tabs are left-aligned by default.",
            "Justified tabs use a fluid width to fill the entire container. Each tab takes up an equal percentage of the container width. Consider using when:There are only 2–3 tabs.The tabs fit horizontally within a mobile viewport without wrapping.The breakpoint is ≤ MD. The exception is tabs in a modal or other constrained container that isn’t relying on breakpoint to determine the width of nested content.",
            "There are only 2–3 tabs.",
            "The tabs fit horizontally within a mobile viewport without wrapping.",
            "The breakpoint is ≤ MD. The exception is tabs in a modal or other constrained container that isn’t relying on breakpoint to determine the width of nested content."
          ]
        },
        {
          "type": "list",
          "items": [
            "Tabs follow theWAI-ARIA Authoring Practices 1.1guidelines for functionality."
          ]
        },
        {
          "type": "list",
          "items": ["Accordion", "Path"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, July 18, 2024 at 7:45 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tabs/code",
      "title": "Tabs | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tabs divide content into meaningful, related sections."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, July 18, 2024 at 7:45 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tabs/lookbook",
      "title": "Tabs | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tabs divide content into meaningful, related sections."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, July 18, 2024 at 7:45 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/text-input",
      "title": "Text input | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A component for the HTML input type=\"text\" element."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "When usingGlFormGroup, thelabelprop alone does not give the input an accessible name.",
            "Thelabel-forprop must also be provided to give the input an accessible name."
          ]
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue title')\"label-for=\"issue-title\"><gl-form-inputid=\"issue-title\"v-model=\"title\"/></gl-form-group>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue title')\"label-for=\"issue-title\"label-sr-only><gl-form-inputid=\"issue-title\"v-model=\"title\"/></gl-form-group>"
        },
        {
          "type": "p",
          "text": "Alternatively, you can use a plainlabelelement:"
        },
        {
          "type": "code",
          "code": "<labelfor=\"issue-title\">{{ __('Issue title') }}</label><gl-form-inputid=\"issue-title\"v-model=\"title\"/>"
        },
        {
          "type": "code",
          "code": "<labelfor=\"issue-title\"class=\"gl-sr-only\">{{ __('Issue title') }}</label><gl-form-inputid=\"issue-title\"v-model=\"title\"/>"
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/textarea",
      "title": "Textarea | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A component for the HTML textarea element."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "When usingGlFormGroup, thelabelprop alone does not give the input an accessible name.",
            "Thelabel-forprop must also be provided to give the input an accessible name."
          ]
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue description')\"label-for=\"issue-description\"><gl-form-textareaid=\"issue-description\"v-model=\"description\"/></gl-form-group>"
        },
        {
          "type": "code",
          "code": "<gl-form-group:label=\"__('Issue description')\"label-for=\"issue-description\"label-sr-only><gl-form-textareaid=\"issue-description\"v-model=\"description\"/></gl-form-group>"
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/toast",
      "title": "Toast | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A toast displays a short system message as a result of a user's action."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Message: Text content indicating the purpose and potential next steps.",
            "Action(optional): A single text action a user can take based on the content of the toast.",
            "Dismiss button: Removes the toast for a user."
          ]
        },
        {
          "type": "list",
          "items": [
            "Provide a contextual message based on a user's action in the same view the action took place."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to communicate an error to a user, consider using adanger or warning alertinstead.",
            "If there's a page refresh, or a message needs to be communicated after a user visits a new page, consider using analertinstead.",
            "If the action is irreversible, consider using amodalinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "A toast appears with an ease-in animation from the bottom of the viewport after a user's action.",
            "A user can dismiss the toast by clicking the “dismiss” icon button.",
            "If left alone, a toast without an action will disappear after five seconds.",
            "Hovering over a toast causes it to remain until the cursor is moved.",
            "A toast with an action is only dismissed when a user does one of the following:Clicks the action.Clicks the dismiss button.Navigates to another page.",
            "Clicks the action.",
            "Clicks the dismiss button.",
            "Navigates to another page."
          ]
        },
        {
          "type": "list",
          "items": [
            "The message should be a concise full sentence that ends with a period."
          ]
        },
        {
          "type": "list",
          "items": [
            "Centered at the bottom of the viewport for smaller breakpoints and bottom left of the viewport for larger breakpoints.",
            "Multiple toasts stack vertically from top to bottom with the oldest on top."
          ]
        },
        {
          "type": "list",
          "items": ["Alert", "Modal", "Popover", "Tooltip"]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/toast/code",
      "title": "Toast | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A toast displays a short system message as a result of a user's action."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/toast/lookbook",
      "title": "Toast | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A toast displays a short system message as a result of a user's action."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/toggle",
      "title": "Toggle | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A toggle is a visual switch which acts as a boolean."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Label: Describes the control when the toggle is on.",
            "Description: (optional) Provides more context for the label.",
            "Switch: Visual indication of whether the toggle is on or off.",
            "Body: Containing body for the switch to move on and off.",
            "Help text: Clarifies the outcome of changing the toggle state."
          ]
        },
        {
          "type": "list",
          "items": [
            "There's a binary choice for enabling a setting (ux-research#1215). For examples, choices that follow a boolean relationship like on/off, true/false, enable/disable, or activate/deactivate.",
            "The item being toggled has a default state. For example, notifications default to off for a merge request you haven't participated in.",
            "The result of changing the toggle state is immediately effective and there'sno needfor an additional action to apply or save a change."
          ]
        },
        {
          "type": "list",
          "items": [
            "A submit button is needed to apply or save a selection.",
            "When the setting exists within a form that has other elements, like text inputs or checkboxes, that need to be saved or submitted.",
            "Two choices don't map to a boolean relationship like on/off.",
            "There are more than two choices.",
            "If multiple items can be selected, including nested items, and the result of the selection has to be saved or submitted, consider using acheckboxinstead.",
            "If only one item can be selected and the result of the selection has to be saved or submitted, consider using aradio buttoninstead.",
            "If making a selection from a list of items, consider using acomboboxinstead.",
            "If changing a content view or preference in the context of that content, consider using asegmented controlinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Toggle labels are set in bold, positioned above the element by default.",
            "The label can be positioned to the left if only a single toggle is being used.",
            "The description sits below the label."
          ]
        },
        {
          "type": "list",
          "items": [
            "Consider providing feedback of the toggle state change by using atoast."
          ]
        },
        {
          "type": "list",
          "items": [
            "Concisely describe what the control does when the toggle is on."
          ]
        },
        {
          "type": "list",
          "items": [
            "Optional: Provides more context for the label.",
            "Only available using a vertical layout."
          ]
        },
        {
          "type": "list",
          "items": [
            "Clarifies the outcome of changing the toggle state.",
            "Only available using a vertical layout."
          ]
        },
        {
          "type": "list",
          "items": [
            "Thegl-togglecomponent requires anid, which is used in thearia-labeledbyattribute value.",
            "Usearia-describedbyto associate the description and help text with the toggle for a screen reader user."
          ]
        },
        {
          "type": "code",
          "code": "<gl-togglev-model=\"notifications\":label=\"__('Notifications')\"/>"
        },
        {
          "type": "code",
          "code": "<gl-togglev-model=\"notifications\":label=\"__('Notifications')\"label-position=\"hidden\"/>"
        },
        {
          "type": "list",
          "items": ["Checkbox", "Radio button", "Segmented control"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/toggle/code",
      "title": "Toggle | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A toggle is a visual switch which acts as a boolean."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/toggle/lookbook",
      "title": "Toggle | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A toggle is a visual switch which acts as a boolean."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/token",
      "title": "Token | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A token represents a keyword used to add or filter objects."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Avatar(optional): Prefixes the text for a user, project, or group.",
            "Text: Represents the query.",
            "Remove button(optional): Permanently removes the token."
          ]
        },
        {
          "type": "list",
          "items": [
            "In a search query where the user is expected to include multiple queries.",
            "To represent dynamic user input in afilterand verify the input by converting the text into a token.",
            "Allow a user to manage, filter, and search in a compact area."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to categorize an object, use alabelinstead.",
            "To highlight more generic object metadata that is system-generated, use abadgeinstead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Interactive: Include acloseicon at the end of the token. When enabled, a user can click the icon to remove the token from the set.",
            "View-only: Can't be removed.",
            "Avatar: When querying for a user, project, or group, an avatar token should be used. These can be either interactive or view-only."
          ]
        },
        {
          "type": "list",
          "items": [
            "A token can be positioned inline with the text cursor in a field, or in a stacked list.",
            "A token can wrap to a new row."
          ]
        },
        {
          "type": "p",
          "text": "A token can be used to both add and filter content where:"
        },
        {
          "type": "list",
          "items": [
            "An input token adds content in the form of an attribute attached to another object.",
            "A filter token narrows down content and is attached to a qualifier. Thefilterinherits a filter token."
          ]
        },
        {
          "type": "list",
          "items": ["Filter", "Badge", "Label"]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/token/code",
      "title": "Token | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A token represents a keyword used to add or filter objects."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/token/lookbook",
      "title": "Token | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A token represents a keyword used to add or filter objects."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Friday, February 2, 2024 at 12:19 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tooltip",
      "title": "Tooltip | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tooltips identify elements or provide additional, useful information about the referring elements."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Container: Wraps the content.",
            "Text: Concisely describes the referring element or its purpose.",
            "Tip: Points to the referring element."
          ]
        },
        {
          "type": "list",
          "items": [
            "Show the same data in a different format, such as date or timestamps.",
            "Display a full string of text that is shortened with an ellipsis (…).",
            "Provide context for unlabeled items such asicon buttons, except forcertain cases."
          ]
        },
        {
          "type": "list",
          "items": [
            "Foricon buttonsthat may be universally understood, like a closing action using theclose icon."
          ]
        },
        {
          "type": "p",
          "text": "Consider using apopoverfor the following scenarios:"
        },
        {
          "type": "list",
          "items": [
            "Display information required for task completion, such as password formatting hints.",
            "Display more than a single line of information or dimensional data, such as user name or status.",
            "Display a sophisticated layout and formatting.",
            "Offer simple controls and/or actions that are closely tied to the element or object, such as searchable list, links, or buttons."
          ]
        },
        {
          "type": "list",
          "items": [
            "By default, tooltips are placed on top of the referring element.",
            "When there isn’t enough space in the viewport, the tooltip is moved to the side or below as needed.",
            "If it blocks related content, the preferred tooltip placement can be manually set.",
            "Should have no space (0px) between themselves and their target.",
            "Remain in place while the cursor moves within the target.",
            "Should never obscure the target element.",
            "Content within a tooltip uses center-alignment.",
            "Wraps when the content is wider than the max-width."
          ]
        },
        {
          "type": "list",
          "items": [
            "Fades in upon hover or focus on the trigger element.",
            "Remains open until the cursor moves outside of itself or the trigger, or focus is moved away from the trigger."
          ]
        },
        {
          "type": "p",
          "text": "Similar topopovers, a tooltip has a default delay of500msonshowto help confirm hover intent and ensure that:"
        },
        {
          "type": "list",
          "items": [
            "A user doesn’t accidentally hover an element with a tooltip, which might cover an adjacent element they intended to select.",
            "The UI isn't constantly showing tooltips when a user is moving their mouse over the page."
          ]
        },
        {
          "type": "p",
          "text": "Overriding theshowdelay for a tooltip is strongly discouraged for the reasons above, but there are useful circumstances for a tooltip to appear instantly. For example, pipeline icons that are visually the same, but have unique tooltip text that a user relies on to determine the pipeline status. Here, a delay would make it cumbersome to decipher the pipeline while hovering from one icon to the next. To shorten the delay in these cases, utilizeds###in the tooltip directive, where###is the milliseconds of delay. Here's an example of a tooltip directive with a0msdelay (instant) onshow:"
        },
        {
          "type": "code",
          "code": "<gl-buttonv-gl-tooltip.ds0.../>"
        },
        {
          "type": "list",
          "items": [
            "Should be short and concise.",
            "Shouldn’t repeat information that is shown near the referring element."
          ]
        },
        {
          "type": "list",
          "items": [
            "Tooltips should not auto-dismiss as it would violateWCAG 1.4.13 Content on Hover or Focus",
            "When adding tooltips, ensure that the element with the tooltip can receive focus so a keyboard user can see the tooltip.",
            "If the element is a static one, such as an icon, enclose it in a button which already is focusable so we don't have to addtabindex=0to the icon."
          ]
        },
        {
          "type": "p",
          "text": "The following code snippet is a good example of an icon with a tooltip."
        },
        {
          "type": "list",
          "items": [
            "It's automatically focusable, as it is a button.",
            "It's given an accessible name witharia-label, as it is a button with no text."
          ]
        },
        {
          "type": "code",
          "code": "<buttonv-gl-tooltip:title=\"__('Tooltip text')\":aria-label=\"__('Warning')\":icon=\"warning\"/>"
        },
        {
          "type": "list",
          "items": ["Popover", "Button"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tooltip/code",
      "title": "Tooltip | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tooltips identify elements or provide additional, useful information about the referring elements."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tooltip/lookbook",
      "title": "Tooltip | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Tooltips identify elements or provide additional, useful information about the referring elements."
        },
        {
          "type": "list",
          "items": [
            "Usage",
            "Implementation (Vue.js)",
            "Implementation (Rails)",
            "Contribute"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 11:07 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/components/tree",
      "title": "Tree | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A tree component structures parent and child nodes into a meaningful hierarchy."
        },
        {
          "type": "list",
          "items": ["Usage", "Contribute"]
        },
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Chevron: Identifies when the node is open or closed. Pointing down is open. Pointing right is closed.",
            "Icon: Indicates what type of node it is.",
            "Avatar: Supporting visual for the node title.",
            "Title: Identifies the node.",
            "Description(optional): Describes the node.",
            "Connector: Visual aid to indicate hierarchy and connections."
          ]
        },
        {
          "type": "list",
          "items": [
            "Create hierarchical structure to view and access parent and child nodes."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need a way for a user to expand or collapse a content section, use anaccordioninstead.",
            "To indicate page location in a navigational hierarchy, use abreadcrumbinstead.",
            "If you're organizing general content in a structured way, consider using a semantic HTML list instead."
          ]
        },
        {
          "type": "list",
          "items": [
            "A tree follows a top-down pattern and each consecutive nested node (level) is indented to communicate the hierarchy.",
            "Collapsed and expanded nodes should be distinguishable."
          ]
        },
        {
          "type": "p",
          "text": "There are two primary interactions in a tree:"
        },
        {
          "type": "list",
          "items": ["Expanding and collapsing nodes.", "Links to node content."]
        },
        {
          "type": "list",
          "items": [
            "The title should be clear and concise.",
            "Additional content, like anavatar,icon,label, or description can be attributes of the node."
          ]
        },
        {
          "type": "list",
          "items": [
            "A tree view uses a containing element with thetreerole. Nodes use thetreeitemrole.",
            "See theWAI-ARIA tree view documentationto learn more about computed and declared ARIA properties and how to control focus and selection of node items."
          ]
        },
        {
          "type": "list",
          "items": ["Accordion", "Breadcrumb"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 11, 2024 at 2:17 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/content/date-and-time",
      "title": "Date and time | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Dates and times clarify when an event occurred. The way they are formatted should be informative, not disruptive. While users can choose a preferred date and time format, there are occasions when we default to a specified format instead. The absolute format clarifies the precise date and time that something occurred. We can either display alocalized time and date formatbased on the user's location or use a non-localized format following theISO 8601 standard."
        },
        {
          "type": "list",
          "items": [
            "Localized dates display the day, month, and full year by default (for example: Jan 3, 2022). The date can be shortened to the day and month when space is tight (Jan 3). If the date is shortened, show the full date and time data in a tooltip, along with the timezone (Jan 3, 2022 11:00am UTC-8).Use thenumericvalue of theyearparameterto display the year in full (for example: 2022). The shortened version of the year may be used instead if there is limited space (22).For themonthparameter, use theshortvalue (for example: Mar). Note that the API will auto-adjust tofullif the language can't be shortened.For thedayparameter, use thenumericvalue. (For example: 1)FortimeZoneName, use eithershort(for example: UTC-8) orlong(for example: Pacific Standard Time), depending on space and what is needed to make the time zone clear in context.",
            "Use thenumericvalue of theyearparameterto display the year in full (for example: 2022). The shortened version of the year may be used instead if there is limited space (22).",
            "For themonthparameter, use theshortvalue (for example: Mar). Note that the API will auto-adjust tofullif the language can't be shortened.",
            "For thedayparameter, use thenumericvalue. (For example: 1)",
            "FortimeZoneName, use eithershort(for example: UTC-8) orlong(for example: Pacific Standard Time), depending on space and what is needed to make the time zone clear in context.",
            "ISO 8601 format is displayed YYYY-MM-DD. Time can also be appended to the end of the date if necessary (HH:MM:SS)."
          ]
        },
        {
          "type": "p",
          "text": "The relative format communicates the approximate amount of time that has passed since an event occurred; whether that event occurred XX minute(s), hour(s), day(s), week(s), month(s), or year(s) ago. For example, it is used to communicate that an issue was opened \"1 minute ago\" or \"10 months ago\". When using the relative format, always display the absolute time in a tooltip following theGuidelinesbelow."
        },
        {
          "type": "list",
          "items": [
            "Display date and time information in the absolute format unlessusers specify they want to use relative formattinginstead.",
            "If it's possible to detect the browser settings, display the localized time, for example, Jan 3, 2021. Otherwise, fall back to displaying the date in ISO 8601: YYYY-MM-DD (time is optionally appended after the date, HH:MM:SS)."
          ]
        },
        {
          "type": "p",
          "text": "In certain scenarios, the date and time are displayed in a specific format and the user's preference is overridden. Useabsolute formatwhen:"
        },
        {
          "type": "list",
          "items": [
            "Users need specific dates and/or times for technical, security, or legal reasons. For example, in an audit log, a tax form, or a security alert.",
            "Users would need to convert relative time to absolute time in order to complete a task.",
            "A range of time is displayed, for example in a date picker."
          ]
        },
        {
          "type": "p",
          "text": "Userelative formatwhen:"
        },
        {
          "type": "list",
          "items": [
            "Content is updated frequently and specifics are not critical. For example, a live newsfeed or notification."
          ]
        },
        {
          "type": "p",
          "text": "In situations where timezone context is important, for example in alerts or incidents, append the timezone information to the end of the date and time. Last updated at:Tuesday, October 8, 2024 at 4:00 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/content/i18n",
      "title": "Pajamas Design System",
      "content": []
    },
    {
      "url": "https://design.gitlab.com/content/punctuation",
      "title": "Punctuation | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A period signals to a speaker or reader that a sentence has come to an end, and it assists users in visually breaking up content."
        },
        {
          "type": "list",
          "items": [
            "Donotuse periods:For the label of a UI element. For example, for the label associated with a checkbox, text box, or button.For the title of a UI element. For example, for the title of a banner, warning, broadcast message, dialog box, or modal.",
            "For the label of a UI element. For example, for the label associated with a checkbox, text box, or button.",
            "For the title of a UI element. For example, for the title of a banner, warning, broadcast message, dialog box, or modal.",
            "Use periods:For additional help text. For example, for text in banners, warnings, and for the extra description below a checkbox or text box.",
            "For additional help text. For example, for text in banners, warnings, and for the extra description below a checkbox or text box."
          ]
        },
        {
          "type": "p",
          "text": "Follow these additional guidelines: Use periods with links that are full sentences. Use a period after every bullet point that is a sentence."
        },
        {
          "type": "list",
          "items": [
            "This is a complete sentence.",
            "This is also a complete sentence."
          ]
        },
        {
          "type": "list",
          "items": [
            "This is a complete sentence, it needs a period",
            "This is also a complete sentence, it also needs a period"
          ]
        },
        {
          "type": "p",
          "text": "Use a period after every bullet point that completes the introductory stem. This is an introductory stem:"
        },
        {
          "type": "list",
          "items": [
            "Completed by this sentence.",
            "Also completed by this sentence."
          ]
        },
        {
          "type": "p",
          "text": "This is an introductory stem:"
        },
        {
          "type": "list",
          "items": [
            "Completed by this sentence",
            "Also completed by this sentence"
          ]
        },
        {
          "type": "p",
          "text": "Use no punctuation after bullets that are not sentences and do not complete the stem. These are just words in a list:"
        },
        {
          "type": "list",
          "items": ["One item", "Two item"]
        },
        {
          "type": "p",
          "text": "These are just words in a list:"
        },
        {
          "type": "list",
          "items": ["One item.", "Two item."]
        },
        {
          "type": "p",
          "text": "Use all sentences or all fragments in a bulleted list, not a mixture."
        },
        {
          "type": "list",
          "items": [
            "Consistency is key here.",
            "Item.",
            "Don’t mix sentences and individual items in a list."
          ]
        },
        {
          "type": "list",
          "items": [
            "Consistency is key here.",
            "Item",
            "Don’t mix sentences and individual items in a list."
          ]
        },
        {
          "type": "p",
          "text": "Use “1, 2, 3” instead of “one, two, three” for numbers. One exception is when mixing uses of numbers, such as “Enter two 3s.” Use punctuation to add clarity or be grammatically correct. Last updated at:Tuesday, October 8, 2024 at 4:00 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/content/ui-text",
      "title": "How to write UI text | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Copy and messaging are meaningful aspects of the GitLab experience and the conversation with our users. The copy for GitLab is clear and direct. We strike a balance between professional and friendly. We can empathize with users (such as celebrating completing all items on the To-Do List) while remaining respectful to the importance of their work. We are a trusted, friendly, helpful, and understanding coworker. When you author UI text, consider the following tenets. If you're deciding between being consistent with other language on the same screen,\nor following the latest style guidance, go with consistency. A page that mixes phrasing is harder for users to parse and looks unprofessional. If the text on a page doesn't match the latest guidance, or is inconsistent,\ncreate a merge request, open an issue, orping the Papercuts team. To be consistent, follow style guidance in this order:"
        },
        {
          "type": "list",
          "items": [
            "For specific terms, use the technical writingword list.",
            "For component-specific guidance, use the Pajamas page for each component.",
            "For general guidance, use the technical writingstyle guide."
          ]
        },
        {
          "type": "p",
          "text": "If you have questions, ask a technical writer. For clear and consistent communication, it’s important to always use correct terminology. You can find most terms in theword listthat's maintained by the Technical Writing team. If you do not see the term you need, open a merge request to add it, or contact a technical writer for assistance. In addition:"
        },
        {
          "type": "list",
          "items": [
            "Search the product for the term before creating a new term.",
            "Be extremely cautious when usingjargonandcolloquialisms. They can confuse new users and cause problems with internationalization.",
            "Considerscreen readersand their ability to interpret non-standard terminology."
          ]
        },
        {
          "type": "p",
          "text": "Users will skim content, rather than read text carefully. Copy should be concise and short whenever possible. A long message or label indicates a design that might need improvement. When familiar with a web app, users rely on muscle memory and may read even less when moving quickly. A good experience should quickly orient a user, regardless of their experience, to the purpose of the current screen. Understanding should happen without the user having to consciously read long strings of text. In general, text is burdensome and adds cognitive load. This load is even more pronounced in a powerful productivity tool such as GitLab. We shouldn’t rely on words to explain the purpose of a screen. Instead, the current navigation and composition of on-screen elements should get the user 95% there, with the remaining 5% being specific elements such as text. Brevity is especially important for:"
        },
        {
          "type": "list",
          "items": ["Headers", "Button text", "Field labels", "Error messages"]
        },
        {
          "type": "p",
          "text": "For each of these content types, look for ways you might rephrase text that seems too long. Also, eliminate unnecessary phrases like “in order to” and extra articles like “the” when they don’t add clarity. Sometimes an extra word or two are required for clarity. For example, if the context clearly refers to the object, you can use a verb or adjective by itself."
        },
        {
          "type": "list",
          "items": ["Example:EditorClosed"]
        },
        {
          "type": "p",
          "text": "If the context isn’t clear enough, use an object."
        },
        {
          "type": "list",
          "items": ["Example:Edit issueorClosed issues"]
        },
        {
          "type": "p",
          "text": "When something goes wrong, it's important for us to be clear about what happened, why it happened, and what the next steps to take may be. Vague messages frustrate users and can even block them from completing their task. When writing an error message, leave out extraneous words like \"sorry\" and \"please.\" This makes errors easier to read and understand. When users engage with our product, they’re focused on getting tasks done, thinking first in terms of the problem they’re trying to solve, and then how to solve it.\nObjective-focused content that starts with the task first and then offers the solution can make it easier for users to quickly find and understand the information they need. Use sentence case for field labels and column headings. Avoid title case."
        },
        {
          "type": "list",
          "items": [
            "Capitalization offeature namesandother terms",
            "Punctuation",
            "Lists",
            "Active voice",
            "Customer perspective",
            "Building trust"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 8, 2024 at 4:00 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/content/verb-tenses",
      "title": "Verb tenses | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Depending on when you show a status or error message, you might use one of many different verb tenses. For a status update on something that has just happened in response to a user action or when a user is otherwise watching for an update, use thepresent perfecttense. This is ideal for toast messages and terminal output. There are two options:"
        },
        {
          "type": "list",
          "items": [
            "When brevity is the priority, use only the noun and verb (omitting articles and prepositions); for example, “Pipeline scheduled.”",
            "When you want to use a full phrase for a human feel, use a complete sentence; for example, “The pipeline has been scheduled.”"
          ]
        },
        {
          "type": "p",
          "text": "For a status update about something that happened in the more distant past, usepast tense. For a status update about something that's slated to happen in the future, usepresent tense. For instructions, usepresent tensewith an imperative verb. Last updated at:Tuesday, October 8, 2024 at 4:00 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/data-visualization/charts",
      "title": "Charts | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Charts help users quickly digest, visualize and see trends in their data. Our charts are built with resources from theApache EChartsOpen Source Library. Charts should be:"
        },
        {
          "type": "list",
          "items": [
            "Simple to understand, and easy to interact with.",
            "Have a consistent visual appearance, and be accessible on all screen sizes."
          ]
        },
        {
          "type": "p",
          "text": "When creating and utilizing charts, consider the following:"
        },
        {
          "type": "list",
          "items": [
            "Use chart titles, category and value labels as necessary to clarify the content being shown, with units in parentheses, if required. Note that units aren't always necessary, for example, in the case of counts.",
            "If there is more than one data series being displayed, add a legend to differentiate them.",
            "We have two legend types: default and tabular. The default legend option works best for simple charts. If a chart has many series, or if you want to display multiple values for a series (for example, average, median, and maximum), use the tabular chart legend for better readability.",
            "In legends, any text after the series name is optional. Use this space to add complementary information as needed, such as total or average values.",
            "Line and area charts use the series label with the rectangular color chip to match the line colors in the chart, while column and heat map charts use the square color chip to match the fill and stroke color of the elements in the visualization. The fill of the chip should match the fill of the column and the border of the chip should match the border of the column.",
            "Charts follow the data visualization recommendations forcolor.",
            "When hovering, detailed information on the data point is shown in apopover.",
            "Represent gaps in continuous data with a dashed$grey-300line, and without a data point."
          ]
        },
        {
          "type": "p",
          "text": "GitLab UI supportscolumn,line,area,bar,scatter,gaugeandsparklinecharts. In addition, there are other forms of data visualizations available (see, for example, theoverviewpage for information on heat maps, and thesingle statpage for additional information on the single stat component). When implementing a chart type that does not already have a GitLab UI component, you can use theChartcomponent alongside theECharts optionsto build your chart. When choosing a chart type, first consider your data set. If you are hoping to show:"
        },
        {
          "type": "list",
          "items": [
            "A comparison of values across categories or across time, consider a column, bar, line or sparkline chart.",
            "A comparison between groups or to show how a whole is divided into parts, consider an area chart.",
            "A distribution of values or the relationship between them, consider a scatter chart.",
            "A value within a given range, consider a gauge chart.",
            "The composition of elements within the data set, consider a grouped or stacked column chart."
          ]
        },
        {
          "type": "p",
          "text": "While most charts only have a single x and y axis, two y-axis charts may occasionally be used; for example, when showing data sets at different orders of magnitude (for example, issues closed, 10; issues opened, 10; total issues 1,000). In this instance, the second y-axis shows how the two data sets are related while ensuring the visualisation at both orders of magnitude is still usable and parsable. Column charts are the default chart type, and they are used to compare values across categories. The categories are usually presented on the x-axis, with the values on the y-axis. Column charts are favored over pie charts because they more clearly communicate data. The bars on a column chart are presented vertically rather than horizontally, and they can be stacked. It may sometimes be necessary to stack values in a column or to have groups of columns within your chart, for example when there are two dimensions of data (one nested within another) moving across time. Stacked columns can be either symmetric or asymmetric, meaning the number of stacks may or may not be equal across groups. When utilizing stacked and grouped charts, you may choose not to follow the standardcolor sequencing patternswhen doing so provides an extra indicator that items in different groups are related. In addition, graded transparency may help to highlight differences in stacked variables while still differentiating stacks from groups in your chart. Specific colors may be used when values in a chart have certain colors associated with them in the product; for example, merge request state or vulnerability status. Specific colors should, however, be used sparingly in favor of following the more generalcolorguidelines for data visualizations. When there are three dimensions of data you want to display, it's also possible to group and stack columns in the same chart. If, for example, you want to display all merged MRs in one column, open and closed MRs together in a second column, and show both of these dimensions on the same chart, over time, you could display:"
        },
        {
          "type": "list",
          "items": [
            "Merged MRs in one column.",
            "Open and closed MRs in a separate, stacked column.",
            "Both columns of data across time (on the x-axis)."
          ]
        },
        {
          "type": "p",
          "text": "Line charts are used to display continuous data. They are useful when you are looking to identify trends or to see larger patterns in your data, and to see how your data changes over time. Area charts are used to represent \"cumulated totalsusing numbers or percentages.\" In instances where you want to see both the overall trend and the percent contribution, it is preferable to use a line chart rather than an area chart. It can be very difficult for our eyes to correctly assess the width of areas and how it trends. Bar charts are a variation of column charts, where the columns are horizontal rather than vertical. It can be used for the same purposes as column charts, which is to compare values across categories. Scatter charts give a sense of the distribution and relative size of values. Gauge charts highlight the current value within the range of possible values for the metric. Sparkline charts give a quick indication of trend and a summary of the current value. They are particularly useful when space is limited. By hovering over specific data points on charts, users will see apopover. The popovers for charts help provide users with more detailed information about both the values being hovered on and their corresponding positions on the x and y axes. The data displayed in the chart popovers is as follows:"
        },
        {
          "type": "list",
          "items": [
            "Popover header: x-axis value (x-axis title)",
            "Popover body: y-axis title, value"
          ]
        },
        {
          "type": "p",
          "text": "Hovering over any of the charts on this page reveals a visual example of how popover content is structured in charts. Placement is set to the right by default to avoid obstructing y-axis data but can be adjusted if doing so would make the chart easier to read. The popover placement should dynamically shift depending on the selected element and space available in the chart. The max-width of chart popovers is512px, with long chart values wrapping rather than truncating. When chart values in popovers wrap, break the word into two lines without using a hyphen. Chart data can be toggled on and off by clicking its related item in the legend. A \"more options\" menu (vertical ellipses) can be used in the top righthand corner of charts. This provides users with access to additional chart functionality (such as copying chart embed code) which isn't directly displayed on or near the chart. ECharts has a default mechanism forzooming on charts. A zoom bar gives users more control over how much data is displayed at any one time, and gives them the ability to dig into issues they are observing at a more granular level. The zoom bar is not added to all charts by default and shouldn't be used in cases where the chart neatly fits its container. However, in instances where the chart would otherwise overflow its container or where there is a large amount of data for users to explore, the zoom bar should be introduced. Color, spacing, dimension, and layout specific information pertaining to this component can be viewed using the following links: Pajamas UI Kit → Line chart in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": ["Single stat"]
        },
        {
          "type": "list",
          "items": ["Popover"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/data-visualization/color",
      "title": "Color | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Data visualization is critical content within GitLab. The presentation and interpretation of this content relies on visual nuance that is separate from the rest of the UI. The data visualization palette is designed specifically for conveying different types of data. The meaning is derived from the data itself, not by color as a first measure. The palette is versatile enough to be applied in a number ofdata typesin both light and dark UI. There are 5 hues, each with 11 steps for a total of 55 variables. The palette is designed for both light and dark UI where:"
        },
        {
          "type": "list",
          "items": [
            "Steps50—500meet or exceed a 3:1 contrast ratio on a dark$gray-950(#1f1e24) surface.",
            "Steps500—950meet or exceed a 3:1 contrast ratio on a light$white(#ffffff) surface."
          ]
        },
        {
          "type": "p",
          "text": "Because the500step has at least a 3:1 contrast ratio on both light and dark surfaces, there are 30 total variables that can be used for each surface. We categorize data into three general types:sequential,categorical, anddivergent. Each type uses color differently to best present the data. A color sequence helps colorblind users distinguish data visualization content. With 5 hues in the palette, we can alternate both the hue and steps to create sequences with color and contrast differences. Data types are covered in more detail below, but here’s a general summary of how each uses color sequences:"
        },
        {
          "type": "list",
          "items": [
            "Sequential datauses steps within a single hue to present a single data range.",
            "Categorical datauses hues to differentiate categories, and like sequential data, steps within each hue to present a data range.",
            "Divergent datauses hue transitions to present data ranges on either side of a common central point."
          ]
        },
        {
          "type": "p",
          "text": "PerWCAG 2.1 Success Criterion 1.4.11: Non-text Contrast, UI components and graphical objects must have a contrast ratio of at least 3:1 against adjacent colors. This means sufficient contrast against the surface (background), and each other."
        },
        {
          "type": "list",
          "items": [
            "In a light UI, all data visualization should be on a$white(#ffffff) surface.",
            "In a dark UI, all data visualization should be on a$gray-950(#1f1e24) surface."
          ]
        },
        {
          "type": "p",
          "text": "Colors meet or exceed a 3:1 contrast ratio against either a light or dark surface, but not necessarily each other. There are a few solutions, but the easiest is space between each element. This means at least a1pxgap between elements, where the gap is the color of the surface. Alternately, a border of at least1pxcan be used on elements, where the border matches the surface color. Whether this is an actual gap, or border, the effect is the same. Pattern fills can create accessibility issues of their own, namely cognitive, and we currently do not support this as an option. Sequential data uses steps within a single hue, and color lightness to indicate a range from low to high. Blue is the default hue for charts with a single data range, and$data-viz-blue-500is the base step for both light and dark UI. Others hues can be used instead by following a similar pattern."
        },
        {
          "type": "list",
          "items": [
            "Steps in a light UI go from500(low) to950(high) so that the higher the value, the darker it is and the more contrast it has against the light surface.",
            "Steps in a dark UI go from500(low) to50(high) so that the higher the value, the lighter is is and the more contrast it has against the dark surface."
          ]
        },
        {
          "type": "p",
          "text": "Potential applications:stacked bar charts, heat maps, choropleth maps, funnels, cycle diagrams, clusters, pyramids, etc. Categorical data (also known as qualitative or thematic) uses hue to differentiate categories (qualitative), and lightness to differentiate a data range (quantitative). A chevron-skipping sequence is used to alternate both hue and lightness to increase contrast between sibling elements. The default sequence loops through different steps of each hue in the following order:"
        },
        {
          "type": "list",
          "items": ["Blue", "Orange", "Aqua", "Green", "Magenta"]
        },
        {
          "type": "p",
          "text": "Blue is always the default starting point, and$data-viz-blue-500is the base step for both light and dark UI. Potential applications:bar charts, pie charts, line graphs, stacked area charts, etc. Divergent data moves in opposite directions from a central point. Color is used to indicate distance from the center by stepping darker in a light UI to each end, while stepping lighter in a dark UI to each end. The pattern for selecting values skips every other step by default, and has a range of 11 steps including the central point. For data with a smaller range, the pattern could be a subset that starts at the same central point, but does not extend as far to each end. For data with a larger range, add skipped values into the sequence, starting from the center out. The number of steps required to make a useful progression would not meet 3:1 contrast ratios by using fill alone (each hue has 6 steps with enough contrast for each surface), so a border that uses the500value from the relative hue surrounds low-contrast fills. There are two divergent options, choose the one that works best with the type of data being shown."
        },
        {
          "type": "list",
          "items": [
            "A cool to warm hue transition is helpful for showing a decrease vs. increase from a central point, where the warm steps show the increase.",
            "A cool to cool hue transition could be useful for showing data based on a central point, where either end of the range does not necessarily have positive or negative connotation."
          ]
        },
        {
          "type": "p",
          "text": "Potential applications:butterfly charts, choropleth maps, sparklines, etc. Colors are often associated with system status in data visualizations (for example, green for success and red for failure). However, because using green and red together can be problematic for some color blindness conditions, try to utilize the recommended palette as a first pass. When representing a success status alone against the generic data, use$data-viz-blue-500for all and$data-viz-green-700for success. If it's necessary to show success and failure states together in the same graph,$data-viz-green-500and$data-viz-magenta-600is the recommended combination ($data-viz-green-500and$data-viz-magenta-400in a dark UI). To avoid indicating status by color alone, use text and additional visual indicators when possible to clarify the status. To ensure sufficient contrast ratio, follow thecolor guidelinesfor specific data types. At GitLab, we are dedicated to continually improving the accessibility of the application. Color is no exception. Every step of every hue in the data visualization palette has been evaluated to satisfy a 3:1 contrast ratio against a light or dark surface."
        },
        {
          "type": "list",
          "items": [
            "For light UI, that is a contrast ratio of at least 3:1 on$white(#ffffff).",
            "For a dark UI, that is a contrast ratio of at least 3:1 on$gray-950(#1f1e24)"
          ]
        },
        {
          "type": "list",
          "items": [
            "Inclusive Color Sequences for Data Viz in 6 Steps- Design at IBM",
            "Re-approaching Color- Lyft Design",
            "ColorBox- Lyft Design"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/data-visualization/mini-pipeline-graph",
      "title": "Mini pipeline graph | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A mini pipeline graph is a visualization of a CI/CD pipeline. A mini pipeline graph can be used in different layouts throughout the product as a way to monitor the pipeline run and navigate between the pipelines stages and jobs."
        },
        {
          "type": "list",
          "items": [
            "Communicate the status of the different pipeline stages and jobs in one place."
          ]
        },
        {
          "type": "list",
          "items": [
            "If you need to display the status of the pipeline as a whole, use a pipeline statusbadge."
          ]
        },
        {
          "type": "p",
          "text": "A mini pipeline graph for a simple 3-stage pipeline. A 3-stage pipeline with an upstream and a downstream pipelines. View in Pajamas UI Kit → Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/data-visualization/overview",
      "title": "Overview | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Data visualizations pull insights from data sets into a narrative and allow users to explore data themselves to discover their own insights. Data visualizations should be:"
        },
        {
          "type": "list",
          "items": ["Cohesive", "Structured", "Readable", "Understandable"]
        },
        {
          "type": "p",
          "text": "When creating a data visualization, keep in mind:"
        },
        {
          "type": "list",
          "items": [
            "In terms of cognition, visualizations where points are positioned along a common scale are most easily understood.",
            "We are generally less adept at understanding lengths without a common base.",
            "We are often worst at perceiving angles, directions and areas (which is why pie charts, for example, are generally not a great way to present data)."
          ]
        },
        {
          "type": "p",
          "text": "There are six main categories of data visualizations:"
        },
        {
          "type": "list",
          "items": [
            "Hierarchical: shows portions of a whole (ex. treemaps, node, and sunburst diagrams).",
            "Relational: shows the flow of assets (ex. network diagrams, matrices, and sankey diagrams).",
            "Spatial: shows data that can be mapped (ex. location map)",
            "Temporal: shows changes in data over time (ex. timeline)",
            "Spatial-temporal: shows data that can be mapped over time (ex. heat map)",
            "Statistical graphics: shows the composition of data (ex. column charts, area charts, and line charts)"
          ]
        },
        {
          "type": "p",
          "text": "We have use cases for Relational, Statistical, and Spatial-temporal. The other categories will be built when there is an appropriate use case. The GitLabcommit graphis an example of a relational data visualization, as it shows how all of the individual commits are related to the master. A heat map is an example of a spatial-temporal data visualization. Heat maps can be used to more quickly visualize and compare values in a dataset. In heat maps, data points are grouped and displayed using shades of color. Darker colors are generally used to communicate a higher density of data. Charts are statistical graphics that help users quickly digest, visualize and see trends in their data. Full list of chart types and design specifications is detailed on theChartscomponent page. Color, spacing, dimension, and layout specific information pertaining to this component can be viewed using the following links: Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": ["Charts"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, April 25, 2023 at 9:45 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/data-visualization/single-stat",
      "title": "Single stat | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The single stat component displays the title and value of a metric. A single stat can be used by itself or side-by-side with other single stats to display a topical set of metrics. There are a number of variations to allow for additional context or representation of the metric."
        },
        {
          "type": "list",
          "items": [
            "To show an overview of how a metric is performing.",
            "To show multiple metrics around a similar topic side-by-side."
          ]
        },
        {
          "type": "list",
          "items": [
            "To display standard text or labels.",
            "To display the same metric over a period of time (use achartinstead)."
          ]
        },
        {
          "type": "p",
          "text": "The default pattern for displaying a metric. A single stat with a title icon to convey extra meaning to the metric. A single stat with an icon which can be used to convey status or trend. A single stat with a badge which can be used to convey status or trend in more detail. A single stat that navigates to detailed information about a metric. Color, spacing, dimension, and layout information can be viewed in thePajamas UI Kit → Last updated at:Thursday, October 31, 2024 at 5:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/objects/job",
      "title": "Job | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A job is a basic building block of a CI/CD pipeline. A job contains the scripts and the configuration that defines when and how those scripts run as part of an automated CI/CD pipeline.How are jobs used in the product? The conceptual model diagram below shows how objects, along with their attributes and actions, are related the primary job object.Learn more about the conceptual model. View conceptual model in Figma → Job attributes and actions can be embedded in related objects, like pipeline ormerge request. The job object is primarily represented in the UI with thejob pagelayout.\nThis layout is shown below, with details about the meaning and purpose of each element.Learn more about semantic layouts. View semantic layout in Figma → Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/objects/merge-request",
      "title": "Merge request | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A merge request (MR) is one of the core product objects, where users collaborate on proposed changes to source code.\nFrom editing, reviewing, testing, and deploying, almost everything in GitLab flows through MRs.How are MRs used in the product? The conceptual model diagram below shows how objects, along with their attributes and actions, are related the primary merge request object.Learn more about the conceptual model. View conceptual model in Figma → MR attributes and actions can be embedded in related objects, like issue or pipeline. The MR object is primarily represented in the UI using arecordlayout.\nThis layout is shown below, with details about the meaning and purpose of each element.Learn more about semantic layouts. View semantic layout in Figma → Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/objects/overview",
      "title": "Overview | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Objects are the building blocks of GitLab. They exist within users' mental models for our product, and are consistently referenced across all levels of the product stack: database, code, user interface (UI), documentation, customer support, sales, marketing, and more. Examples of objects from products you may know:"
        },
        {
          "type": "list",
          "items": [
            "Facebook: friend, post, message, event, page, group.",
            "Airbnb: listing, host, guest, trip, experience.",
            "Slack: team, member, channel, message, reaction, thread.",
            "Intercom: customer, teammate, message, conversation, article."
          ]
        },
        {
          "type": "p",
          "text": "GitLab's objects include: repository, issue,merge request,job, and others. Thinking in terms of objects is about abstractingconcepts(meaning) from theUI(representation). It doesn't matter how users interact with the objects to achieve their goals. We can use the same objects to build any kind of interface: a mobile app, a web app, a plugin for another app, an API, a voice-controlled app, etc. GitLab is a large and complex product. It is sometimes difficult to understand how the experience that you are designing fits into the broader picture. Object thinking may bring clarity on how our product fits together. There are many benefits to this:"
        },
        {
          "type": "list",
          "items": [
            "Identify inconsistencies and duplication in the system.",
            "Identify opportunities for feature additions or enhancements.",
            "Design features that work well from a conceptual point of view, regardless of how they are represented in the UI.",
            "Improve communication and understanding about how the system works."
          ]
        },
        {
          "type": "p",
          "text": "Above all, object thinking helps build a solid foundation for the user experiences we're creating. Learn more about objects in“The full stack design system”, where Intercom shares the need, benefits, and how they use objects to build their product. There are two main ways to document objects, each with its purpose: theconceptual modelandsemantic layouts. The conceptual model is the visual representation ofobject thinking. It helps us visualize GitLab's objects and their relationships, and unlocks the benefits of object thinking. The result is an easy-to-navigate diagram of GitLab's object architecture. To better understand this visualization, see below the annotated example of a tweet or the GitLab-specific example of amerge request. View tweet conceptual model in Figma → For each object, we document itsattributes,actions, and how it relates to other objects in the system. The resulting diagram is independent of how we represent the objects in the UI or implement them in code. It should be as simple and accessible as possible, even if people aren't familiar with these kinds of diagrams. Learn more about conceptual models in“Object Modeling for Designers”. Objects can be presented in the UI through different visual layouts. To give meaning to each part of those visual layouts, from the smallestcomponentsto the largest regions, we can document them as “semantic layouts”. In practice, a semantic layout places the objects (and their relationships, attributes, and actions) over the layout, so we can see their meaning and purpose. As an example, see themerge request semantic layout. To add or update an object's documentation, conceptual model, or semantic layout,create an issue with the “Object documentation” templateand follow its instructions."
        },
        {
          "type": "list",
          "items": [
            "The role of objects in a design system:“The full stack design system”",
            "Primer on conceptual models:“Object Modeling for Designers”",
            "Deep-dive on conceptual models and their role in an interaction design framework: “UX Magic”book,14-min overview article,1-hour master class."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, October 10, 2024 at 10:48 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/dashboards",
      "title": "Dashboards | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A dashboard is a root level container that has multiple panels, and is analysis focused."
        },
        {
          "type": "list",
          "items": [
            "Grid: Rows and columns used to align and snap elements based on sequence and position.",
            "Panel: The basic building block of a dashboard. Each panel is composed of a title, description, and visualization which can be configured or modified through options. Panels can be moved and resized to arrange them within a dashboard."
          ]
        },
        {
          "type": "list",
          "items": [
            "Display panels of content and data for analysis-oriented tasks."
          ]
        },
        {
          "type": "list",
          "items": [
            "If content is action-oriented and presented in a list, table, or board, then a general landing page may be more appropriate."
          ]
        },
        {
          "type": "p",
          "text": "The following interactions are available:"
        },
        {
          "type": "list",
          "items": [
            "Alerting: Enable a panel to notify a user, so they can act on data from their existing data sources.",
            "Archive: Remove something from a current view to be organized and managed in a separate view. This change is recorded in the versioning area.",
            "Make a copy: Create an identical copy of any dashboard or panel.",
            "Embed: Insert panels into different mediums.",
            "Export: Make data available as CSV file, static image of a visualization being shown, or static PDF of a visualization/dashboard (important for data analysis and accessibility).",
            "Lock: One or more elements are temporarily unavailable for changes to be made.",
            "Remove: Delete a dashboard or panel.",
            "Share: Share a dashboard or panel through different channels."
          ]
        },
        {
          "type": "list",
          "items": [
            "Accordion: Show and hide content.",
            "Configuration menu: Open and modify dashboard settings and utilize dashboard actions.",
            "Date range: An interval of dates defined relative to the current date or a custom range.",
            "Description: Explains the purpose of the dashboard.",
            "Filter: A selection of one or more ways to reduce the data shown to meet a specific set of criteria across all panels.",
            "Title: Concisely describes the group of panels.",
            "Unique ID(required): An internal value to uniquely identify the dashboard.",
            "Variable: A placeholder for a value that could propagate through the panels. For example, a team name that could be rendered in visualizations or panel titles.",
            "Version history: Listing of historical changes that were done to the dashboard that shows dates and author. Could have the option to revert back to any point of a past change if able.",
            "Grid attributes: The number of rows and columns, margin around panels, and other grid functionality that should be applied to the whole grid."
          ]
        },
        {
          "type": "list",
          "items": [
            "Configuration menu: Open and modify panel settings and utilize panel actions.",
            "Data source: The type of database you want to query or integrate with.",
            "Description: Explain what the panel contains or how to use the data presented.",
            "Filter: A selection of one or more ways to reduce the data shown to meet a specific set of criteria of a panel.",
            "Grid attributes(required): The width, height, and x/y coordinates for the panel on a specific dashboard.",
            "Title: Concisely describe the panel.",
            "Unique ID(required): An internal value to uniquely identify the panel.",
            "Version history: Listing of historical changes that were done to the dashboard that shows dates and author. Could have the option to revert back to any point of a past change if able.",
            "Visualization(required): A graphical representation of query results. For example, a chart, a table, or a list."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, October 21, 2024 at 9:05 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/duo-calls-to-action",
      "title": "Calls to action for GitLab Duo | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Acall to action(CTA) is an interactive element that prompts users to take a specific action. GitLab Duo CTAs followbuttonandlinkguidelines, with some additional considerations. When reasonable, use an AI-specific icon to set expectations about a CTA's relationship to AI. For Duo Chat features, use theduo-chat icon. For other AI features, use thetanuki-ai icon. There is no specific color associated with AI or GitLab Duo. The color of the icon follows the component-specific guidelines, likebuttonvariants. This differs from marketing, which has specific colors for theGitLab Duo visual identity. Avoid CTA labels with \"GitLab Duo\" or \"AI\" to keep them simple and brief. Instead, indicate that the feature is AI-powered through onboarding, supplemental UI copy, or iconography. For guidance on how to use \"GitLab Duo\" in the UI, refer to theAI transparency guidelines. When a feature is experimental or beta, display that information with a badge outside of the CTA. See also:how to highlight feature versions. The highest priority action should have the most noticeable CTA. When GitLab Duo isoff, AI CTAs usually disappear, which can change how the page looks. If an AI action was the main CTA:"
        },
        {
          "type": "list",
          "items": [
            "Choose a new main action.",
            "Adjust the page layout accordingly."
          ]
        },
        {
          "type": "p",
          "text": "Always make sure the page makes sense, with or without AI actions."
        },
        {
          "type": "list",
          "items": [
            "Ai human interaction",
            "Feature management",
            "Button",
            "Link"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/duo-feedback",
      "title": "Feedback | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "AI output is not entirely predictable. It's important to monitor it to understand its quality and if it satisfies user needs. Additionally, the user should be able to report AI output they find harmful or malicious. User-provided feedback should always be aggregated with other data, such as user interviews, to form a complete picture. UseGlDuoUserFeedbackfromgitlab-uito collect feedback from the user on AI output. A user's experience of AI output is more than just \"good\" or \"bad\". To capture additional details and nuance, the user can give feedback in their own words. The free text questions in the form can be modified to be specific to an individual feature, if necessary. Since the verbatim AI output is not stored for legal and privacy reasons, encourage the user to provide as much context as possible to ensure their feedback is actionable. Ensure the CTA reinforces that the user should only provide feedback on the AI outputs, not the entire feature. Examples:"
        },
        {
          "type": "list",
          "items": [
            "Give feedback to improve this answer",
            "How was this response?"
          ]
        },
        {
          "type": "p",
          "text": "The CTA should be shown on each instance of AI output. You can use aquick feedbackmechanism like the thumbs up 👍 or thumbs down 👎 buttons, but there must always be an option to providedetailed feedbackon the AI output withGlDuoUserFeedback."
        },
        {
          "type": "list",
          "items": ["Button", "Link"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, October 23, 2024 at 10:12 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/duo-slash-commands",
      "title": "Slash commands in GitLab Duo Chat | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Slash commands provide a way for the user to efficiently communicate their intent to GitLab Duo Chat. They also allow the user to discover the functionality that GitLab Duo Chat offers. Slash commands are prefixed with/and followed by a specific keyword from a predefined list. Be deliberate before you add new slash commands. The list of available commands should be curated to highlight the most valuable interactions. To avoid unnecessary commands, assess these questions before you implement a new slash command:"
        },
        {
          "type": "list",
          "items": [
            "Does the proposed slash command represent a frequently repeated action?What evidence supports this?",
            "What evidence supports this?",
            "What benefit does the proposed command provide to the user?",
            "What alternative solutions have you explored?",
            "Can the action be incorporated into theexisting slash commands?"
          ]
        },
        {
          "type": "p",
          "text": "When you plan to add a slash command, inform theDuo Chat groupso they can help you answer these questions. UX researchis ongoing to better understand user needs for slash commands. Slash commands should not be tied to specific features. Try to start slash commands with a verb that can apply to multiple contexts."
        },
        {
          "type": "list",
          "items": [
            "Use the same command for different use cases to keep the list small and learnable, instead of a command for a specific feature.Do:/troubleshootUse an action verb that is applicable to multiple workflows. In this case, it could troubleshoot vulnerabilities, code, or jobs.Don't:/troubleshoot_jobCreate a slash command that is specific to one worklow.",
            "Do:/troubleshootUse an action verb that is applicable to multiple workflows. In this case, it could troubleshoot vulnerabilities, code, or jobs.",
            "Don't:/troubleshoot_jobCreate a slash command that is specific to one worklow.",
            "When a command is more than one word, use an underscore to denote spaces. For example,/new_conversation.",
            "Some commands accept optional arguments, or additional information such as a link, reference, or free text. The syntax of the commands follows this structure:/slash_commandoptional referenceoptional instructions. For example,/summarize#14023in 5 bullet points."
          ]
        },
        {
          "type": "p",
          "text": "The slash command menu displays the command keyword, optional argument formats, and a brief explanation of the command's application."
        },
        {
          "type": "list",
          "items": [
            "The slash command menu opens by typing/in the Duo Chat text input.",
            "The menu opens above the text input.",
            "The menu filters as the user types in the input.",
            "To select a menu item with the keyboard, the user can pressreturnwhen the item is focused.",
            "After a menu item is selected:If the command accepts arguments, it fills in the text input.If the command does not accept arguments, it is sent to GitLab Duo Chat.",
            "If the command accepts arguments, it fills in the text input.",
            "If the command does not accept arguments, it is sent to GitLab Duo Chat."
          ]
        },
        {
          "type": "list",
          "items": [
            "By default, commands should apply to the page the user currently has open, unless specified otherwise by additional arguments. Commands should always work without arguments, as they refer to the current context. Do not require the user to input additional information, as it increases mental load to learn the syntax and potential to make mistakes.",
            "Any command can be used on any page, with the appropriate arguments. However, the menu should only show commands applicable to the page the user is currently viewing. Do not present commands in the menu that would not work on the current page."
          ]
        },
        {
          "type": "list",
          "items": ["Ai human interaction"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, November 18, 2024 at 9:01 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/empty-states",
      "title": "Empty States | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The primary goals of an empty state region should be to:"
        },
        {
          "type": "list",
          "items": [
            "Increase feature adoption.",
            "Improve learnability and feature discovery.",
            "Improve usability."
          ]
        },
        {
          "type": "p",
          "text": "While we do provide afallback solutionfor empty state regions,firstthink about how to incorporate unique features in an empty state to achieve the above goals better than we can if we simply used our fallback solution. For example:"
        },
        {
          "type": "list",
          "items": [
            "In an epic with 0 related issues,suggesta few existing issues through keyword matching or other intelligent methods that could be added with a simple click. In this case, it could make it easier to add related issues without leaving the epic. This mayIncrease feature adoptionmore than simply telling users that no content exists."
          ]
        },
        {
          "type": "p",
          "text": "This is just one example. Each case will be unique and should be thought of as a problem to solve while keeping the3 main goals in mind. All empty state solutions should include usage analytics so you and your team can measure and improve the empty state solution you've created over time. It‘s also important to think about this as asolution, much like any other solution being developed in your stage group, so continue to follow thesolution validationprocess."
        },
        {
          "type": "list",
          "items": [
            "Be aware of surrounding page elements. Since an empty state includes one or more actions, the rest of the page can likely be more sparse to emphasize the action the user should take.",
            "If possible, use one primarybuttonper context to emphasize the main action you'd like a user to take. Some pages include a primary button in the header that may need to be hidden when the empty state is active.",
            "Use atext linkinstead of a button to direct a user to things like documentation and resources that support the main action.",
            "Avoid duplicating content elsewhere in the page that's already present in the empty state heading and description."
          ]
        },
        {
          "type": "p",
          "text": "ABlank contentempty state serves as a placeholder when no content exists on a page. It should contain a call to action that triggers the creation of content."
        },
        {
          "type": "list",
          "items": [
            "Appears when no content exists within a configured feature.",
            "Contains a method for creating content.",
            "Hides unnecessary UI elements unless lazy loading is populating content or there's content on the page that’s hidden but accessible through the UI (for example, archived content)."
          ]
        },
        {
          "type": "p",
          "text": "The title phrase should be a call to action that starts with an active verb. No period at the end of the phrase. Examples:"
        },
        {
          "type": "list",
          "items": [
            "Monitor vulnerabilities in your project",
            "Get started with monitoring"
          ]
        },
        {
          "type": "p",
          "text": "AConfiguration requiredempty state serves as a placeholder for features that need to be configured first, before having the ability to create content."
        },
        {
          "type": "list",
          "items": [
            "Contains a primary action for configuring a feature.",
            "Contains a secondary action for inviting a member to configure a feature. The secondary action should read asInvite member to configure, which should trigger the invite modal."
          ]
        },
        {
          "type": "p",
          "text": "Use the following implementation to trigger the invite modal:"
        },
        {
          "type": "list",
          "items": [
            "Initialize from a Vue component.",
            "Initialize as a separate button/link using haml."
          ]
        },
        {
          "type": "p",
          "text": "The title phrase should be a call to action that starts with an active verb. No period at the end of the phrase. Examples:"
        },
        {
          "type": "list",
          "items": [
            "Monitor vulnerabilities in your project",
            "Get started with monitoring"
          ]
        },
        {
          "type": "p",
          "text": "AHigher tier featureempty state serves as a placeholder when a certain feature isn‘t available under the current tier.The Growth teamis the DRI forHigher tier featureempty state regions and should be involved in implementation of solutions for this type of empty state region."
        },
        {
          "type": "list",
          "items": [
            "Specifications and actions should be determined bythe Growth team. If implementing a solution for this empty state region, collaborate with the Growth Product Designer and Product Manager."
          ]
        },
        {
          "type": "p",
          "text": "AnEmpty search resultsempty state serves as a placeholder when there are no search results after doing a search or filtering results."
        },
        {
          "type": "list",
          "items": [
            "Appears when no results are found after a search or filter.",
            "Should describe that a search or filter came back with no results.",
            "Does not contain a CTA."
          ]
        },
        {
          "type": "list",
          "items": [
            "When using thefilter componentorsearch component, the text should always be exactly:For the title,No results found.For the text underneath,Edit your criteria and try again..",
            "For the title,No results found.",
            "For the text underneath,Edit your criteria and try again.."
          ]
        },
        {
          "type": "p",
          "text": "If you're unable to come up with a solution to achieve one of the3 goals of an empty state region, you can use the empty state fallback. Using the fallback should still achieve one of the three goals and should include a way to track conversion. View in Pajamas UI Kit → Create an issue andfollow the Empty state issue template."
        },
        {
          "type": "list",
          "items": ["Invited users are more likely to activate new stages"]
        },
        {
          "type": "list",
          "items": ["Banner", "Button"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/filtering",
      "title": "Filtering | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Search helps a user find records matching a particular value. We use thesearchcomponent in the UI for this purpose. Filters narrow down a list of records to ones that contain a common value. For filtering data, we use either thefiltercomponent on its own, or a combination of other components, for exampletabs,search, orsorting. We refer to the ways we combine components together as filtering patterns in the product. The main factor for choosing between search and filter should be the user’s goal:"
        },
        {
          "type": "list",
          "items": [
            "If the user is looking for a specific item, the search component should be used. For example, trying to find a particular group member by name, surname, or username.",
            "If the user is looking to narrow down a list of items based on specific parameters (single or multiple values), the filter component or filtering patterns should be used. For example, narrowing down a list of issues for a particular team member and milestone."
          ]
        },
        {
          "type": "p",
          "text": "The filter component is flexible but complex and should primarily be used for filtering data by numerous parameters (for example, a list of issues or merge requests). Consider using other filtering patterns for data that is less complex (for example, a list of users). Thefiltercomponent, alongsidetabs,dropdowns,sorting,date picker, andsearchcan all be used for filtering data. The more complex the data, the more components required to filter it. For example, in a list of members where name, username, and join date are the data, the sorting and search components are likely sufficient to narrow down the list. If the data also includes the status for each member (active or inactive), adding tabs to allow users to navigate between the member statuses would be an additional, useful level of filtering. Further, if user role is also part of the data, a dropdown could be used to filter by this parameter, as well. Consult the table below for general guidance on common filtering patterns in the product, and examples of which-components-to-use-when, based on data complexity: In situations where the filter component isn’t used (levels 1-4), search is placed on the left, followed by dropdowns for filters. The dropdown for sorting should be inline but right-aligned. The recommended number of filter dropdowns is 3-5. When more are required, consider using the filter component or thefilter builder. This pattern is recommended for cases when a single filter can be selected in each dropdown. For example, when a list of issues can only be filtered by one assignee. When the filters do not fit on the same line as search, all dropdowns are placed below and separated by a horizontal rule. The sorting dropdown is inline but to the right of the filter dropdowns, the search remains limited in width. On small screens the filter and sort dropdowns get pushed below the search and are full width. The functionality of toggling the visibility of filters can be added to make the UI less overwhelming. Trigger the visibility of the filters using an icon button with a filter icon and the labelFilters. If filters are applied and then hidden, the button reflects the number of filters applied in a badge to the right of the button label. This pattern is recommended for cases when multiple filters can be added within each dropdown. For example, when a list of issues can be filtered by multiple assignees."
        },
        {
          "type": "list",
          "items": ["Filter", "Search", "Tabs", "Date picker"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/forms",
      "title": "Forms | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A form is for capturing and submitting user input. View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Label: Clearly and concisely identifies an input.",
            "Inputs: Allows a user to enter content or select options through a variety of inputs.",
            "Optional suffix(optional): Indicate that a field isn't required.",
            "Placeholder(optional): Hints at what should be entered into a field.",
            "Description(optional): Clarifies the purpose or intent of an input.",
            "Validation message: Appears if the input is invalid, acceptable, or needs awareness.",
            "Help text(optional): Provides contextual examples, formatting information, details about the input field state.",
            "Actions: Used to submit or cancel a form."
          ]
        },
        {
          "type": "list",
          "items": [
            "Use a form when user input needs to be captured by one or more form controls and manually submitted by the user."
          ]
        },
        {
          "type": "list",
          "items": [
            "If user selection or input invokes an immediate change, like a page refresh or setting being applied and submission isn't required, then a form shouldn't be used."
          ]
        },
        {
          "type": "p",
          "text": "Forms may include a variety of elements. By default all information in forms is required unless stated otherwise with \"(optional)\" added to the label of the corresponding element. However, if your form is entirely optional except for 1-2 fields, you may opt to append \"(required)\" to the field label instead."
        },
        {
          "type": "list",
          "items": [
            "Label:Clearly and concisely identifies an input.If a field is optional, add the suffix \"(optional)\". For example,Phone number (optional)Don't use punctuation. Special characters are allowed for formatting (-:;).",
            "Clearly and concisely identifies an input.",
            "If a field is optional, add the suffix \"(optional)\". For example,Phone number (optional)",
            "Don't use punctuation. Special characters are allowed for formatting (-:;).",
            "Description:Clarify and explain the purpose or intent of an input. For example,Required for security purposes.Avoid repetitive or unnecessary text. For example,This setting is...orUse this setting to...Positioned directly below a label.Don't use \"allow\" unless you're specifically talking about security. For example,Allows users to fork the reposhould beUsers can fork the repo.",
            "Clarify and explain the purpose or intent of an input. For example,Required for security purposes.",
            "Avoid repetitive or unnecessary text. For example,This setting is...orUse this setting to...",
            "Positioned directly below a label.",
            "Don't use \"allow\" unless you're specifically talking about security. For example,Allows users to fork the reposhould beUsers can fork the repo.",
            "Help:Provide examples, expected format, input state, validation messages, or any combination of these.Positioned directly below an input.You can omit examples or expected format if the user typically copies an already validated value to paste into the input. For example, the user copies and pastes their Google Cloud project ID, which was validated when their project was created in Google Cloud.May include ahelp linkwhen necessary.For example:Must be 11 digits including the country code. Example:+1-234-567-8901. Learn more.",
            "Provide examples, expected format, input state, validation messages, or any combination of these.",
            "Positioned directly below an input.",
            "You can omit examples or expected format if the user typically copies an already validated value to paste into the input. For example, the user copies and pastes their Google Cloud project ID, which was validated when their project was created in Google Cloud.",
            "May include ahelp linkwhen necessary.",
            "For example:Must be 11 digits including the country code. Example:+1-234-567-8901. Learn more.",
            "Placeholder: Only used for extra, non-essential information when the input purpose is still understood in its absence; it's not a replacement for a visible label. An exception is thesearchcomponent, which includes asearchicon to further clarify its purpose. For example,Search or go to…."
          ]
        },
        {
          "type": "list",
          "items": [
            "Text input: The<input type=\"text\">element is the default input type,  used for a single line of text.",
            "Text area: The<textarea>is used for multi-line text."
          ]
        },
        {
          "type": "p",
          "text": "See thecheckboxcomponent page for details. See theradio buttoncomponent page for details. The<select>element creates a dropdown of options. See the dropdown component documentation for dropdowns that are not part of a form. For example, acombobox."
        },
        {
          "type": "list",
          "items": [
            "Clear: Theclearicon is positioned on the right side of the field and clears the content. When the content is cleared, the button is removed.",
            "Search: Thesearchicon submits a query. See thesearchcomponent page for details.",
            "Calendar: Thecalendaricon toggles a date picker. See thedate pickercomponent page for details.",
            "Show/hide: Switching between theeyeandeye-slashicons toggles masked and unmasked appearance of content.",
            "Submit: Either<input type=\"submit\">or a<button>element submits the form data. Both use theconfirmbutton variant."
          ]
        },
        {
          "type": "p",
          "text": "By default a form flows top to bottom in a single column. Inline inputs in a vertical form are only acceptable when they’re related, for example, name and surname. In a tabular layout, a form can use both columns and rows. In rare cases, a<label>can be placed to the left of the input. For example, in afiltersection or adate picker. If the form must be completed in a linear order or has conditional logic, consider segmenting related tasks by using astepper. Input and selection controls can be any width that uses abase-8 progression. There are also five preset sizes that can be used to normalize the width in any form. When considering responsive behavior, these should be regarded as maximum widths."
        },
        {
          "type": "list",
          "items": [
            "Extra small: 80px wide",
            "Small: 160px wide",
            "Medium: 240px",
            "Large: 320px",
            "Extra large: 560px"
          ]
        },
        {
          "type": "p",
          "text": "Form components may display the following behaviors: Validation is shown inline and may happen in real-time or on form submission. Real-time validation should confirm correct content or help prevent users from submitting the form with incorrect information. A validation message should always be visible and not placed in a tooltip. The message is placed directly below the input and above any help text. There are two types of validation messages:"
        },
        {
          "type": "list",
          "items": [
            "Error: Indicates content that can’t be submitted, or was invalid and in need of correction.",
            "Success: Indicates content that is valid. In most cases a success message isn't shown."
          ]
        },
        {
          "type": "p",
          "text": "Consider using a slowerdebounce periodduring real-time validation to prevent interrupting or frustrating a user while they're entering content. Text limits are indicated through a character counter. A user may keep typing when the limit is reached, though that might impact successful form submission. There are two kinds of character counters:"
        },
        {
          "type": "list",
          "items": [
            "Limited length: Indicates the total number of characters allowed. When a limit is in place, the counter should be visible by default, and include a scrim (gradient overlay) to prevent collisions with characters in the input. As a user types, the counter shows how many characters remain before reaching the limit.When the number of characters crosses the limit, the counter color changes todanger, and its font weight to bold. The counter then displays the number of characters over the limit (for example-23) with a$red-200background color.Hovering over the counter reveals a tooltip that says, “Characters left”. Once over the limit, the text changes to, “Characters over limit”.",
            "When the number of characters crosses the limit, the counter color changes todanger, and its font weight to bold. The counter then displays the number of characters over the limit (for example-23) with a$red-200background color.",
            "Hovering over the counter reveals a tooltip that says, “Characters left”. Once over the limit, the text changes to, “Characters over limit”.",
            "Recommended length: Indicates how close a user is to reaching (or surpassing) a recommended character length for the field. This type of counter isnotpresent by default.When the number of characters crosses the recommendation, the counter color changes toinfo. The count displays the number of characters over the limit (for example -23) with a$blue-100background color.Hovering over the counter reveals a tooltip that says, “Recommended characters left”. Once over the recommended range, the text changes to, “Over recommended length”.",
            "When the number of characters crosses the recommendation, the counter color changes toinfo. The count displays the number of characters over the limit (for example -23) with a$blue-100background color.",
            "Hovering over the counter reveals a tooltip that says, “Recommended characters left”. Once over the recommended range, the text changes to, “Over recommended length”."
          ]
        },
        {
          "type": "p",
          "text": "Hide an element if a user doesn't need access to it. Disable an element with thedisabledattribute if the user lacks permission to interact with it, but still needs to know it exists. If an element is already populated, but the user doesn't have permission to edit it, use thereadonlyattribute. By default a submit button is enabled. Do not use a disabled submit button to visualize form validation or if a change is incomplete. A disabled submit button can be problematic in a form for a variety of reasons:"
        },
        {
          "type": "list",
          "items": [
            "There is no mechanism to attempt to proceed or remediate unknown errors.",
            "A disabled button can be missed by a screen reader, leaving a user unsure of what to do next.",
            "Disabled elements typically have lower contrast, which are difficult to distinguish for those with visual impairments."
          ]
        },
        {
          "type": "p",
          "text": "Consider using a contextual message to indicate if additional action is needed instead. There are conditions where it may make sense to use thedisabledprop on a submit button, such as after a user submits a form to prevent re-submission. Including help text below a field explaining why it's disabled can be useful, but note that a disabled element isn't in the focus order. However, the content will still be discoverable with other screen reader methods. A Form should support the \"quick submit\" behavior, which allows it to be submitted from any control (including Markdown editors) using⌘+Enter(orCtrl+Enter). Note to developers: the quick submit behavior can be automatically added to a form using thejs-quick-submitCSS class implemented inquick_submit.js. Error messages are an indication of system status. They let users know that they have encountered a problem and provide ways to resolve it, teaching them to avoid future impediments. Whenever possible, the system should keep potential errors to a minimum. Seedestructive actionsguidelines. Error messages can be persistent, dismissible, or temporary. In order to be effective, error messages should be concise, specific, and consistent. An error message should be helpful and clear. Describe the error, inform users about what has happened, and if possible, how to resolve it. The generalUI textguidelines for GitLab’s public communications should apply to all error messages. An overly familiar tone of voice can be perceived as careless in the context of error resolution, especially if the error can't be easily resolved by the user. Avoid using messages like:"
        },
        {
          "type": "list",
          "items": ["Whoops, GitLab is currently unavailable."]
        },
        {
          "type": "p",
          "text": "Instead, use messages like:"
        },
        {
          "type": "list",
          "items": [
            "An error occurred while importing the project to GitLab. For more information, see how toimport your project from GitHub to GitLab.",
            "The project name must be 40 characters or fewer.",
            "Email is required."
          ]
        },
        {
          "type": "p",
          "text": "Generic error messages are not helpful, and they don't make sense out of context. Try to provide different errors for different messages and scenarios. For example, errors in text fields can be too long, too short, in the wrong format, and so on. Error messages for specific situations are more helpful to users."
        },
        {
          "type": "list",
          "items": [
            "Project title must have at least 3 characters.is more specific and direct thanName is too short.",
            "Display name is requiredis more specific thanField is emptyand more succinct thanYour display name can't be blank."
          ]
        },
        {
          "type": "p",
          "text": "To reduce the cognitive effort needed from users to understand the error, use a contextual error message with the same phrasal structure for error messages. All messages should look, sound, and mean the same, according to the component they're displayed in. Avoid writing different messages that have the same meaning:"
        },
        {
          "type": "list",
          "items": [
            "Password must be at least 8 characters.",
            "Password should not be less than 8 characters.",
            "Password has fewer than 8 characters."
          ]
        },
        {
          "type": "p",
          "text": "Instead, use the same phrasal structure for all messages:"
        },
        {
          "type": "list",
          "items": ["Password must be at least 3 characters."]
        },
        {
          "type": "p",
          "text": "Error messages can be used in the following scenarios:"
        },
        {
          "type": "list",
          "items": [
            "Errors in forms: seeform validations.",
            "Errors in the system or on a page: seealert."
          ]
        },
        {
          "type": "list",
          "items": [
            "By default, a<label>should use theforattribute to associate it with the input ID. Alternatelyaria-labelledbycan be used when the label is visible, andaria-labelcan be used in place of a visible label.",
            "Usearia-describedbyto programmatically associate a description with an input.",
            "Usearia-describedbyto programmatically associate help text with an input.",
            "The clear button should be implemented as a<button>, accessible via keyboard, and its name announced as “Clear” for assistive technology. After content is removed focus is placed back on the input."
          ]
        },
        {
          "type": "list",
          "items": [
            "When keyboard focus is inside an input field, pressing theEnterkey should submit the form (provided there are no validation errors). This doesn't apply to mutli-line fields, such as Markdown editors, since these controls need to support the input of new lines.",
            "There are some cases in which the submit-on-Enter behavior should be disabled. For example, if a form has a dropdown control that includes a search bar, pressingEnterinside the search bar shouldnotsubmit the form. In general, this behavior should be disabled for input elements that do not directly edit a form’s data."
          ]
        },
        {
          "type": "list",
          "items": [
            "Date picker",
            "Color picker",
            "Search",
            "Button",
            "Stepper"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, November 14, 2024 at 5:31 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/keyboard-shortcuts",
      "title": "Keyboard shortcuts | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Keyboard shortcuts can help improve accessibility and the user's productivity. While not every action needs a keyboard shortcut, consider if it could optimize a frequent workflow."
        },
        {
          "type": "list",
          "items": [
            "Look for patterns or potential conflicts in list ofGitLab keyboard shortcuts.",
            "Consider any reserved keybindings in operating systems (Linux,macOS,Windows) and in thesupported web browsers.",
            "When the user has keyboard shortcuts turned on, show a shortcut near its action or through atooltip. If there are multiple shortcuts for the same action, only show one shortcut.",
            "For modifier keys, show symbols rather than text labels. This ensures consistency across operating systems, locales, and keyboards. For example, show⌘instead ofCommand."
          ]
        },
        {
          "type": "list",
          "items": ["Button", "Tooltip"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/merge-request-reports",
      "title": "Merge request reports | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The merge request (MR) reports region includes a wide variety of widgets that report information about the MR changes, helping authors and reviewers understand their impact and what needs to be improved. The following guidelines systematize attributes like layout, hierarchy, and content sections, making the widgets consistent, scannable, and utilitarian. Widgets are designed to adapt to page layout (responsive), and future widgets will have patterns to follow. We provide constraints where possible, but ultimately a widget's unique purpose should define the extent of how the guidelines are applied. View in Pajamas UI Kit → Each widget is laid out as a grid with three possible horizontal levels and three vertical sections. Levels definehierarchyand sections definecontent sectionsfor each level."
        },
        {
          "type": "list",
          "items": [
            "Level 1- parent level of the widget.",
            "Level 2- child of level 1.",
            "Level 3- child of level 2."
          ]
        },
        {
          "type": "list",
          "items": [
            "Status- contains the status icon for the widget and each child item.",
            "Subject- describes the widget and each child item.",
            "Actions- a group of optional actions for the widget and each level 2 child item."
          ]
        },
        {
          "type": "p",
          "text": "The widgets useour 8px spacing systemto align elements within. External spacing is always greater than or equal to internal spacing, meaning that as nesting increases, space decreases. This helps identify content relationships and makes the higher levels more scannable. Widget content nests up to two levels deep."
        },
        {
          "type": "list",
          "items": [
            "Level 1 adjusts vertical spacing responsively to keep more widgets in view at smaller breakpoints.",
            "All levels adjust horizontal spacing responsively to provide more room for the subject at smaller breakpoints."
          ]
        },
        {
          "type": "p",
          "text": "Content sections follow a left-to-right reading order at all breakpoints."
        },
        {
          "type": "list",
          "items": [
            "Actions other than info and the expand/collapse toggle are within an overflow (ellipsis) dropdown for the medium breakpoint and down (<768px).",
            "When download options are available, they merge into the overflow menu at small viewports."
          ]
        },
        {
          "type": "p",
          "text": "An optional maximum height can be applied to the nested content when level 1 is expanded. This is best used when the number of nested reports typically exceeds five, or when the expanded view introduces a large amount of scrolling that makes it difficult to view the rest of the page content."
        },
        {
          "type": "list",
          "items": [
            "A maximum height is set for the expanded level 2 and level 3 area with overflow scrolling set toauto.",
            "A scrim visual indicator overlays the bottom of the scroll area when the content height exceeds the maximum height. The scrim is hidden once the end of the scrolling content is reached."
          ]
        },
        {
          "type": "p",
          "text": "In addition to external spacing being greater than internal spacing, widgets use progressive indentation to help establish hierarchy. The container wraps one or more widgets."
        },
        {
          "type": "list",
          "items": [
            "1px$gray-100inset border",
            "$whitebackground",
            "4pxborder radius"
          ]
        },
        {
          "type": "p",
          "text": "Level 1 is the parent level of the widget and has the primary status in text and icon form, as well as optional controls and actions that apply to the entire widget. The status icon is surrounded by a highlight to make it a stronger visual anchor while emphasizing the status. The primary status is determined by the widget's rules and influenced by level 2 statuses if present. The expand/collapse control is only visible when this level contains children."
        },
        {
          "type": "list",
          "items": [
            "Top border1px$gray-100forn+1",
            "$whitebackground",
            "Collapsed by default with the exception of a merge widget that details reasons a merge request is blocked. Try to limit the number of expanded ones to avoid an overwhelming page.",
            "Status icon: required"
          ]
        },
        {
          "type": "p",
          "text": "Level 2 has a status that may be the same or different from the parent, as well as optional controls and actions that apply to itself. Its influence on the parent status will depend on the type of widget and the applicable rules. Likewise, its status will be determined by applicable rules and influenced by level 3 status if present."
        },
        {
          "type": "list",
          "items": [
            "Content indented and left-aligned to the level 1 subject.",
            "Full width1px$gray-100top border forn+1",
            "Top border inset (16pxleft and right padding)1px$gray-100forn+1",
            "$gray-10background",
            "Level 3 children are always visible",
            "Status icon: optional",
            "Actions: optional",
            "Section title and description: optional",
            "Items that share the same title and/or description do not have a top border."
          ]
        },
        {
          "type": "p",
          "text": "Level 3 has a status that may be the same or different from the level 2 parent. Its influence on the level 2 parent status will depend on the type of widget and the applicable rules."
        },
        {
          "type": "list",
          "items": [
            "Content indented and left-aligned to the level 2 subject.",
            "$gray-10background",
            "Status icon: optional",
            "Actions: inline text links only",
            "Section title and description: optional"
          ]
        },
        {
          "type": "p",
          "text": "As shown in thelayout, there are three content sections: status, subject, and actions. Each widget has rules that determine its status. The icon at the top level of each widget reflects the highest severity, unless the highest nested severity doesn’t trigger a failure of the parent."
        },
        {
          "type": "list",
          "items": [
            "Failed",
            "Warning",
            "Success",
            "Neutral",
            "Loading (spinner)"
          ]
        },
        {
          "type": "list",
          "items": [
            "Failed",
            "Error",
            "Warning",
            "Notice",
            "Success",
            "Neutral"
          ]
        },
        {
          "type": "list",
          "items": ["Critical", "High", "Medium", "Low", "Info", "Unknown"]
        },
        {
          "type": "p",
          "text": "Since everything in a widget is technically content, identifying a specificsubjectsection allows us to focus on the text and meta information that identifies the item, what it means for a user, and how to remedy problems."
        },
        {
          "type": "list",
          "items": [
            "Section title, description, and meta information are optional, but the main text is required.",
            "Follow theUI textguidelines for writing all text content."
          ]
        },
        {
          "type": "list",
          "items": [
            "Section title and description- groups level 2 and level 3 status items. A description must be preceded by a title, but a title does not require a description.",
            "Text- identifies the item, what it means for a user, and how to remedy problems. It can contain inline links and formatting to emphasize text.",
            "Meta- supplemental text, links, and badges that add meaningful context to an item. Text can include formatting for emphasis."
          ]
        },
        {
          "type": "p",
          "text": "Actions available for level 1 and level 2 and always use the tertiary confirm or defaultbuttonvariants."
        },
        {
          "type": "list",
          "items": [
            "Only level 1 can be expanded and collapsed.",
            "Level 3 can only have inline text links.",
            "All actions are optional except the expand/collapse toggle for a level 1 item with children."
          ]
        },
        {
          "type": "list",
          "items": [
            "Info button- provides supplemental information in apopover.",
            "Options button- at smaller breakpoints opens a dropdown with available actions. On hover/focus atooltipreads “{widget} options”.",
            "Download dropdown- ability to download assets related to the widget. On hover/focus atooltipreads “{widget} downloads”.",
            "Tertiary button- actions that can be taken on or from the widget, like “Manage licenses” or “View report”.",
            "Expand/collapse button- toggles the visibility of level 2 and level 3 items when present. On hover/focus atooltipreads “Show {widget} details” when collapsed and “Hide {widget} details” when expanded.",
            "Inline links- can be used to provide more information about level 3 items. For example, by linking to another page or by triggering adrawer."
          ]
        },
        {
          "type": "p",
          "text": "The following provides guidance on roles, keyboarding, and content for screen readers. Legend"
        },
        {
          "type": "list",
          "items": ["Region", "Tab order", "Screen reader", "Note"]
        },
        {
          "type": "p",
          "text": "The widget area is an important enough section of a merge request page that it should be identified as its ownlandmark region. It contains the unordered list where each widget is a list item. See thenotessection below for markup recommendations."
        },
        {
          "type": "list",
          "items": [
            "<div role=\"region\" aria-label=\"Merge request reports\">"
          ]
        },
        {
          "type": "p",
          "text": "The focus order traverses focusable elements in the DOM in a left-to-right, top-down order."
        },
        {
          "type": "list",
          "items": [
            "TABkey moves through the list of interactive items in the order of the DOM.",
            "ENTERorSPACEkey expands/collapses the mobile overflow dropdown.",
            "ENTERorSPACEkey expands/collapses a level 1 item to reveal level 2–3 content."
          ]
        },
        {
          "type": "p",
          "text": "The following highlights element attributes and the general expectation of how they should be announced by a screen reader."
        },
        {
          "type": "list",
          "items": [
            "aria-label=\"{status} {widget}\"SR: “{status} {widget}, image”",
            "aria-label=\"{widget} information\"aria-describedby=\"{popoverID}\"SR: “{widget} information, button, {popoverID content}”",
            "aria-label=\"[widget} options\"Collapsed:aria-expanded=\"false\"→ Expanded:aria-expanded=\"true\"aria-haspopup=\"true\"aria-controls=\"{menuID}\"SR collapsed: “{widget} options, collapsed, pop up button” → SR expanded: “{widget} options, expanded, pop up button”",
            "Collapsed:aria-label=\"Show {widget} details\"→ Expanded:aria-label=\"Hide {widget} details\"Collapsed:aria-expanded=\"false\"→ Expanded:aria-expanded=\"true\"aria-controls=\"{nestedStatusID}\"SR collapsed: “Show {widget} details, collapsed, button” → SR expanded: “Hide {widget} details, expanded, button”",
            "aria-label=\"Downloads\"Collapsed:aria-expanded=\"false\"→ Expanded:aria-expanded=\"true\"aria-haspopup=\"true\"aria-controls=\"{menuID}\"SR collapsed: “Downloads, collapsed, pop up button” → SR expanded: “Downloads, expanded, pop up button”",
            "aria-label=\"{status} {report}\"SR: “{status} {report}, image”"
          ]
        },
        {
          "type": "p",
          "text": "The widgets are organized in an unordered list, which has the benefit of providing hierarchy and a report count (number of list items) to screen reader users."
        },
        {
          "type": "list",
          "items": [
            "The widget group is wrapped in a<div>that functions as alandmark.",
            "Each level is a<ul>with<li>s for individual reports. A title and description for a report are contained within that report’s<li>."
          ]
        },
        {
          "type": "p",
          "text": "Merge request report widgets use an adapted version of theconfiguration requiredempty state."
        },
        {
          "type": "list",
          "items": [
            "Uselevel 1 layoutwith an info status icon.",
            "Use a title and succinct description as the subject."
          ]
        },
        {
          "type": "p",
          "text": "Note that different from other \"configuration required\" empty states, the action to configure a feature is presented in a tertiary confirm button. This is done to avoid distracting users from the merge workflow. Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/notifications",
      "title": "Notifications | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A notification is a user or system-generated update pushed to users. Though guidelines are still being defined for both email and UI notifications, you can view examples of all emails, organized by type, in eitherGDKor inFigma. Examples of current UI notifications are also visible inFigma. Components for both are forthcoming. Notifications from GitLab appear in two places: in a user's email and in the product, on the To-Do List. The To-Do List items are currently a small, actionable subset of the available notifications."
        },
        {
          "type": "list",
          "items": [
            "When a user needs to be made aware of a system action.",
            "When another user is awaiting a response.",
            "When there is an important product update a user should be aware of."
          ]
        },
        {
          "type": "list",
          "items": [
            "Sharing trivial details. Overburdening users with notifications is fatiguing and inhibits productivity, but also devalues the notification system as a whole.",
            "For in-context updates, consider using analert,toastorbannerinstead, depending on severity and content."
          ]
        },
        {
          "type": "p",
          "text": "Both email notifications and UI notifications are generally linked to the events within GitLab that generated them, allowing users to quickly jump to the relevant context, and take action if needed. Both email and UI notifications aim to keep users up-to-date about things happening within GitLab. Content of email and UI notifications is currently non-identical, though we are working to bring more of a parity between them. Until then, for any new email notifications created, consider adding a corresponding To-Do, as well. What appears as an email or UI notification should reflect a user's preferences for how and when they are contacted. Email notification settings are configured in user settings, under/profile/notifications. In the future, users will be able tocustomizewhat appears in their To-Do List, as well. Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/patterns/searching",
      "title": "Searching | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Global searchallows you to search across items in a project, or even across multiple projects. You can switch tabs to filter on type of object, or filter by group. There are several core lists in the GitLab experience, such as the Issue list and the Merge Request list. You are also able to filter and search these lists.More information regarding filter. Last updated at:Tuesday, October 8, 2024 at 4:05 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/animation-feedback",
      "title": "Feedback animation | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Feedback animation is used to confirm a user interaction with an interactive element."
        },
        {
          "type": "list",
          "items": [
            "State change transitions for interactive elements, such as hover, focus, and active.",
            "To confirm a user interaction, including positive or negative feedback."
          ]
        },
        {
          "type": "p",
          "text": "Interactive elements typically have four states: rest, hover, focus, and active. A component's appearance often changes between states as a response to interaction. When the appearance changes, animate the transition between states using the following combinations. Components like navigation, tables, or those that contain a list of options have many interactive elements in close proximity. To prevent perceptions of slow performance, feedback should be fast. Set the button to the loading state following a user action, if the result of the action occurs on the same page without a reload. A component should change state instantly whenprefers-reduced-motionis enabled unless it's essential for the workflow. Instantly changing state doesn't mean no animation. It should be invisible for users, but visible for the browser because some JavaScript actions rely on UI animation, so animation should last0.01ms."
        },
        {
          "type": "code",
          "code": "@media(prefers-reduced-motion:reduce){.element{animation-duration:0.01ms!important;animation-iteration-count:1!important;transition-duration:0.01ms!important;}}"
        },
        {
          "type": "list",
          "items": [
            "A guide to designing accessible, WCAG-conformant focus indicators- Sara Soueidan",
            "Focus!- A11y-101"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, June 20, 2024 at 1:09 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/animation-fundamentals",
      "title": "Animation fundamentals | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Animation is a tool to help convey important relationships, changes, or transitions between elements. It's used sparingly and intentionally, highlighting the right elements at the right moment."
        },
        {
          "type": "list",
          "items": [
            "Feedback: Confirm a user interaction with an interactive element.",
            "Focus: Highlight important content outside of a user's current context.",
            "Explanation: Show a user an element's properties, and its relationship to other elements.",
            "Engagement: Help a user feel supported while waiting.",
            "Emotional: Build emotional bonds with a user and express the brand — it can make a user feel welcome and supported."
          ]
        },
        {
          "type": "p",
          "text": "Use animation deliberately to enhance the experience without dominating it. Animation should not be added without a good reason. Too much animation can distract a user and disrupt their task."
        },
        {
          "type": "list",
          "items": [
            "Be realistic.An animation should feel natural and mirror traits from the real world, such as acceleration, gravity, and volume.",
            "Be purposeful.An animation should assist and support the user experience without distracting from it.",
            "Be optional and accessible.An animation should respect the user's motion preferences by using theprefers-reduced-motionCSS media query."
          ]
        },
        {
          "type": "p",
          "text": "Easing specifies the rate of change of a parameter over time. Adding an easing curve makes the animation feel more natural, cohesive, and connected. The duration is the time an animation takes from start to finish. The animated element's scale, easing, and complexity should influence the total duration. This means that the greater the distance traveled and the more complex the animated object, the longer the animation duration should be. Patterns are reusable animations. An auto-scroll transition can be used to bring a content block into view while sticky or fixed elements remain in place. For example, a link in a header can smoothly scroll a section of the page into view that was previously outside of the browser's viewport. Likewise, when a user navigates to a section of a page from an external link, the page can smoothly scroll to that section after it loads. Askeleton loaderuses a horizontally pulsing animation with a linear1stiming. Learn more aboutskeleton loaders."
        },
        {
          "type": "list",
          "items": [
            "The Role of Animation and Motion in UX- Nielsen Norman Group",
            "Using the CSS reduce-motion query to prevent motion- WCAG",
            "Ten tips for better CSS transitions and animations- Josh Collinsworth"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, June 20, 2024 at 1:09 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/color",
      "title": "Color | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "There are three color palettes used in the product:"
        },
        {
          "type": "list",
          "items": [
            "UI- For all surfaces, content, and user interface (UI) elements.",
            "Themes- For user preferences and to differentiate GitLab instances.",
            "Data visualization- For all data visualization, including charts and graphs."
          ]
        },
        {
          "type": "p",
          "text": "Colors areconstant design tokensthat keep use predictable and consistent. The main function of color is to optimize the visual presentation of content by establishing a meaningful hierarchy, indicating interaction, and communicating meaning. The following principles help to think about color use consistently. The same palettes are used for light and dark UI, though they may be applied differently in each. The following principles and considerations apply generally, and to light and dark UI respectively."
        },
        {
          "type": "list",
          "items": [
            "Surfaces are top lit by a single, invisible, pure white light source.",
            "Surfaces reflect light and don't emit it or glow.",
            "Forward elements are lighter and receding ones are darker.",
            "UI elements, like buttons and alerts, rely on chromatic hues and neutrals for meaning and hierarchy, and adapt contrast based on the surface."
          ]
        },
        {
          "type": "p",
          "text": "We have five primary chromatic color ramps that include a total 55 colors for use across the application. These colors give flexibility during the design process, while also providing a harmonious palette that looks consistent and in-line with our brand styles. Though deciding which color to use depends on the situation, here are some general guidelines for using the chromatic hues: Blue indicates a current or active state. It communicates management, progress, connectivity, or organization. Green indicates success. It communicates save, create, add, available, done, approved, or resolved. Orange indicates attention is required. It communicates warning, pending, missing, or impeded progress. Red indicates a problem. It communicates a critical state, destructive action, error, failure, removal, stop, or decline. Purple is not assigned meaning in the same way the other chromatic hues are, and instead is associated with the GitLab brand. It communicates an affinity with the brand, and is used for things like illustrations or company-related announcements in the product. Neutrals are primarily used for surfaces and within components to help differentiate hierarchy. Use shades of gray as backgrounds, borders, and shadows to emphasize areas or set them apart. Alpha colors are used only to effectively shade an element in relation to the surface below. Seeblend modes and opacity. A user may choose between ten different themes to customize the appearance of the navigation in GitLab. Each theme draws inspiration from one of the hues in the UI palette. Indigo and light indigo share the same$theme-indigo-SCSS variables. Green and light green share the same$theme-green-SCSS variables. The dark and light (gray) themes use theneutral palette. Color changes can be used to emphasize user actions. When used, they must be combined with other visual feedback. For example,:focuscolor changes are normally accompanied with a focus ring. Typical state changes (light UI):"
        },
        {
          "type": "list",
          "items": [
            ":hovera color becomes one step darker than at rest.",
            ":focusa color becomes one step darker than at rest, matching:hovercolor.",
            ":activea color becomes two steps darker than at rest.",
            "Where there aren't enough steps to follow this pattern, prioritize:hoverand:focusbecoming a step darker."
          ]
        },
        {
          "type": "p",
          "text": "It's preferred to used solid colors (no transparency or effects) for the highest level of predictability and consistency. However, there are limited instances where transparency (alpha) ormix-blend-modecan be used. For example, a component or element that can be placed on multiple surface colors, where the surface color may conflict with the component color or reduce contrast below asatisfactory contrast ratio. Atertiary buttonis one component that uses amix-blend-modebecause the background on hover can be the same, or have similar lightness to, the surface color. Likewise, the chevron icons in thenavigation sidebarin GitLab usemix-blend-modeto maintain at least a 3:1 contrast ratio against various theme background colors. If a specific hex value is desired, use a solid color instead of approximating it with transparency or a blend mode. At GitLab, we are dedicated to continually improving the accessibility of the application. Pajamas satisfies theWeb Content Accessibility Guidelines (WCAG)AA level for normal text. Learn more inAccessibility."
        },
        {
          "type": "list",
          "items": [
            "Normal text- Must have a contrast ratio of at least 4.5:1.",
            "Large text- Defined as14ptBold (18.5px) or18pt(24px) and must have a contrast ratio of at least 3:1.",
            "AAA- Pass 7:1+.",
            "AA- Pass 4.5:1+.",
            "AA+- Pass, large text only 3:1+.",
            "F- Doesn’t pass."
          ]
        },
        {
          "type": "p",
          "text": "Contrast ratios for each color step are calculated against light ($white/#fff) and dark ($gray-950/#1f1e24) foreground colors. The50–400steps all meet a 4.5:1 contrast ratio or higher against$gray-950(#1f1e24) or darker, while the500–950steps all meet a 4.5:1 contrast ratio against$gray-10(#fbfafd) or lighter. Color should never be the only visual means of communicating information (WCAG 1.4.1). Last updated at:Thursday, July 4, 2024 at 12:10 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/design-tokens",
      "title": "Design tokens overview | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Design tokens are a methodology to pair design decisions with options from the design system. Design tokens abstract out variables like color, typography, and spacing for consistent and meaningful user interface (UI) design across tools and platforms. The following is a basic example of a design token, wheredesign.token.nameis the name, and#abcdefis the value. Design tokens help simplify design and development decisions in part by codifying attributes and use in their names. For example, the name of the design tokentext.color.subtlequickly communicates it's to be used for text color, and is likely less prominent in appearance than other available options. More specifically, we use design tokens to:"
        },
        {
          "type": "list",
          "items": [
            "Catalogue design constants.",
            "Codify design decisions — capturing them openly and objectively.",
            "Synchronize design decisions across design and development tooling.",
            "Promote consistent and meaningful abstraction and use for both stable and experimental design.",
            "Help make new design decisions easier by leveraging existing intent and purpose.",
            "Support efforts like themes and modes by abstracting intent from underlying values."
          ]
        },
        {
          "type": "p",
          "text": "Our design tokens are grouped into three categories —constant,semantic, andcontextual— that each serve a different purpose. Categories organize design tokens, but they don't impact how tokens are named. The specificity of design tokens increases from constant to semantic to contextual, with contextual being the most specific. Constant design tokens are referenced by other tokens whereas semantic and contextual design tokens are those applied during design and development. Constant design tokens (constants) are the rudimentary, unchanging key/value pairs found at the lowest level of the design system that capture essential attributes like color and spacing. Constant design tokens are not intended to be used directly. Instead, they act as the building blocks that are referenced in semantic and contextual design tokens. In the following example, the constant design token namecolor.purple.100references the#e1d8f9hex code for the value. Semantic design tokens reference constant design tokens to encapsulate global design decisions for everything from text to surfaces, and spacing to elevation. Semantic design tokens use a naming strategy that helps clarify design intent and use. In the following example, the semantic design token namestatus.brand.background.colorreferences the constant design tokencolor.purple.100for the value, which in turn references the#e1d8f9hex code. Contextual design tokens are the most specific of the three categories. These design tokens are useful for capturing specific design intent for components, patterns, and experiments. They can reference either semantic or constant design tokens. In the first example that follows, the contextual design tokenavatar.fallback.background.purplereferences the constant design tokencolor.purple.50, which in turn references the#f4f0ffhex value. In the second example, the constant design tokenalert.warning.title.colorreferences the semantic design tokentext.color.heading, which in turn references the constant design tokencolor.neutral.950, that finally resolves to the#1f1e24hex value. Next,learn how to read design tokens → Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/design-tokens-directory",
      "title": "Design token directory | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Last updated at:Monday, May 13, 2024 at 11:22 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/design-tokens-reading",
      "title": "Reading design tokens | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Understanding how design tokens are named will help you to use and apply them correctly. The naming convention enables you to choose a design token that matches your design intent. Design token names may include terms that define thecontext,object, andmodifierfor a design token. For example: [group].[component].[variant/category].[element].[position].[relationship].[property].[type].[scale].[state] Context provides the circumstances for the design token. For example,action.danger.[…]is the start of a design token that is in anactiongroup of thedangervariant. Similarly,banner.promotion.[…]is for abannercomponent of thepromotionvariant. Context can be either a group or component, but never both at the same time — the context is either broad or narrow. Design tokens that don't include a context are the most generally applied."
        },
        {
          "type": "list",
          "items": [
            "Group:Broad context that can apply to many things. Examples arefeedback,action, andcontrol.",
            "Component:Narrow context that only applies to the component. Examples areavatar,button, andtoggle.",
            "Variant/category:Further describes the context. Examples areconfirm,danger, andneutral."
          ]
        },
        {
          "type": "p",
          "text": "An object is the element that the design decision applies to, and may include its position and relationship to other elements or constraints. For example,[…].icon.left.[…]lets you know that theiconelement referenced is in theleftposition. Another example is[…].element.to-top.[…]that tells you this is about ageneric element'srelationship to thetop boundary. An object is always present in asemanticandcontextualdesign token name."
        },
        {
          "type": "list",
          "items": [
            "Element:What's being addressed. Examples arebackground,border, andtext.",
            "Position:Location of the element. Examples aretop,right, orouter.",
            "Relationship:Association to other elements or constraints. Examples areto-edge,to-top, andgap."
          ]
        },
        {
          "type": "p",
          "text": "A modifier is an attribute of the object that's being addressed. Thepropertyitself can be further described by other modifiers to give it more meaning or to understand how it's being changed. For example,[…].color.strong.hoveridentifies this as acolorproperty that isstrongin scale and in thehoverstate. Likewise,[…].font-weight.semiboldidentifies that thefont weightproperty issemiboldin scale."
        },
        {
          "type": "list",
          "items": [
            "Property:Defines what's being addressed. Examples arecolor,space, andsize.",
            "Type:Similar to how a variant describes context, the type describes the property. Examples areinfo,link, andoverlay. Type can include the same terms as a variant or category, likedangerorsuccess, but the same term will never be in two places for a single design token. It's one of the most flexible parts of the naming convention.",
            "Scale:An ordinal range that is finite and doesn't define distance between steps. Example ordinal scale aredefault,subtle,strongandsm,md,lg.",
            "State:Interactive or programmatically unique state. Examples includedefault,hover, andchecked."
          ]
        },
        {
          "type": "p",
          "text": "General design tokens with wide applicability. More specific design tokens with specific use cases. The most specific design tokens that are related to components. One of the features of design tokens is their adaptability. They are defined in one place (input), and then output for various formats. This means that they won't always appear the same — differences in delimiters and language formatting — but the naming convention remains unchanged. Unless indicating a specific format, a design token referenced in documentation will use the json formatting with a dot notation to separate terms and a dash to join compound terms. For example,focus-ring.outer.color. Below is what the json input looks like, followed by a few examples of the design tokens formatted for different platforms."
        },
        {
          "type": "code",
          "code": "{\"color\":{\"neutral\":{\"950\":{\"$value\":\"#1f1e24\",\"$type\":\"color\"}}},\"text\":{\"color\":{\"strong\":{\"$value\":\"{color.neutral.950}\",\"$type\":\"color\"}}}}"
        },
        {
          "type": "code",
          "code": "--color-neutral-950:#1f1e24;--text-color-strong:var(--gl-color-neutral-950);"
        },
        {
          "type": "code",
          "code": "$color-neutral-950:#1f1e24!default;$text-color-strong:$gl-color-neutral-950!default;"
        },
        {
          "type": "code",
          "code": "exportconstCOLOR_NEUTRAL_950=\"#1f1e24\";exportconstTEXT_COLOR_STRONG=\"#1f1e24\";"
        },
        {
          "type": "code",
          "code": "color/neutral/950: #1f1e24\ntext/color/strong: color/neutral/950"
        },
        {
          "type": "p",
          "text": "Next,learn how to use design tokens → Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/design-tokens-using",
      "title": "Using design tokens | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Using design tokens as Figma variables is moving to open-beta following a successful invite-only pilot. It's easy to opt in to the beta."
        },
        {
          "type": "list",
          "items": [
            "AddBeta: Design tokens libraryto your files. (How do I add a library to my file?)",
            "Use colors as Figma variables instead of styles from📙 Component library. (How do I apply a Figma variable?)",
            "Let us know how you get on in thefeedback issue. No problem too big, no feedback too small."
          ]
        },
        {
          "type": "p",
          "text": "In the future, color styles will be removed from the component library and these Figma variables will be updated to support dark mode. We've scoped these Figma variables by limiting the properties they can be applied to. This helps cut out the guess work when designing and supports recommended usage. For example,text.color.defaultcan only be applied as a fill to a text element and not to a stroke or shape layer. Our design tokens are organized into conceptual categories that reflect their purpose and usage within the user interface. These categories help create consistent, accessible, and meaningful user experiences across the product. Consider the context, user needs, and overall design consistency when designing custom elements that use design tokens. Use sufficient color contrast and provide text alternatives for all visual indicators. Actions are interactive elements that trigger or represent user actions.action.*design tokens give a common visual style for interactive elements across the GitLab UI. To create bespoke interactive elements, combine background, foreground, and border color tokens. Note that in some modes, borders might not be visible by default. This is intentional to provide accessible boundaries in modes like Windows High Contrast Mode. Action tokens support three contexts:"
        },
        {
          "type": "list",
          "items": [
            "neutral: Default for most actions.",
            "confirm: For positive outcome actions.",
            "danger: For potentially destructive actions."
          ]
        },
        {
          "type": "p",
          "text": "Interactivity can be communicated through implementing states such ashover,focus, andactive. Consider using existing GitLab components (such asbutton,pagination, ortabs) that already implement action tokens. These provide consistent styling and behavior without custom implementation. For more information on available components, see thecomponents overview. feedback.*design tokens are used to communicate dynamic information about the result of an action, event, or opportunity. Feedback often requires a user's attention or action. Use feedback design tokens when:"
        },
        {
          "type": "list",
          "items": [
            "Notifying a user about a system event (for example, an error or successful action).",
            "Promoting a new feature or important information.",
            "Providing guidance or additional context."
          ]
        },
        {
          "type": "p",
          "text": "Examples of custom feedback elements:"
        },
        {
          "type": "list",
          "items": [
            "A notice that alerts about unusual performance patterns, or an available dependancy update.",
            "An inline update providing compliance check feedback, or discovery of a new vulnerability.",
            "An addition to a collaboration activity stream."
          ]
        },
        {
          "type": "p",
          "text": "status.*design tokens represent the current state or condition of an element or system. A status item provides static information that doesn't typically require immediate action. Use status design tokens when:"
        },
        {
          "type": "list",
          "items": [
            "Indicating the current state of an item (for example, in progress or completed).",
            "Showing a priority or importance level.",
            "Representing system health or connection status."
          ]
        },
        {
          "type": "p",
          "text": "Examples of custom status elements:"
        },
        {
          "type": "list",
          "items": [
            "A color-coded indicator showing task urgency, or the current state of a CI pipline.",
            "A small icon representing the confidentiality level of a document, or the visibility of a repository.",
            "Text communicating code test coverage as a percentage."
          ]
        },
        {
          "type": "p",
          "text": "Use these factors to decide between using feedback and status design tokens:"
        },
        {
          "type": "list",
          "items": [
            "Notice of a performance issue.",
            "Dependency update alert.",
            "Compliance check results.",
            "New vulnerability notification."
          ]
        },
        {
          "type": "list",
          "items": [
            "Task urgency indicator.",
            "CI pipeline state.",
            "Repository visibility icon.",
            "Code coverage percentage."
          ]
        },
        {
          "type": "p",
          "text": "Additional considerations:"
        },
        {
          "type": "list",
          "items": [
            "Dynamic vs. static: Feedback is often dynamic and changing, while status tends to be more static, changing only when the underlying state changes.",
            "Context: Consider the broader context of the user interface. Status is often used within components or alongside specific elements, while feedback might appear separately or overlay other content.",
            "Combination use: In some cases, you might use both status and feedback design tokens together. For example, status design tokens to show the current state of a CI/CD pipeline, with feedback design tokens to communicate that a merged result pipeline has failed.",
            "Active processes: For ongoing processes (like 'in progress' or 'syncing'), consider using status, as these represent the current state even though they're dynamic."
          ]
        },
        {
          "type": "p",
          "text": "When in doubt, consider whether the information represents the current state of something (status) or is communicating a change or the result of an event (feedback). Remember that the primary goal is to provide clear, consistent, and meaningful information to the user in the context of GitLab. Last updated at:Tuesday, October 1, 2024 at 4:28 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/elevation",
      "title": "Elevation | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Elevation addresses dimensional hierarchy and content relationships — not just top-down or scale, but also depth (z-index) and dynamic changes based on state or overflow. Visual styles and affordance that indicate depth, content boundaries, and state are also encompassed within layers. Surfaces that need an indication they can be manually interacted with. For example, cards in issue boards."
        },
        {
          "type": "list",
          "items": ["Card", "Components with shadow boundaries"]
        },
        {
          "type": "list",
          "items": [
            "Passive, defines surface bounds when on a white backgrounds.",
            "Indicates surface can be interacted with."
          ]
        },
        {
          "type": "p",
          "text": "box-shadow:0px 1px 2px rgba(0, 0, 0, 0.1) Surfaces that need boundary definition and appear on hover. For example,popovers."
        },
        {
          "type": "list",
          "items": [
            "Popover",
            "Date picker",
            "DropdownDisclosureCombobox",
            "Disclosure",
            "Combobox",
            "Nagivation: Flyout Menus",
            "Stacked elevation components",
            "Cards when dragged"
          ]
        },
        {
          "type": "list",
          "items": [
            "Surfaces that appear on hover.",
            "Components layered above other components. Stacked layers and static components that have content that scrolls beneath."
          ]
        },
        {
          "type": "p",
          "text": "box-shadow:0px 2px 8px rgba(0, 0, 0, 0.16),0px 0px 2px rgba(0, 0, 0, 0.16); Large surfaces that present additional context to the user."
        },
        {
          "type": "list",
          "items": ["Modal", "Drawer"]
        },
        {
          "type": "list",
          "items": [
            "Passive, defines large surfaces presented as additional context to the user."
          ]
        },
        {
          "type": "p",
          "text": "box-shadow:0px 4px 12px rgba(0, 0, 0, 0.16),0px 0px 4px rgba(0, 0, 0, 0.16); Layers that need to appear above a layer with an existing elevation should follow the stacking guidelines. By default, these stacked layers will use the md-shadow."
        },
        {
          "type": "list",
          "items": ["Content scrolls beneath static elements"]
        },
        {
          "type": "p",
          "text": "Layers that can be moved or dragged by the user use the large shadow to create a greater sense of depth in the UI and define the element from other elements that may have an existing elevation. Last updated at:Tuesday, May 14, 2024 at 5:08 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/iconography",
      "title": "Iconography | Pajamas Design System",
      "content": [
        {
          "type": "list",
          "items": ["Overview", "Icon explorer (beta)", "Contribute"]
        },
        {
          "type": "p",
          "text": "One of our values is to create a distinct GitLab personality that is strong and consistent. Iconography is a powerful visual cue to the user and should reflect our particular sense of style. Icons take inspiration from elements expressed as part of the GitLab brand."
        },
        {
          "type": "list",
          "items": [
            "Balance and structure.Regardless of symmetry, icons should feel complete and in control. Icons act as visual anchors or guides and should be designed to either stop or direct the eye.",
            "Modern and approachable.Border radius and open counters help our icons combine beauty and utility with a touch of personality.",
            "Crisp and intentional.Icon elements should have purpose and place.",
            "Simple and concise.Design to minimize time to comprehension. In the same way the concept of “invisible UI” moves a user to task completion without getting hung up on visual elements or controls, icons should move users to concept and action without extra time spent deciphering a metaphor."
          ]
        },
        {
          "type": "p",
          "text": "There are four icon collections used in the product (not including the Web IDE): UI, status, pipeline, file and folder icons. The design guidelines covered in the sections below only apply to UI and status icons. As the largest of the four collections, comprising of several subcategories, these icons are used broadly in the product to represent GitLab concepts and indicate actions and information in the UI. UI icons can be interactive or informational depending on the context. Third-party brand icons are included in this collection, but are exempt from most design guidelines. These smaller icons complement text or relevant content to indicate the general status, health, or the trend direction of an object. Due to their small size, these icons aren’t interactive unless paired with text or contained within an element, like abadgecomponent, giving them a larger target size. These icons are prefixed withstatus-. These icons represent the status of a pipeline, like running and pending. There are both bordered and borderless versions of each icon. They use a separate grid from all other icons and are also used to generate favicons associated with web pages. Although a pipeline status can overlap conceptually with status elsewhere in the product, these icons are strictly limited to the pipeline context. These icons are prefixed withstatus_. These third-party icons have specific file and language associations, like SCSS, JavaScript, and YAML, and are maintained under a separate MIT license. More information can be found in theproject repository. Icon elements are aligned to a pixel grid. Elements within an icon, such as curves or diagonal lines, won’t always align exactly to the grid. This is okay; in these instances it’s better for the element to feel natural rather than forced. Alignment considerations for a1.5pxstroke are covered in theStrokessection below. In nearly all instances icons should be used at the size they were created at and not scaled. This keeps the icons crisp and consistent in the UI. The16pxicon size is the default, and most UI icons are created at this size. Icons using this16×16 pixelgrid have a14pxlive area surrounded on all sides by1pxfor padding and optical sizing. The12pxgrid is used for all status icons, and some UI icons. Icons using this12×12 pixelgrid have a10pxlive area surrounded on all sides by1pxfor padding and optical sizing. A keyline grid is a set of guides to help maintainoptical balance(visual weight) between icons. Use it as a starting point and guide, but not a hard rule. There are four basic shapes that represent common icon scale and placement. Squares can fill the live area, while circles and rectangles can extend into the padding, which allows icons to be proportionately consistent. In regard to icons, optical balance is the perceived size of an icon relative to other icons. The more that icons feel balanced with one another, the easier it will be to rely on other characteristics to provide visual hierarchy and flow in the UI. Icons that are not balanced can draw unnecessary attention to themselves, or seemingly disappear in the mix of other elements. Here are a few considerations when trying to achieve optical balance."
        },
        {
          "type": "list",
          "items": [
            "More detail equals more visual weight. As thedensityof the graphic increases, it will draw more attention. Try offsetting this by simplifying detailed icons.",
            "Rotate narrow icons 45º, which gives them more visual weight.",
            "At times, optically adjusting an icon may mean less adherence to the grid or other spacing rules to the benefit of balance or clarity."
          ]
        },
        {
          "type": "p",
          "text": "Nearly all UI icons use a1.5pxstroke weight. Lines use rounded caps, unless doing so would misrepresent the metaphor, or if you are trying to infer depth or element clipping. Round line joins are optional and also depend on the metaphor. For example, a checkmark is one continuous object and the round line infers fluidity, whereas clock hands are two joined objects and a miter join defines a joint. A1.5pxstroke:"
        },
        {
          "type": "list",
          "items": [
            "Is more balanced with other UI elements and is similarly weighted to regular system font weights at body text sizes.",
            "Provides more room to convey abstract concepts and metaphors by allowing for both more detail where needed and extra space between elements for clarity.",
            "Works well in both light and dark UI."
          ]
        },
        {
          "type": "p",
          "text": "Since icons use a1.5pxstroke, there are a few alignment considerations:"
        },
        {
          "type": "list",
          "items": [
            "A stroke is either aligned to inside or center.",
            "Outside edges of closed shapes should align to whole pixels.",
            "A line should have at least one edge aligned to a whole pixel. This won't always be possible when two lines comprise an element that has to be centered within the grid or to other elements, but the line end points should always terminate on a whole pixel."
          ]
        },
        {
          "type": "p",
          "text": "Using a stroke (outline) is the default design approach, however a limited number of UI icons and all status icons use a solid fill instead. As a general rule, UI icons that use a solid fill have a specific reason for doing so. For example, theclear(×) icon used to clear a text input requires extra visual weight to not be missed in the UI, and thus has a solid fill applied. To have parity between inside and center aligned strokes with a1.5pxweight, the border radius options are: Clarity should always override consistency, and the guides are flexible when necessary to best represent the metaphor or parts of it. Use increments of15ºto achieve consistency throughout the icon set. Angles can be combined in an icon to create more dynamic shapes and movement, while remaining consistent as a whole. Sharp interior angles help icon clarity. A1pxgap between elements is acceptable, but2pxis preferred when possible — consistency will always help the icons feel more unified. Design most icons in 2D. Depth and perspective should only be used when it’s absolutely necessary to clarify a concept, and even then2pxstrokes are used to add dimension instead of larger fill areas. Simplify icons for clarity and legibility, avoiding embellishment or unnecessary details. Remove or close counters that are less than1pxto avoid distracting artifacts. Use square caps and shape edges to directly indicate clipping or layering. Round should still be used when breaks and intersections are more stylistic. The guidelines are helpful constraints to help focus on theconceptwithout overthinkingstyle. On the other hand, it’s critical to not let the same guidelines negatively impact a metaphor. A great example is a shield icon. While the default border radius is2px, using that here could make the icon feel too friendly, when really we want to emphasize robust and accurate security. In another more literal example, an icon representing tabular data should have crisp edges. Why? Because the UI of tables in the product have crisp, 90º angles. This creates a 1:1 relationship between the icon and the object it represents, making it much easier for users to infer the intended meaning. As with all of the guidelines, there will always be some level of subjectivity. Use your best judgement, and test when necessary. GitLab icons should reflect positive or neutral metaphors. Avoid concepts related to violence or that generally have a negative meaning. Ask yourself, will this icon benefit all users? Is there any potential that its meaning could be confusing or cause anxiety? If there's any doubt, explore other options that are at least neutral in meaning. Using an icon consistently to represent a single concept or action helps with overall learnability for a user. For example, the icon used to represent a feature or an object shouldn't be used to refer to other unrelated concepts or actions in the UI. Avoid using different icons to refer to one specific meaning. For example,pencilshould be used for editing or updating an item, rather thanpencil-squarewhich is used for composing. There are, however, several icons whose design doesn't match a single metaphor, but multiple. In these cases, meaning must be provided in context. Examples of these cases are:"
        },
        {
          "type": "list",
          "items": [
            "An 'eye' icon to indicate a confidential issue can also be used to show a password, or to view a preview of an object.",
            "A 'chevron' icon in adropdown buttoncan also represent the expanded state of anaccordion.",
            "An '×' icon can indicate a failed status or, when used as a button, closing a modal window or removing a connection between objects.",
            "Aremoveicon typically represents permanently deleting an object or, in the case of tokens, revoking access."
          ]
        },
        {
          "type": "p",
          "text": "In addition to context, ensure thataria-labelattributes and/or tooltips are used to communicate the icon meaning. If an icon is not accompanied by a label or its use isn't clear based on the immediately surrounding context, then provide a quick explanation in a tooltip. Try to avoid potentially antiquated concepts, especially when something more modern is recognizable. ExistingGitLab SVGs iconshaven't historically followed a naming convention, so you may encounter different patterns until we're able to address them individually. Use the following guidelines for new icons:"
        },
        {
          "type": "list",
          "items": [
            "When an icon represents a recognizable object, use the name of the object. For example, an icon of a pencil that represents editing is named 'pencil'.",
            "When an icon represents an abstract metaphor or concept, choose a name that best represents the concept or use case. For example, an icon made of stacked shapes to represent an epic is named 'epic'.",
            "The file name should be lowercase and use hyphens as a separator between terms. For example, 'cloud-gear'.",
            "Icons in theGitLab Product IconsFigma file contain keywords and usage details in the component description (each icon is a component) to help unite naming with use and concepts. We hope to eventually have similar capabilities in theGitLab SVGswebsite."
          ]
        },
        {
          "type": "p",
          "text": "Icons are used to stress visual weight for elements with a high priority or to explain the universal knowledge in a simple way. The level of visual weight from heavy to light is:Icon + label > Icon > label. For more information on how icons are referenced in the product, go toGitLab Docs - Icons and SVG Illustrations."
        },
        {
          "type": "list",
          "items": [
            "You can view all of the current icons at theGitLab SVGssite.",
            "View theGitLab Product IconsFigma file."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, September 19, 2024 at 12:44 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/iconography/icons",
      "title": "Iconography | Pajamas Design System",
      "content": [
        {
          "type": "list",
          "items": ["Overview", "Icon explorer (beta)", "Contribute"]
        },
        {
          "type": "p",
          "text": "Last updated at:Thursday, September 19, 2024 at 12:44 AM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/illustration",
      "title": "Illustration | Pajamas Design System",
      "content": [
        {
          "type": "list",
          "items": ["Overview", "Illustration explorer (beta)", "Contribute"]
        },
        {
          "type": "p",
          "text": "One of our design goals is to convey GitLab’s distinct personality through illustration that is aesthetically refined, visually consistent, and reflective of our particular sense of style."
        },
        {
          "type": "list",
          "items": [
            "Be simple.For clarity, we use simple and specific elements to create our illustrations. We take a \"less is more\" approach where illustrations are supportive. They should be obvious but not comprehensive, focusing on impression over complexity.",
            "Be optimistic.We take an open-minded, positive, and friendly approach. Those values are reflected in our illustrations with a light and airy feel.",
            "Be helpful.Our illustrations help users to understand concepts and guide them in the right direction."
          ]
        },
        {
          "type": "p",
          "text": "Practically, applying the principles gives us more leverage to think of the relationship of illustration to use case as a one-to-many instead of one-to-one. In other words, a single illustration could be used in multiple instances. For example, a single empty state illustration could be abstracted enough to be used in multiple empty state pages where the visualimpressionis supported more fully by the content and context. The illustration doesn't have to do all the heavy lifting. To better support reuse, theillustration libraryin Figma also contains dozens of small illustration components that represent concepts found throughout the product. These small illustrations can be used on their own, or as part of a larger illustration. By combining a multipurpose mindset with reusable components, the time it takes to create a new illustration, and the resulting number of illustrations, should both be reduced. This is a win both for designers and users where time and consistency matters. Product illustration style derives from theGitLab Brand Design marketing illustrationsguidelines. It's designed to work in both light and dark UI by placing most objects in or above containers with solid fills. Usebrand colorsto create continuity with the larger GitLab brand. White, charcoal, and purple are used most frequently; the remaining colors are used to highlight and accent objects within an illustration. Specific uses are listed below. All shapes have a solid fill, or overlap an element with a fill, so that they remain visible against any background color."
        },
        {
          "type": "list",
          "items": [
            "White is used for a majority of fills.",
            "Purple 01p may be used to highlight the main ‘action’ or emphasis of the illustration.",
            "Primary oranges and Purple 02p are used sparingly in favor of the secondary palette.",
            "Secondary purples are used for background fills and muted elements. Note that muted elements will appear much stronger on a dark surface unless place on or over a container with a lighter fill.",
            "Teals are useful to communicate positive actions or success.",
            "The remaining colors in the secondary palette are used as highlights, shadows, and accents to differentiate objects within the illustration."
          ]
        },
        {
          "type": "p",
          "text": "A stroke encapsulates most elements and is used for line work and depicting motion or action."
        },
        {
          "type": "list",
          "items": [
            "All strokes use a2pxweight and are aligned to the center or inside of the shape.",
            "A dashed stroke makes connections and conveys empty or unpopulated elements.",
            "A line uses square caps. Miter line joins are the default, but a bevel can be used if the resulting point is too extreme.",
            "Charcoal is used for object strokes and small fill areas. Note that these strokes may not be visible on a dark surface and in most cases should overlap a background container.",
            "Purple 04s can be used on strokes that make connections, depict motion, or represent unpopulated elements."
          ]
        },
        {
          "type": "p",
          "text": "An illustration is primarily comprised of geometric shapes. Use circles, rectangles, squares, and triangles for base elements, with lines and organic shapes for details as needed. There are two container shapes: leaf and round."
        },
        {
          "type": "list",
          "items": [
            "Corners and angles have no border radius by default, but a border radius between4pxto16pxcan be used for softer, rounded objects.",
            "When possible, apply a border radius to the bottom right corner of a shape to create an upward sweep and add a bit of personality."
          ]
        },
        {
          "type": "list",
          "items": [
            "An object should represent its most modern and recognizable form. For example, use a mobile phone instead of a rotary phone.",
            "Typography should be avoided in illustration because it isn't accessible for all users and can't be translated. It is acceptable to include 1–2 characters to represent text or language in general. For example, a character on a keyboard.",
            "The tanuki should only be used for marketing illustration and assets that directly represent GitLab in the product, like a GitLab bot avatar."
          ]
        },
        {
          "type": "p",
          "text": "Using predefined grids and sizes not only helps illustrations feel more consistent and intentional throughout the product, they also add helpful and meaningful constraints to reduce the time it takes to create an illustration. An illustration can use either a largeisometric grid, or one of the fourfocal point gridsizes to align with the use case. A focal point grid leverages therule of thirdsto place elements with dedicated focal points. The vertical and horizontal guides divide the frame into nine equal parts. When multiple objects are present, placing them at or near the point of intersection can provide balance and movement. Not all illustrations will have multiple objects or objects that need to align to an intersection point. Circular grid lines are also provided for centering within the frame."
        },
        {
          "type": "list",
          "items": [
            "Large:288px × 288pxframe size. Used for feature promotion.",
            "Medium:144px × 144pxframe size. Used for empty states and error states.",
            "Small(\"spot\" illustration):72px × 72pxframe size. Used for banners and when space is limited.",
            "Extra small:36px × 36pxframe size. Used for individual illustration elements that are combined with other elements to form a larger composition, or to connect other elements in the UI."
          ]
        },
        {
          "type": "p",
          "text": "An isometric grid provides depth to concepts which can convey process, relationship, and parts. An isometric illustration isn't necessarily more complex, it's just leveraging dimension as an added attribute."
        },
        {
          "type": "list",
          "items": [
            "Large(only):288px × 288pxframe size. Used for feature promotion.",
            "An isometric grid uses guides that are rotated30ºfrom the horizontal plane.",
            "Three subgrids are available to handle different angles: ramp left, ramp right, and ramp forward."
          ]
        },
        {
          "type": "p",
          "text": "While an illustration will always be created using one of the grid sizes above, the final output dimensions follow these rules:"
        },
        {
          "type": "list",
          "items": [
            "Small illustrations are always output at72px × 72px, even if that means there's extra white space in the frame. This helps ensure that when multiple small illustrations are present in the same context they will optically align.Iconsfollow a similar approach.",
            "Large, medium, and extra small illustrations must fill either the width or the height of the frame (or both), and any remaining whitespace must be removed before exporting (frame cropped to artwork) to prevent alignment issues. UseGitLab UI utility classesif additional space is needed in a page layout."
          ]
        },
        {
          "type": "p",
          "text": "Everyone can contribute to GitLab, including our product illustration in Figma Get started with ourcontribution guidelines."
        },
        {
          "type": "list",
          "items": [
            "View the illustration file in Figma.",
            "Go to the SVG Previewerto view all of the current illustrations.",
            "Learn more aboutCreating Isometric Art.",
            "Learn more aboutUsing the Rule of Thirds in Designand theEffective Use of the Rule of Thirds in Design."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/illustration/illustrations",
      "title": "Illustration | Pajamas Design System",
      "content": [
        {
          "type": "list",
          "items": ["Overview", "Illustration explorer (beta)", "Contribute"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/layout",
      "title": "Layout | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "We take aresponsive-firstapproach that considers each component and content block in light of its ability to adapt and function regardless of viewport or layout. Content and functionality are designed to be available and useful independent of page constraints. By default, content shouldreflow, buttruncationorvisual affordanceindicating behavior can also be used to keep the overall experience robust. When the content on a page reflows to fit the available space, the hierarchy, structure, and relationships should remain intact and clear within any viewport."
        },
        {
          "type": "list",
          "items": [
            "The visual order should match theDOM order.",
            "Reflow isn't limited to content wrapping. For example, you might consider grouping a list of actions into a single dropdown in smaller viewports.",
            "Content should not abruptly rearrange as that can be disorienting for users and cause the page to re-load, which may negatively impact the perceived performance of a page."
          ]
        },
        {
          "type": "p",
          "text": "Content can be truncated when length or wrapping would break a component, negatively impact surrounding content, or cause some content to flow off screen. When content is truncated, there must be a method to easily view and access all of the content for both sighted and unsighted users, as well as those using assistive technology. Use your judgment on how to truncate content in your specific situation, but here are a few methods depending on the content type, usage, and size."
        },
        {
          "type": "list",
          "items": [
            "Show intooltip: Use when truncated text is non-critical or providing reference information, or when users don't need access to the raw content.",
            "Show withellipsis button: Use for longer spans of text, or when users need access to raw content to compare or view critical information."
          ]
        },
        {
          "type": "p",
          "text": "Similar to how an ellipsis provides a visual indicator for text truncation, providing visual affordance for other components and content helps a user understand when there's a behavior that allows them to access additional content or controls. For example, a scrim (gradient overlay) at the bottom of a dropdown panel indicates scrolling.View scrim in Pajamas UI Kit → GitLab is a responsive experience that works well across all screen sizes, from mobile devices to large monitors. In order to provide a great user experience, the core functionality (browsing files, creating issues, writing comments, and so on) is available at all resolutions. However, due to size limitations, some secondary functionality may be hidden on smaller screens. This functionality is limited to rare actions that aren’t necessary on small devices. These breakpoints define specifications for different screens, devices, and orientations."
        },
        {
          "type": "list",
          "items": [
            "xs: <576px",
            "sm: ≥576px",
            "md: ≥768px",
            "lg: ≥992px",
            "xl: ≥1200px"
          ]
        },
        {
          "type": "p",
          "text": "Users can choose between two kinds oflayout widthwhich set the behavior of page containers:fixed(default) orfluid. Thefluidlayout does not impose any width restrictions to page containers, so elements expand across the screen to fill all available space. Thefixedlayout applies the ideal maximum width to page containers according to the elements being displayed so they can be experienced using the most appropriate width. Breadcrumbsalways share the width of the page container that follows it. In the fixed layout, there are three possible maximum widths for page containers. For each width, you must consider which one is best to consume and interact with the elements on the page. The following widths include a16pxpadding on both sides."
        },
        {
          "type": "list",
          "items": [
            "990px: By default, all pages use this maximum width. It’s ideal for forms, simple pages, tables with few columns, or pages that focus on written content.",
            "1280px: For pages that have a lot of horizontal elements, such as content-heavy tables/lists or tables with a lot of columns.",
            "Full-width(100%): Exception for pages where the interaction benefits from more screen real-estate, such as charts/graphs and other data visualizations, or boards."
          ]
        },
        {
          "type": "p",
          "text": "We recommend that you first try and use990pxunless another width is more suited. A width can also be chosen based on consistency between similar views in different pages, even if another width would have been more suitable. A sticky container is a div that sticks to the top or bottom of it's parent container. It contains actions or links that are relevant to the task someone is performing. Sticky containers are useful for long pages that contain lots of content that would push buttons or actions above or below the viewport. For example, when editing a wiki, the save changes button will always be visible even if the wiki content extends below the viewport. Use sticky containers with caution as they can easily crowd the interface and make it difficult to navigate the page by shrinking the content area. For layouts that are tabular or mimic a table row, often a single alignment rule applied to all cells or columns may not produce the most scannable outcome. With cascading alignment, the goal is to optically align content in the way that best supports a linear reading flow while maintaining balance. The alignment \"cascades\" from one element to the next based on the preceding element. For example,Baligns withA, andCaligns withB. This type of layout is optional, and you should use your best judgement considering the user's task, the content, and other factors that might impact layout, like reflow and responsive behavior. In the two column example that follows, vertically centering the content with the avatar works well until the content becomes taller than the avatar, at which point it's more scannable to top align and have content extend below. The three column example that follows is similar, where vertically centering provides optimal linear scanning between all three columns. However, once the third column's content is taller than the avatar in the second, top alignment is used to anchor the third column to the second. In both examples the goal is to choose the ideal alignment to the left element in a way that visually anchors the content and limits the eye from bouncing around as much as possible. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/spacing",
      "title": "Spacing | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "All GitLab components follow an 8px spacing system. We’ve defined this as our memorable base number to build upon in order to establish spatial values that are utilized by every component. By following a set spatial convention, we decrease design complexity while increasing consistency across the application. We use 8px as the base for determining our spacial system. In order to create a scale that offers flexibility in spacing without providing an abundance of choices, we’ve defined a set of values using geometric progression:8 * 2^n. We have augmented the progression in order to provide the flexibility that a complex application needs to accommodate a large amount of content. To do this, we’ve added values after 16px usingn * 1.5, wherenis the previous value from the geometric progression. We include 12px as one of our measures, but it should only be reserved for right and left padding of horizontal tabs, buttons, and form elements. This special padding amount allows for better alignment of stacked items while giving elements enough room to breathe. 12px should not be using for any other measurement other than those defined here. 2pxor4pxis used for spacing within a component. 8pxis used to separate related elements. 16pxis used to separate unrelated elements. 24pxis used to separate sub-sections of content. 32xis used to separate sections of content. The table below is a reference to assist with mapping the spacing rules togitlab-ui variables. The table is based on the configuration of1rem = 16pxand$grid-size = 8px. Last updated at:Monday, February 19, 2024 at 10:51 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/type-fundamentals",
      "title": "Type fundamentals | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Text is the primary way of communicating within GitLab. A thoughtful use of semantics and visual hierarchy can provide consistency and clarity to aid in comprehension and action. GitLab Sans, based onInter, is used for most user interface (UI) elements, with system fonts used as a back-up. GitLab Mono, based onJetBrains Mono, is used for code-related elements, for example, code blocks, branch names, commit IDs, and pipeline IDs. The fonts are available to download inthis package. The decision to use custom typefaces supports a consistent core experience for users, regardless of their device. A finer control of font size, variable weight, and other attributes like disambiguation enable greater optimization of usability and polish. The typefaces were chosen because:"
        },
        {
          "type": "list",
          "items": [
            "Tall x-height that improves legibility at small sizes and readability of mixed- and lower-case text.",
            "Features that include character disambiguation andOpenType Font Variations.",
            "Balanced and complementary pairing that supports theGitLab brand expression.",
            "Open source."
          ]
        },
        {
          "type": "p",
          "text": "Sans serif font stack"
        },
        {
          "type": "code",
          "code": "font-family:'GitLab Sans',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Noto Sans',Ubuntu,Cantarell,'Helvetica Neue',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';"
        },
        {
          "type": "p",
          "text": "Monospace font stack"
        },
        {
          "type": "code",
          "code": "font-family:'GitLab Mono','Menlo','DejaVu Sans Mono','Liberation Mono','Consolas','Ubuntu Mono','Courier New','andale mono','lucida console',monospace;"
        },
        {
          "type": "p",
          "text": "GitLab utilizes two type scales:dynamicandfixed."
        },
        {
          "type": "list",
          "items": [
            "The dynamic scale is used for any UI text within GitLab. The500–800options rely on the viewport width to dynamically change size between theminandmax.",
            "The fixed scale is used forMarkdown(user generated content). Sizes match theminof the dynamic scale."
          ]
        },
        {
          "type": "p",
          "text": "Note that in implementation the variables use rem values (relative units) instead of pixels (absolute units), so that text respects browser settings for size and scale. GitLab uses contrasting font weights to support visual hierarchy within the application. Generally, three weights are used by default:400,600, and700. There are a number of text colors defined in GitLab. Color choice depends on the location and purpose of the text. The disabled text color has a 3.52 contrast ratio on white, which falls short of the 4.5:1 ratio needed to passWCAG 2.2 SC 1.4.3 Contrast (Minimum) (Level AA). Disabled (inactive) elements are not required to have sufficient contrast, but we try to get as close as possible while still visually differentiating active and inactive text. Refer to theformspattern details for more information about placeholder text."
        },
        {
          "type": "list",
          "items": ["Type headings", "Type markdown", "Color"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/type-headings",
      "title": "Headings | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": [
            "Every page should have a level 1 (h1) heading. It can be visually hidden if the context of the page is clear for all users, but it must be present in the DOM.",
            "Headings should not skip levels, with the following exceptions:When an alert, or other messaging component, gets inserted before the main page content. These components are designed to use a level 2 (h2) heading.When a heading is used to identify a region, like navigation. Generally, a level 2 (h2) heading is used.In user-generated Markdown content a user can order headings as they like. The visual appearance of a heading is the only guide provided for choosing the correct hierarchy.",
            "When an alert, or other messaging component, gets inserted before the main page content. These components are designed to use a level 2 (h2) heading.",
            "When a heading is used to identify a region, like navigation. Generally, a level 2 (h2) heading is used.",
            "In user-generated Markdown content a user can order headings as they like. The visual appearance of a heading is the only guide provided for choosing the correct hierarchy.",
            "Styles correspond with semantics by default, for example, anh3is larger and has more visual weight than anh4."
          ]
        },
        {
          "type": "p",
          "text": "By default, heading levels are mapped to the heading scale. However, in some cases, visual hierarchy can be established aside fromsemantics. For example:"
        },
        {
          "type": "list",
          "items": [
            "In analert, its container already has sectioning affordances like color, spacing, and iconography. Because of this, a level 2 heading in the alert doesn't need the same emphasis as a level 2 heading for a content section elsewhere on the page.",
            "Similarly, in acard, the properties of the card itself indicate a section. Because of this, a level 3 heading may not require the same sectioning effect as a level 3 heading in body content."
          ]
        },
        {
          "type": "p",
          "text": "When in doubt, use the scale by default, consider the full page context, and reference existing patterns. A display style can be applied to a level 1 heading to emphasize the text in a more promotional manner. The larger size and weight creates a stronger visual anchor compared to other text on the page. Heading mixins and utility classes:"
        },
        {
          "type": "list",
          "items": [
            "gl-heading-{1-6}mixins and classes are the preferred approach to implementing heading typography. Usage should align with semantic heading levels, for example,<h2 class=\"gl-heading-2\">...</h2>.",
            "gl-heading-displayclass is available to create adisplay heading.",
            "gl-heading-scale-{100-800}mixins and classes are available forcontextual adjustmentswhere the semantic heading scale doesn't provide the desired visual hierarchy. However, the recommendation is to use the default scale and avoid contextual adjustments as much as possible."
          ]
        },
        {
          "type": "p",
          "text": "Thegl-heading-{1-6}andgl-heading-displaymixins and classes provide a defaultmargin-bottomand removemargin-top. In order to opt-out of the margin, add a!gl-mb-0class:"
        },
        {
          "type": "code",
          "code": "<h2class=\"gl-heading-2\">...</h2><!-- has margin --><h2class=\"gl-heading-2 !gl-mb-0\">...</h2><!-- to remove margin -->"
        },
        {
          "type": "p",
          "text": "gl-heading-scale-{100-800}mixins and classes do not provide margins."
        },
        {
          "type": "list",
          "items": ["Type fundamentals", "Type markdown"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, September 18, 2024 at 1:49 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/product-foundations/type-markdown",
      "title": "Markdown | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Thefixed type scaleis used withGitLab Flavored Markdown(GLFM) and for content such as tables, task lists, and code blocks. This includes styling for the following GLFM components. Wrap a block of<code>within a<pre>element. For example, multi-line code that has syntax highlighting. The size of the text will adjust based on the parent text size. A code block fits the width of the parent container and its content scrolls horizontally if it overflows the block. View in Pajamas UI Kit → Highlight inline text as<code>. For example, a short line of code, a CSS class, or a variable. The size of the text will adjust based on the parent text size. View in Pajamas UI Kit →"
        },
        {
          "type": "list",
          "items": ["Type fundamentals", "Type headings"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, January 30, 2024 at 11:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/affordance",
      "title": "Affordance | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "If a control or action is critical to a task, and cannot be achieved in another way, then it should be visible by default for all users and modalities (mouse, keyboard, touch, voice). While there may be an option for toggling visibility of such controls and actions, a user should be aware they exist before toggling them off. It may be possible to hide a control if the ability to access the same information or complete the same task are available nearby elsewhere, and if hiding it by default provides a better overall experience for all users and modalities. For example, hovering or focusing on an item in an email inbox list may reveal controls, like delete, that are also available when viewing the individual email itself. The mouse cursor is key in helping users understand how to interact with elements on the screen. Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/ai-human-interaction",
      "title": "AI-human interaction | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "As AI continues to advance, it brings both exciting opportunities and new challenges for product design. Although designing for AI still requires adhering to human-centered design principles, additional considerations such as ethics, privacy, trust, and transparency must be taken into account. This page is divided into two main sections:GuidelinesandFrameworkfor AI. AI technology should be leveraged to enhance the user experience, rather than be the primary focus. Design with a deep understanding of the user's needs, goals, and pain points. If you aren't aligned with a user's need, you are building a system that does not solve a problem. Instead of asking \"Can we use AI to_?\", ask yourself \"How might we help users_?\". Understand if a task is a good fit for AI or if it is better done by a human. First, understand if a user's need will be helped by automation. Users may not want automation inhigh risk taskswhere they will be held responsible for the result, or tasks that they enjoy doing. Tasks that are a good fit for automation are tedious, error-prone, boring, low risk, and free up the user's time. If a user benefits from automation, consider if the problem could be addressed with pre-defined rules (if this, then that). Understand the strengths and weaknesses of AI. It can be helpful for processing large amounts of information, pattern finding, prediction, classification, and recommendations. Given good training data, AI can be more accurate and faster than a human at completing tasks. It is less helpful for tasks requiring empathy, emotional intelligence, morality, common sense, predictability, contextual understanding, intuition, and creativity. To understand the risk of an AI-powered feature, assess theprobabilityof error andimpactof that error, whereimpactis a comparison of potentialcostandbenefits. Costs can be financial, emotional, reputational, opportunity, time, compliance, or others. In GitLab, an example of alow risksituation is an AI-generated issue summary, which quickly gives context to the user about the issue. The potential cost is low, as the user usually does not take action based on the summary alone. An example of ahigh risksituation is an AI-generated fix for a security vulnerability, which helps the user resolve it faster.\nTo mitigate the risk and ensure the vulnerability is resolved, the user should be encouraged to review the suggested fix and run all security checks before they accept it.\nBut if the fix unintentionally worsens the security, the cost might outweight the benefit. The potential cost increases in high-risk applications, such as critical infrastructure. To mitigate high risk situations:"
        },
        {
          "type": "list",
          "items": [
            "Set the right expectations.",
            "Design for potential negative impact. For example, a user should explicitly opt in to a high risk AI-powered feature. For more information, seedestructive actions."
          ]
        },
        {
          "type": "p",
          "text": "Users rely on the system to make decisions, but they should not trust the system entirely. Communicating confidence allows users to know how much scrutiny they should put recommendations under. Establish trust by ensuring the user always knows when they are interacting with AI, and when content or recommendations come from AI. Such disclosures are often required by third party AI services and may soon be required in the European Union (EU AI Act). TheGitLab Duoname is an extension of our brand. It acts as an umbrella for all AI capabilities across GitLab, communicates the suite of AI capabilities, and helps identify specific AI-powered features. Include the GitLab Duo name for each AI-powered feature in onboarding or UI text, eitherbeforeorafterthe user interaction. However, to ensure concisecall-to-action labels (CTA)and maintain clear, user-friendly interfaces, avoid using the words \"GitLab Duo\" or \"AI\" directly in the CTA text. For variations of the GitLab Duo name, such as features or add-ons, see the technical writingword list."
        },
        {
          "type": "list",
          "items": [
            "Flag AI-generated content with the disclaimer<Verb> by AI. For example: “Generated by AI” or “Summarized by AI”.",
            "Close to that disclaimer, show a message to encourage the user to verify the AI-generated content. If space allows, show the following directly in the UI or in apopover: “Content generated by AI should be seen as a starting point and verified before use. It may be incorrect, inappropriate, or diverge from your organization’s standards.” Or, if space is a concern, just “Verify before use.”",
            "Show the disclaimer only once per context, and preferablyunderthe AI-generated content, in a way that is clear that it applies to all content within that context."
          ]
        },
        {
          "type": "p",
          "text": "Thetanuki-ai-mdandtanuki-ai-smillustrations serve the purpose of promoting and associating AI related features within the UI. The illustration is currently awork in progress, and its final version is still in development. The interface should clearly communicate AI capabilities, limitations, and the scope of its decision-making authority. Users need to understand a system's capabilities and limits to understand how much trust to put into the system. To help the user build a mental model of the system:"
        },
        {
          "type": "list",
          "items": [
            "Clearly highlight if a feature is anexperiment or beta.",
            "Follow thedisclaimer guidelines.",
            "Use clear, simple language to explain what the system is doing and how it arrived at its recommendations.",
            "Explain what data the system is trained on and what it's optimized for.",
            "Tell the user how their data is used and processed."
          ]
        },
        {
          "type": "p",
          "text": "The user should be able to decide whether to follow the AI's recommendations or not. There should be an easy way to undo system actions. Do not collect user data without asking the user's permission. When your system is not certain of the user's intent or has low confidence, make sure there is a path forward that does not rely on AI. Explain why the system was not able to provide a recommendation. Errors are also opportunities to learn more about your user's mental models and improve the system's ability to make recommendations. Consider designing a feedback mechanism that presents as a cue for adjustment rather than an error state. Design mechanisms to collect implicit and explicit feedback to improve the system. To help you put theguidelinesinto practice, the framework materializes them into standard patterns that address the most common UX challenges. Follow the progress in theframework epic. These dimensions can assist you in choosing the most appropriate pattern for the problem you are solving."
        },
        {
          "type": "list",
          "items": [
            "Mode: What's the emphasis and persistence of the AI-human interaction relative to the main context and the user journey?Focused: AI is the main context, with a dedicated focus.Supportive: AI complements the main context and accompanies users along their journey to help them achieve their goals.Integrated: AI is blended into specific moments of the users flow to help them complete small, discrete tasks.",
            "Focused: AI is the main context, with a dedicated focus.",
            "Supportive: AI complements the main context and accompanies users along their journey to help them achieve their goals.",
            "Integrated: AI is blended into specific moments of the users flow to help them complete small, discrete tasks.",
            "Approach: What should AI focus on improving?Automate tasks: improveefficiencyby replacing human decision-making and actions, always done with human awareness and consent.Augment capabilities: improveeffectivenessby supporting and improving human decision-making and actions.",
            "Automate tasks: improveefficiencyby replacing human decision-making and actions, always done with human awareness and consent.",
            "Augment capabilities: improveeffectivenessby supporting and improving human decision-making and actions.",
            "Interactivity: How does the system surface AI to engage with the user?Proactive: triggered without user interaction.Reactive: triggered by user interaction.",
            "Proactive: triggered without user interaction.",
            "Reactive: triggered by user interaction.",
            "Task: What's the user task that AI can assist with?Classification: categorize, suggest, rank, match.Generation: summarize, explain, create.Prediction (or regression): forecast continuous, non-categorical data, like numerical values.",
            "Classification: categorize, suggest, rank, match.",
            "Generation: summarize, explain, create.",
            "Prediction (or regression): forecast continuous, non-categorical data, like numerical values."
          ]
        },
        {
          "type": "p",
          "text": "While we don't have documented patterns, we share some potential patterns in thisvideo(slidesandinternal Figma file). As inspiration forintegratedmode patterns, you can find some explorations inthis Figma file:"
        },
        {
          "type": "list",
          "items": [
            "Conversational Experience Design, SAP",
            "Designing Intelligent Systems, Fiori for Web Design Guidelines, SAP",
            "Human-AI eXperience (HAX) Toolkit, Microsoft",
            "People + AI Guidebook, Google",
            "Responsible bots: 10 guidelines for developers of conversational AI, Microsoft"
          ]
        },
        {
          "type": "list",
          "items": [
            "Contextual help",
            "Destructive actions",
            "Saving and feedback",
            "Duo slash commands"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/contextual-help",
      "title": "Contextual help and info | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The UI should be self-explanatory. If extra help is required, it should bein the UI itself,\nas either UI text or as text within adrawer. Affordance is higher when help content is available in context. Documentation can change, and links from the UI to the documentationcan become out-of-date or circular.\nYou should avoid links from the UI to the documentation if you can. However, you can link from the UI to the docs if:"
        },
        {
          "type": "list",
          "items": [
            "Users require information that can't be communicated in the available space. (For example, a list of variables that are defined fully in the documentation.)",
            "To use the feature, users need to understand a concept in more detail.",
            "The UI is part of a larger workflow."
          ]
        },
        {
          "type": "p",
          "text": "Help links open in a new tab to ensure:"
        },
        {
          "type": "list",
          "items": [
            "The result of clicking links is predictable.",
            "The user does not need to navigate away from their task."
          ]
        },
        {
          "type": "p",
          "text": "To learn how to link to GitLab documentation in various programming languages, seeLinking to /help. In most cases, phrase the link as a question."
        },
        {
          "type": "list",
          "items": [
            "Example: A merge request approval is required.Who can approve?"
          ]
        },
        {
          "type": "p",
          "text": "If you can't determine a useful question, useLearn more. However, be aware thatLearn moreis not descriptive or meaningful, andshould be used sparingly."
        },
        {
          "type": "list",
          "items": ["Example: Approve a merge request.Learn more."]
        },
        {
          "type": "p",
          "text": "Note: The punctuation is not part of the link. For screen reader users, add anaria-labelwith a full-sentence description. When linking to the GitLab documentation, don't add the external link icon.\nEven though documentation links on GitLab.com take the user todocs.gitlab.com, the same links\non self-managed open in the instance's/help. When linking to third-party documentation, outside the GitLab instance, make that clear in the link text and use the external link icon. The icon should usearia-label=\"(external link)\", or similar, to communicate the purpose to screen reader users."
        },
        {
          "type": "list",
          "items": [
            "Example: Learn how to use minikube in theKubernetes documentation."
          ]
        },
        {
          "type": "p",
          "text": "If link text is not possible and space is tight, use thehelp iconthat, when hovered or focused on, shows the summary in apopover. The popover title should be the question that is answered by the summary. ALearn morelink can be added to the popover to associate additional, relevant information. There are exceptions when aninfo iconis used instead of the help icon. While the help icon unblocks a user by answering a question, the info icon provides additional details about the current context. In some cases users might need to reference additional information for completing a task in the UI. When the content length allows, we can surface such information using thedrawercomponent."
        },
        {
          "type": "list",
          "items": [
            "When the help information is supplemental and not critical to the completion of a task.",
            "When we expect the user to reference that information while performing tasks in the UI.",
            "When the content is too long to show in a tooltip or popover.",
            "When the content is short enough to comfortably read in the drawer."
          ]
        },
        {
          "type": "list",
          "items": [
            "When help content is a necessary part of the flow for completing a specific task, consider using amodalinstead.",
            "When help content is short enough, consider using apopover.",
            "When help content is too long to be easily read in a drawer, consider linking to the documentation instead."
          ]
        },
        {
          "type": "list",
          "items": [
            "Drawer content should always be related to a specific context or task in the UI. The drawer header should reflect the context or task the user is performing.",
            "Drawer content is stored as Markdown in theGitLab repository/docdirectory, rather than hard-coded in the product code.",
            "When writing drawer content, use thedocumentation topic types guidelinesand generaldrawer content guidelines.",
            "You should collaborate with a technical writer when defining the content, and a technical writer review is required on related merge requests."
          ]
        },
        {
          "type": "p",
          "text": "Links to the documentation should be used sparingly since our goal is to present the necessary reference information in the UI. If you need to link to additional documentation, add one link at the end of the drawer content so users can learn more if they found the drawer content insufficient. It's not recommended to use action buttons in drawers in conjunction with reference information since the page the drawer is on might have its own set of actions that remain accessible when the drawer is open. Drawers with help content should focus on providing reference information that supplements the interactive actions in the UI. It's not required to localize the help drawer content. For general guidelines follow thedrawer behavior documentation."
        },
        {
          "type": "list",
          "items": [
            "The trigger that opens the drawer should be specific to the content it contains. For example, a \"Syntax options\" link opens a drawer with syntax options documentation.",
            "Both text and icon buttons can be used as the drawer trigger depending on the context. In either case it should be clear from the visible text or aria-label (for icons) that help will be provided."
          ]
        },
        {
          "type": "list",
          "items": ["Tooltip", "Popover", "Drawer"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/destructive-actions",
      "title": "Destructive actions | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Friction in the user interface is often regarded as something to avoid or resolve. However, it can be useful to prevent a user from completing a destructive action when the consequences may be unknown. In cases where we prioritize error prevention, we can take steps to:"
        },
        {
          "type": "list",
          "items": [
            "Assist a user from accidentally clicking a destructive action.",
            "Help a user understand what happens after confirming a destructive action.",
            "Provide alternative options to potentially resolve a problem without resorting to destructive action."
          ]
        },
        {
          "type": "p",
          "text": "Depending on the severity of destructiveness, consider the following friction patterns. If a destructive action is difficult to undo or data will be lost permanently, strongly consider implementing amodalto confirm the action or guide the user to an alternative route."
        },
        {
          "type": "list",
          "items": [
            "Amodalused for confirming a destructive action should use the dangerbuttonvariant to confirm the action.",
            "Require input confirmation of the deleted object's name when the action removes additional resources within. For example, when deleting a project.",
            "All caps text should not be used in the modal header or body, unless the all caps styling is typical in the context (for example, README).",
            "Body content can usebold stylingto draw attention to the consequences of the destructive action.",
            "Avoid usingalertsto emphasize the content inside a modal."
          ]
        },
        {
          "type": "p",
          "text": "Destructive actions may be frustrating to a user when performed unintentionally. Recovering from these actions is difficult and can have an emotional impact. Consider introducing an additional step to prevent a user from accidentally completing a medium-severity destructive action. For example, put the action within a dropdown requiring a minimum of two clicks to complete it. The destructive action can easily be undone and no actual data is lost. Consider adding no friction at all in order to streamline the interface, especially in places where an action needs to be performed in bulk. These kinds of destructive actions can be exempt of using thedangerbutton variant and use thedefaultvariant instead."
        },
        {
          "type": "list",
          "items": [
            "10 Usability Heuristics for User Interface Design - Nielsen Norman Group"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/drag-and-drop",
      "title": "Drag and drop | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "To move and reorder items in a collection or across similar collections, users can press and drag them to a new position. There is a clear affordance that distinguishes draggable items from non-draggable ones:"
        },
        {
          "type": "list",
          "items": [
            "Draggableitems have rounded corners, a shadow, and a handle should appear to the left of the title of the draggable item.",
            "Non-draggableitems look like a plain list."
          ]
        },
        {
          "type": "p",
          "text": "Usesystem cursorsto indicate when an element is draggable. Thegrabcursor appears on hover when an element is draggable. Once it’s dragged, the cursor will change tograbbing. For areas where an element cannot be dropped, use thenot-allowedcursor. Items contained in a list can be draggable to help a user manually reorder them. The direction of list items follows only a top to bottom order whereas items in a grid may move left to right as well. On drag, draggable items should be minimized to only show their title. For example, if you’re dragging an epic swimlane in an issue board, it would only show its title on drag and it would hide the rest of its content until it‘s dropped. This allows more drop areas to be visible and not be blocked by large draggable items. Draggable items should not impede other functionality, like scrolling on mobile or activating a link within it. If items can be reordered with a mouse, they should also be able to be reordered by keyboard."
        },
        {
          "type": "list",
          "items": [
            "When dragging an item over a droppable area, a solid blue line should appear to show that an item can be dropped in that area.",
            "Dropped items will display a short animation to visually indicate the drop of that item has been completed.",
            "The keyboard shortcut to undo a dropped item is to pressctrl + z, much like you would to undo a text change."
          ]
        },
        {
          "type": "p",
          "text": "Drag and drop should be disabled if the collection is sorted by a specific attribute, as the logic of either contradicts the other. Example: you cannot manually reorder issues if they are sorted by popularity. Be cautious when allowing drag and drop in a large collection with dozens or hundreds of items. It’s mainly intended for quick reordering of items in short collections where the user can comprehend the collection’s size and scope. This is usually possible by being able to view all of the items at the same time. If the user might spend a long time going through, prioritizing, and reordering hundreds of items, consider a different design."
        },
        {
          "type": "list",
          "items": ["Table", "List"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/feature-discovery",
      "title": "Feature discovery | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "New features can enhance the experience and unlock significant value for users. However, a user’s context plays a significant role in how they engage with new functionality. According to theFOGG Behavior Model, three factors impact people's behavior with regards to completion of tasks:"
        },
        {
          "type": "list",
          "items": [
            "Their ability to perform the task.",
            "Their motivation for the task.",
            "The prompt that triggers the behavior."
          ]
        },
        {
          "type": "p",
          "text": "Prompts to trigger the desired behavior succeed when motivation and ability are high enough. We can improve a user'sabilityto perform a task by guiding them using discovery patterns and boost theirmotivationby clearly communicating the value of a task. Keeping these principles in mind helps us to improve both the experience and make it more likely that a user achieves their desired outcome. Implicit discovery patterns are the preferred approach to integrate features into the experience. Before you add feature discovery notices, explore solutions where the feature is not actively promoted. When the user can find features within the context of their existing tasks, they remain focused and are not overwhelmed. Ensure that the feature is introduced at the right moment, and that the call-to-action is clear and understood. This approach promotes long-term engagement with new features as the user organically builds an understanding of the product. Before you consider contextual discovery, you should explore solutions where the feature is not actively promoted (seeimplicit discovery). Contextual notices are subtle UI elements that draw attention or explain a feature, such as additional text, abadge, or anicon. These notices should be positioned near the relevant context of the user’s task and avoid disrupting the user's workflow. Contextual notices can be helpful when a feature requires more guidance than a call-to-action alone. If needed, allow the user to access more details through progressive disclosure. Ensure the help content is visible but don't overwhelm the user with too much information at first, and offer more details only when they seek it. Use contextual notices when implicit discovery doesn’t suffice, for example:"
        },
        {
          "type": "list",
          "items": [
            "Complex or novel features:Features that the user is not familiar with and need additional information to encourage engagement.",
            "Limited visibility:When features are not noticed alongside competing actions and the user's previous mental models."
          ]
        },
        {
          "type": "p",
          "text": "Before you consider disruptive discovery, you should explore solutions where the feature is not actively promoted (seeimplicit discovery). Disruptive notices, such as abannerormodal, are more noticeable than contextual notices. When a notice is disruptive and doesn't match the user's current context, it can have limited effectiveness, because it the user feels it's irrelevant and dismisses it. Use disruptive discovery when contextual discovery doesn't suffice, such as:"
        },
        {
          "type": "list",
          "items": [
            "Critical notices:When engagement is required from the user. For example, to comply with a policy in the organization.",
            "User onboarding:To guide a new user through essential features that they need to understand to use the product effectively.",
            "Significant changes:When functionality changed in a way that could confuse a user or alter their workflows, a prominent notice can clarify the changes."
          ]
        },
        {
          "type": "p",
          "text": "Be mindful of what notices already exist in the user's workflow. Multiple prominent notices and alerts can overwhelm them and lead to desensitization to important messages. A well-designed onboarding process can be an effective way to introduce a user to a new feature, likeCI/CD setup, or product stages, such asadopt the Secure DevOps stage. However, its primary goal is to showcase the value a user gains from these features and stages."
        },
        {
          "type": "list",
          "items": [
            "Identify the value that you're trying to give to the user and work backwards from that. Having a new feature that you want to showcase alone isn't a good reason for onboarding. What is the user-facing value of the new feature? How will they benefit from it?",
            "Provide a \"No, thanks\" option that allows users to opt out."
          ]
        },
        {
          "type": "p",
          "text": "The next step should be to think about the user's context. Where in the app are they? What are they doing? How familiar are they with what you want to show them? Do they have the ability to perform the task? Is their motivation high enough? If not, how will you improve their ability or increase their motivation? Where will you place the prompt so that it’s contextual? The following patterns can be used as initial prompts to start the onboarding flows. Consult the intrusion level, pattern effectiveness, and recommendations for each one when deciding which to use. Consider the following recommendations to make your initial prompts more effective and contextual."
        },
        {
          "type": "list",
          "items": [
            "Always explain why the initial prompt is shown (for example,you don’t have a pipeline to check the quality of your code, we can show you how to set it up quickly.)",
            "What is the value that the user will get from it (for example,it will make your code more secure and robust.)",
            "Avoid generic CTA copy like“Let’s go”or“Show me how”. Use something that will tell the user what value they’ll get out of it so that even if they only scan through the copy of the prompt, they’ll still have a good idea of what it is they’re doing and what the result will be. Good example:“Secure your code”."
          ]
        },
        {
          "type": "p",
          "text": "Sometimes, the onboarding flow will span across different pages. When that’s the case, use thepopovercomponent to keep a user on the right path. The popovers can be animated in with a short delay after the page has loaded to make sure that they’re noticed. When an onboarding flow expands across several steps (and possibly pages), try to aim for three steps. Five should be the maximum. If you think you need more, consider breaking it down into multiple and smaller flows. The more steps an onboarding flow has, the less likely it is that a user will complete it."
        },
        {
          "type": "list",
          "items": ["Banner", "Popover", "Empty states"]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, October 23, 2024 at 2:43 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/feature-management",
      "title": "Feature management | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Disabling unwantedfeatures is possible in projects, but adding more to this list is not recommended. Disabled features may adversely impact the theSystem Usability Scale, since it may lead to an unexpected and inconsistent user experience. Admin users cannot disable features at the instance or group levels, as they do not know what functionality end users may need. Feature discoverymoments are notices presented in the UI that inform a user of additional features. These could be features available in higher tiers, or free features that unlock significant value to a user. Higher tier features should be easy to identify from the rest of the interface. Consider using the following badge to highlight them:"
        },
        {
          "type": "list",
          "items": ["Component name:GlBadge", "Variant:Tier", "Icon:16"]
        },
        {
          "type": "list",
          "items": [
            "Position the badge close to the feature's name to establish a clear visual link. Avoid placing badges inside buttons to maintain button simplicity and clarity.",
            "When using the icon only badge, use atooltipto display the tier name.",
            "Tier badge should only be displayed if the active plan is lower than that of the feature. For example if the active plan is Ultimate, and the related feature is also Ultimate, there is no need to display the tier badge.",
            "For trials, the tier badge should always be displayed."
          ]
        },
        {
          "type": "list",
          "items": [
            "Links totiers details.",
            "Can be removed from the UI via group or instance level settings."
          ]
        },
        {
          "type": "p",
          "text": "Experiment and beta features are subject to legal terms, which must be displayed next to the settings to enable said feature. Use the following UI text: Similar to higher tier features, feature versions like experiment and beta should be easily identifiable, using abadgewith an explanation in apopover:"
        },
        {
          "type": "list",
          "items": [
            "Might be unstable or cause data loss.",
            "Are not supported and might not be documented.",
            "Could be changed or removed at any time.",
            "Are subject to theGitLab Testing Agreement."
          ]
        },
        {
          "type": "list",
          "items": [
            "Have a low risk of data loss, but might still be unstable.",
            "Are supported on a commercially-reasonable effort basis.",
            "Have a near complete user experience.",
            "Are subject to theGitLab Testing Agreement."
          ]
        },
        {
          "type": "list",
          "items": ["Component name:GlBadge", "Variant:neutral"]
        },
        {
          "type": "list",
          "items": [
            "Position the badge close to the feature's name to establish a clear visual link. Avoid placing badges inside buttons to maintain button simplicity and clarity.",
            "When placing the badge, consider the available space. The badge can be displayed either before or after the user interacts with the feature.",
            "When the feature becomes Generally Available, make sure the badge is removed."
          ]
        },
        {
          "type": "p",
          "text": "Feature visibility is dependent on a user's permissions or subscription levels, and on which features they've chosen to enable."
        },
        {
          "type": "list",
          "items": [
            "A feature is hidden when the user shouldn't have access to it due to a lack of permissions. Hiding the feature is recommended because the user doesn't need to be aware of the functionality, and there is no UI that would allow them to obtain access. For example, we should hide the delete branch button if the user's role does not allow deletion of branches."
          ]
        },
        {
          "type": "list",
          "items": [
            "When the user has access to a feature but it's not currently enabled. In this scenario, a feature may be visible but disabled. When a feature is disabled, there should be an explanation for why it's disabled, or controls that allow a user to enable or request access to the feature.",
            "When child-level settings are enabled from a parent level. In this scenario, a feature may be disabled or replaced with a read-only equivalent. There should be text explaining that the setting is configured at the parent level.",
            "Exposing a message to explain why a feature is not available is preferable to disabling the feature. For example, instead of disabling the merge button on a merge request with outstanding approvals, the button is replaced with copy to explain the state,Merge blocked: all required approvals must be given.If an element needs to be disabled, consider wrapping it in a focusable element that can trigger atooltip.",
            "If an element needs to be disabled, consider wrapping it in a focusable element that can trigger atooltip."
          ]
        },
        {
          "type": "list",
          "items": [
            "Button",
            "Forms",
            "Feature discovery",
            "Duo calls to action"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/loading",
      "title": "Loading | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "A loading indicator, such as aspinner, provides users with feedback when an interface is in an indeterminate state as a result of their action, to help manage their expectations. A loading indicator can be used to communicate:"
        },
        {
          "type": "list",
          "items": [
            "Content is being loaded onto the page.",
            "A background process is occurring."
          ]
        },
        {
          "type": "p",
          "text": "A loading action, such as a 'Load more'button, gives users a sense of control when fetching more items and is used to:"
        },
        {
          "type": "list",
          "items": [
            "Indicate more items are available for the current list.",
            "Prepare the user for what is about to happen.",
            "Empower the user to choose when loading occurs."
          ]
        },
        {
          "type": "p",
          "text": "In Pajamas, the following methods indicate and initiate loading:"
        },
        {
          "type": "list",
          "items": [
            "Loading animation and placeholders",
            "Loading more",
            "Progressive loading"
          ]
        },
        {
          "type": "p",
          "text": "The load more interaction isa more accessible alternativetoinfinite scroll. It allows a user to load more results by clicking a 'Load more'button. The button text can optionally include the number of items that will be loaded, for example, 'Load 20 more'. The load more interaction can be used for a set of similar items:"
        },
        {
          "type": "list",
          "items": [
            "With content that updates frequently.",
            "Without sort or filter functionality.",
            "That doesn't usepaginationto provide a preset number of results per view."
          ]
        },
        {
          "type": "list",
          "items": [
            "The 'Load more' button is present at the end of a list only when there are more items available. The button is centered within the container and uses thedefaultvariant andsmallsize.",
            "Clicking the button loads more results inline and moves the button to the end of the list if there are more items that can be loaded.",
            "After clicking the button, the user's current position is maintained by moving focus to the first element appended to the current items.",
            "The number of initial results, and results that load after clicking the button, is adjustable based on the scenario. For example, it could be better to load 20 more single-line items, versus loading only 10 more multi-line items that would take more time to scan.",
            "Loading more is a one-way action. Ifshowing lessis necessary, the expand and collapse behavior would be a better fit, like anaccordion."
          ]
        },
        {
          "type": "list",
          "items": ["Infinite scroll", "Skeleton loader", "Spinner"]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/navigation-sidebar",
      "title": "Navigation sidebar | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "The navigation namely refers to the persistent left sidebar where a user can access different sections of the application. In order to ensure a familiar user experience, minimize disruption, and properly introduce changes we utilize the following resources to guide any change to this region:"
        },
        {
          "type": "list",
          "items": [
            "How to propose a change to navigation.",
            "How to conduct user research of a proposed change to navigation.",
            "How to communicate a change in the app."
          ]
        },
        {
          "type": "p",
          "text": "We use a vertical style of navigation forseveral key benefits highlighted by Nielsen Norman Group. The navigation sidebar is designed to be contextually specific:"
        },
        {
          "type": "list",
          "items": [
            "The header area is always the same, while the elements in the body of the navigation sidebar will change depending on the user's context.",
            "The names used for each navigation item should be short and easy to remember, ideally just 1-2 words.",
            "There are two levels of navigation:top-level itemsandsub-level items. There is not a third level of depth."
          ]
        },
        {
          "type": "p",
          "text": "A top-level item is designated with a unique icon or avatar, and may contain related sub-level items. Each group of sub-level items should reflect its top-level item. Items within a sub-level group may change depending on the context, permissions, and roles. For example, the admin area may include less or more items under a top-level item than a group or project. Top-level item naming and positioning should remain consistent across similar contexts like groups and projects, even with only one sub-level item. Top-level consistency reduces the cognitive effort needed to understand the navigation and task hierarchy."
        },
        {
          "type": "list",
          "items": [
            "The navigation sidebar is always available unless navigating is not needed or beneficial. Theminimalpage layout is an alternative option that removes the navigation elements.",
            "The user's preference is set with a cookie to keep the navigation sidebar hidden or visible. It will be visible regardless of the cookie when the user needs the navigation sidebar to complete a task.",
            "While hidden, hovering over the left edge of the page or thesidebar iconbutton reveals the sidebar as an overlay that can lock in place or be used to navigate without disrupting the page content.",
            "Pinned items uniquely persist, allowing users to surface important links across groups and projects."
          ]
        },
        {
          "type": "p",
          "text": "A single vertical navigation sidebar allows the user experience to transition across each breakpoint with minimal logic. The navigation sidebar is visible by default, though users can choose to hide it to give focus to the body of the page and minimize distractions. The navigation sidebar is hidden by default. When revealed by selecting thesidebar iconbutton, it overlaps the page content with a semi-transparent overlay that covers the background. The user's cookie preference does not change within this breakpoint. The navigation helps orient users, so we want to avoid users wondering, \"Who moved my cheese?\" Once a change to the navigation has been validated and approved, select one of the following approaches for communicating the change to users based on the assumed level of disruption:"
        },
        {
          "type": "list",
          "items": [
            "None:No in-app messaging is necessary if a change will likely go unnoticed.",
            "Minimal:Use an informative component like atoast,alert, orpopoverfor a set duration.",
            "Significant:A temporary opt-in method must be provided for at least two milestones."
          ]
        },
        {
          "type": "p",
          "text": "Determining how impactful a disruption may be depends on the scope of the change and is subjective. Try to use objective measures to balance observations and opinions to make an educated guess."
        },
        {
          "type": "list",
          "items": [
            "Look at user behavior as an indicator. For example, the volume of page visits or clicks within the navigation sidebar can give you an impression of how many will be affected.",
            "Think about the types of users being affected. For example, a change might not matter to most, but it might require an administrator to make unfamiliar adjustments to their workflow.",
            "Consider how much is changing in the navigation sidebar. For example, moving multiple items, changing the information architecture, or repositioning key functionality disrupts learned behaviors.",
            "How accustomed users are to something can influence their sensitivity to change. For example, removing a button that has been in place for years might be controversial."
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/obfuscation",
      "title": "Obfuscation | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "At GitLab, we take user privacy and security seriously. As part of this we use obfuscation to protect sensitive information in our product. Obfuscation is the practice of making sensitive information difficult to understand or read. This helps prevent items such as email addresses or access tokens from unintentionally being made public."
        },
        {
          "type": "list",
          "items": [
            "Obfuscateemail addresseswhen handling user-submitted information that is not intended to be public. For example, on Service Desk issues accessed by users with Guest access."
          ]
        },
        {
          "type": "p",
          "text": "Tokens are used to authenticate a user and authorize their access to certain resources. If a token is compromised, an attacker could potentially gain unauthorized access to those resources. Obfuscating the token in the UI makes it more difficult for an attacker to find and steal the token, helping to protect the user's account and resources. There are a few reasons why it may be harmful to users if their email address is unintentionally exposed. For example, it could lead to spam and unwanted emails, phishing attempts, or even identity theft. To protect our users' email addresses we use the following pattern for obfuscation:"
        },
        {
          "type": "list",
          "items": [
            "Show the first two letters of the username followed by 5 asterisks*. Duplicate the character followed by 5 asterisks if the username is a single character.",
            "Show the@symbol.",
            "Show the first letter after the \"@\" symbol followed by 5 asterisks*.",
            "Show a..",
            "Show the first letter of the TLD (top level domain) followed by 2 asterisks*."
          ]
        },
        {
          "type": "p",
          "text": "For example, the email addresssee@me.co.ukwould be obfuscated asse*****@m*****.u**andgetsuperfancysupport@paywhatyouwantforit.accountingwould be obfuscated asge*****@p*****.a**. This pattern balances the needs for privacy and useful information by protecting email addresses while still providing a way to differentiate between them. It's important to consider the context in which the email address is being displayed, and make sure the email is obfuscated only when necessary. Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/progressive-disclosure",
      "title": "Progressive disclosure | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Progressive disclosure is an interaction pattern that defers less important information and features to secondary screens. By initially only showing the most important information, users are less likely to become overwhelmed when there is a large amount of content to consume. Using a trigger to reveal an object hidden from view, it can reduce the amount of content on the page at any one time without sacrificing features. When employing progressive disclosure, display key information prominently to reduce cognitive load, and reveal additional information only upon request. Keeping the interface simple in this way allows a user to focus their attention and also helps with new useronboarding. Best practices for progressive disclosure include:"
        },
        {
          "type": "list",
          "items": [
            "Clearly distinguishing between the primary and secondary actions. Determine which actions are most important using a combination of available user research and usage data.",
            "Creating clear trigger actions for secondary content. Use established calls to action such aslinksorbuttonsthat set the expectation for what to do next.",
            "Avoiding multiple levels of disclosure. If an interaction has three or more levels of disclosure, it could be a sign that the feature is too complex."
          ]
        },
        {
          "type": "p",
          "text": "There are a number of ways to gradually reveal content in the UI, including:"
        },
        {
          "type": "list",
          "items": [
            "Adding items to a table by filling out a form in amodalor new page",
            "Displaying information inaccordions",
            "Hiding navigation items behind a hamburger menu",
            "Truncatingcontent and previews",
            "Enabling scrolling for overflow content",
            "Usingskeleton loaderswhile lazy loading a page",
            "Introducing step-by-step flows for complex scenarios"
          ]
        },
        {
          "type": "list",
          "items": [
            "Destructive actions",
            "Feature discovery",
            "Accordion",
            "Button",
            "Modal",
            "Skeleton loader",
            "Progress bar"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Tuesday, October 15, 2024 at 6:57 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/saving-and-feedback",
      "title": "Saving and feedback | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Giving appropriate and timely feedback for user-made changes is vital to making GitLab user-friendly. Saving progresscan be broken down into two main methods:manualwhere the user saves changes manually by clicking on a button, andauto-savewhere changes are saved automatically with a short delay after the user’s last action. Instant feedback, on the other hand, is giving the user immediate positive feedback without waiting for the return of data from the server, expecting that the change they made will be successfully saved. It has a positive effect on the perceived speed of the application. Delayed feedbackcan help ensure a response reduces interruptions and is appropriate. A slower response is better if it leads to more accurate and useful feedback or suggestions. This helps a user satisfy their query or complete a task with less errors or ambiguity. When deciding between the two methods for saving progress, introduce automatic saving of changes if it will improve the user’s experience, else to avoid confusion, default to saving manually. Automatically saving changes can be sensitive and comes with its own set of guidelines. Consider these guidelines when deciding between the two methods. Happens after the user confirms the changes (clicks on a button), ideally without reloading the page, and atoastsaying “Changes saved” should appear to confirm the changes were saved successfully. As we move towards using both methods for saving changes, it makes sense to add a safety measure when using the manual method. The user might just experience auto-saving on another page but on the current page they need to manually save their changes. The users can’t know which of the two methods is being used as there are no indicators in the UI, so it's possible that they make changes and try to navigate off the page (expecting that the changes were saved automatically). In such cases we should track the changes made and whether they were saved or not. If they weren’t saved, amodalshould appear asking: “Your changes are not saved. Do you want to save them now?” and offer “Save changes” as the primary option and “Discard changes and leave page” as the secondary one. We use auto-saving for two things: auto-saving changes in forms andsaving drafts. Auto-saving in forms usually works best when the form is long and the “Save changes” button isn’t visible (pushed below the fold by the content). Auto-saving changes made by the user removes the need for looking for that button and also the need for the button itself. Auto-saving should be applied to each input individually and not to forms as a whole. If the change is triggered by a click event, we auto-save immediately after it happens. If it’s triggered by typing, the auto-save should happen on the blur event of that input field but also 3 seconds after the last key is pressed. To inform the user that the change has been saved, atoastappears. The message is “Saving…” while the saving is in progress, “Change saved” if a single change was saved and “x changes saved” when more than one change was saved (instead of stacking messages up). The toast message should always have the option to undo the recent changes. If a change fails to auto-save, we need to inform the user with a toast saying “Failed to save x changes.” with the option to retry manually. This message should remain visible until the changes are successfully saved. We also need to warn the user if they try to leave the page before the changes are successfully saved, see theSafety measuresection. Never apply to whole forms (example: adding a personal access token needs a name, expiration date, and access scope; it doesn’t make sense to auto-save the token name field individually). The auto-save method should ideally be only used for data that affects the user editing it. Auto-saving shouldn’t be applied to data that might have financial, security, or privacy impacts, example: changing password or changing the confidentiality of an issue. Saving drafts is a form of auto-saving changes. It’s best used for saving progress in cases when users are expected to spend longer time inputting data (example: editing issue description). Automatic saving of progress should be indicated by either of two states, labeled:"
        },
        {
          "type": "list",
          "items": [
            "“Saving…”: the user made changes and there’s background activity in progress to save a draft of these changes. Should be combined with aspinnerto indicate background activity.",
            "“Saved”: no recent changes made, all changes are successfully saved as a draft. Should be combined with a timestamp (example: “Saved just now” or “Saved 1 min ago”)."
          ]
        },
        {
          "type": "p",
          "text": "Indicating the current status reassures the users that their progress won’t be lost. In some cases it might be necessary to clearly state that a “Draft” is being saved to avoid confusion (“Draft saved 1 min ago”). Think twice before applying to data that might have financial, security, or privacy impacts (example: we wouldn't save a draft of the user's new password). Think about how helpful saving drafts is in every case individually. Try to limit this approach for cases when expected content is long and losing any progress would really hurt the user's experience. Instant feedback, also known as optimistic UI or eager execution, simply means that we show the expected result of a successfully saved change even before that change has actually been saved—we anticipate that the change will be saved successfully so we show it in the UI immediately. This has a positive impact on the perceived speed of the application. An example of a case when a successful result is expected is changing the assignee on an issue. The new information should be reflected in the UI immediately but we should also indicate that there's background activity for actually saving the change. To do that, we should combine a change in the new information’s opacity (50% until successfully saved) and the use of aspinner. Once the change is successfully saved, the opacity changes to 100% and the spinner disappears. There is no way of handling errors for such cases, we keep persisting until it gets successfully saved. To avoid loss of progress and changes, this method can be complemented with asafety measuresimilar to the one described above: if changes aren’t successfully changed when the user tries to close the page, show a warning. Delayed feedback, or debouncing, can improve performance and the user experience by reducing interruptions during content entry. For example, it could be helpful to wait a short amount of time before validating an email address. Similarly, a small delay before checking the server for a query match benefits a user who has paused typing. In general, consider using:"
        },
        {
          "type": "list",
          "items": [
            "A faster250msdebounce period for results that will have low performance impact and where the response can feel more responsive. This could be helpful forsearch.",
            "A slower500msdebounce period when the performance impact could be high, or the additional delay benefits the user based on the situation and content being entered. This could be helpful forform validation."
          ]
        },
        {
          "type": "p",
          "text": "These are just suggestions, however, and you may find that you need faster or slower debounce periods in some cases."
        },
        {
          "type": "list",
          "items": ["Buttons", "Forms", "Spinner", "Toast"]
        },
        {
          "type": "p",
          "text": "Last updated at:Monday, October 21, 2024 at 3:15 PM"
        }
      ]
    },
    {
      "url": "https://design.gitlab.com/usability/settings-management",
      "title": "Settings management | Pajamas Design System",
      "content": [
        {
          "type": "p",
          "text": "Settings allow a user to control how the platform's features or capabilities should behave or appear. A user can modify these configurable options to adjust baseline functionality. The Admin area, group, project, and user have dedicated areas to aggregate their settings, whilepermissions and rolesdictate which settings a user can access. When adding a setting to the product, consider these questions:"
        },
        {
          "type": "list",
          "items": [
            "Necessity:Is this control necessary or just nice to have? Remember to strive forconvention over configuration.",
            "Access:Which type of user is responsible for making configuration decisions? Only specificrolescan manage settings. Avoid placing a setting only in the Admin area, as only Administrators on self-managed instances can view it.",
            "Availability:In which namespace should this setting be available? There is a difference infunctionality between user and group namespaces.",
            "Flexibility and control:Is this setting intended to set a default value or enforce a specific configuration? A setting's wording and UI elements should reflect its capability.",
            "Inheritance:Will a child namespace inherit its values from its parent namespace? While there is a standardized model for implementingcascading settings, it does not solve all configuration challenges.",
            "Relationship:How does this setting relate to others? Evaluating where users expect to find it in a workflow or user journey can help identify effective placement."
          ]
        },
        {
          "type": "p",
          "text": "The current settings structure is less than ideal, which means most solutions have drawbacks. The combination of powerful administration features with simple configuration options can result in an overwhelming and complex user experience. It requires a strong familiarity with GitLab's structure and feature set. There is no perfect solution that will address all usability challenges with settings, so a reasonable approach is to examine what already exists for extrapolation. This section outlines patterns that can optimize the user experience of settings within the given constraints. A user should never wonder why they cannot change something."
        },
        {
          "type": "list",
          "items": [
            "If a setting depends on another configuration or is limited to a specific role, then provide an explanation to minimize the need for cross-referencing documentation.",
            "A parent setting should indicate if it can be overridden, which may require adding informative text.",
            "If a child setting is inherited and not changeable, clearly indicate that in the UI. One pattern for indicating this restriction is to disable the child setting and introduce apopoverortooltipto explain why the setting isn't editable."
          ]
        },
        {
          "type": "p",
          "text": "Ideally, the experience of saving a settings selection should be consistent, but not all settings can be treated the same. The impact of a change to a theme color is far less consequential than an adjustment to the default branch. The necessity for aSave changesbutton should match the expected user experience. Full guidelines forsaving progressare described separately, but remember never to use a combination of manual and auto-save within the same form. To make configuration options more discoverable, add links to relevant settings from the feature page."
        },
        {
          "type": "list",
          "items": [
            "Add a cross-link to the top right corner of a page, below the breadcrumbs. This placement sets the expectation that the settings apply only to that specific feature.",
            "Redirect a user to the specific configuration section in the dedicated settings area. For example, a user who selects the settings link on thePackage Registrypage will be redirected to theSettings / Packages and registriessection.",
            "It's recommended to use the icon-onlybutton, with thesettings iconand atooltipstating, \"Configure in settings.\""
          ]
        },
        {
          "type": "p",
          "text": "Proposals to add new setting pages to the navigation sidebar often aim to boost discoverability. To increase discoverability, consider the use of in-pageshortcutsto highlight settings elsewhere. Any changes to the navigation should be justified through anevaluationto prevent bloat. Thoughtfully construct the URL to match the page it maps to since it will be painful to change later. Consider settings as features that introduce capabilities into GitLab, so consistency and logical organization are crucial for effective settings management. Users expect to find settings in predictable locations, so it's important to integrate each one within the broader information architecture."
        },
        {
          "type": "list",
          "items": [
            "Group related options logically and position them where users would intuitively look for them.",
            "Ensure consistent placement of settings across different GitLab areas (such as Admin area, group, project, and user settings).",
            "Align the UI treatment with similar configuration options throughout the platform.",
            "When you introduce new settings or capabilities, adhere to theestablished knowledge structure."
          ]
        },
        {
          "type": "p",
          "text": "It is not an encouraged pattern to link to documentation from settings, because the UI should be self-explanatory. Followwhen to use a link to documentationfor guidance."
        },
        {
          "type": "list",
          "items": [
            "Tooltip",
            "Popover",
            "Alert",
            "Toast",
            "Navigation sidebar",
            "Ui text",
            "Saving and feedback",
            "Progressive disclosure"
          ]
        },
        {
          "type": "p",
          "text": "Last updated at:Wednesday, October 23, 2024 at 4:31 PM"
        }
      ]
    }
  ]
}
