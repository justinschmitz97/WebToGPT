{
  "name": "https://atlassian.design",
  "url": "https://https://atlassian.design",
  "pages": [
    {
      "url": "https://atlassian.design/brand",
      "title": "Voice and tone - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "This updated page replaces duplicate brand and content guidance across the site. We use the Atlassian voice and tone in all of our properties, and product content, from product user interfaces to email, social media, and other channels. Any Atlassian who works with customer-facing communications should follow the voice and tone guidelines: content designers, engineers, product designers, blog contributors, product managers, marketers... pretty much everyone. To help teams do the best work of their lives, we:"
        },
        {
          "type": "list",
          "items": [
            "offer solutions that help people at the moment they need it",
            "simplify complex problems into easy-to-understand pieces",
            "inspire people to try new things"
          ]
        },
        {
          "type": "p",
          "text": "With a familiar tone, clear language, and a solid knowledge of our audience, we craft messages that get teams moving in the right direction, then we get out of their way. The Atlassian voice is based on the Atlassian brand personality traits of:"
        },
        {
          "type": "list",
          "items": ["bold", "optimistic", "practical, with a wink"]
        },
        {
          "type": "p",
          "text": "To provide consistent, friendly, and helpful content for people, use this guidance with our other guidelines:"
        },
        {
          "type": "list",
          "items": [
            "Language and grammar",
            "Inclusive language",
            "Vocabulary (Atlassians only)"
          ]
        },
        {
          "type": "p",
          "text": "When writing with Atlassian's voice, we're part of the team. We're that friend or colleague who is always up on new trends and wants to be helpful and share new wisdom with everyone in a relatable way. We know when it's time to be serious and direct, and when it's time to be more casual. Personality comes across best in the details. The emphasis of each trait should be contextual to the audience and situation. Here are some questions you can ask yourself during your process to assess whether or not youâre leveraging our personality traits well."
        },
        {
          "type": "list",
          "items": [
            "What is the emotional state of the person when encountering your solution during their journey?",
            "How might our personality traits help enhance a moment of celebration?",
            "How might our personality traits help diffuse a moment of frustration or pain?"
          ]
        },
        {
          "type": "p",
          "text": "Motivate teams to do their best work. Offer best practices to get people going in the right direction. Be bold and offer just enough help to get the work started, and then get out of the way. Give accurate information so people can make educated decisions. Understand the person's struggles and desired outcomes and give enough information to let them get where they need to go. Go on the journey with people and highlight the key points that will help them the most, right now. Be in the moment by focusing attention on the important bits first. This gives people confidence in our products. Weave a consistent story across our fabric and be diligent about vocabulary across all messaging by being brand-conscious across products. Create a seamless flow across all the things. Let people know that they can jump in and start working, and can expect a familiar experience across all of the things. Keep teams in the loop about what is happening by informing them of relevant features, products and opportunities for success. Get to the point and be direct. Be concise. Be on the lookout for opportunities and be quick to offer a helping hand. Give the user just enough to know that something awesome is around the corner and then get out of the way. Write clear, accurate, and concise text that makes interfaces more usable and consistent â and builds trust. Write text that is understandable by anyone, anywhere, regardless of their culture or language so that everyone feels they are part of the team. A consistent voice creates greater quality products and better relationships with our customers. But, there is one caveat. There are times when you need to speak to different subsets of people, for instance among different products, and your tone might not be quite the same. That's okay! We've provided enough guidance to help adjust ourtoneto accommodate for:"
        },
        {
          "type": "list",
          "items": [
            "where people are at in their journey",
            "their emotional state",
            "product or property you are writing for"
          ]
        },
        {
          "type": "p",
          "text": "The voice and tone principles:"
        },
        {
          "type": "list",
          "items": [
            "Inform to build trust",
            "Empower to inspire action",
            "Encourage people along the path",
            "Motivate by showing possibilities",
            "Satisfy by meeting expectations",
            "Delight with unexpectedly pleasing experiences"
          ]
        },
        {
          "type": "p",
          "text": "Informby beingopenandclearon what people are experiencing with our products. It's about telling them what they need to know at that moment and nothing more. Be aware of when a user may be new or confused, and tone down the boldness by being more prescriptive. Let people know where they are in their journey and what they are looking at in the product. Write as a knowledgable member of the team. Show up at the right time and be open, humble, and warm â offer direction for the most appropriate next steps and get out of the way. Person is feeling: apprehension, confusion, annoyance, fear, loathing, anger. Examples: new users, evaluators, and when introducing a new concept, feature, or product"
        },
        {
          "type": "list",
          "items": [
            "In product:flags,error messages, andonboarding (spotlight)",
            "Being informative and to build trust"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only):"
        },
        {
          "type": "list",
          "items": [
            "Drive momentum from end-to-end",
            "Build trust in every interaction"
          ]
        },
        {
          "type": "p",
          "text": "Educatewhere we people need it most. Offeropportunitiesto learn at pivotal times toempowerpeople to move in the right direction. Offer best practices and recommendations for next steps while suggesting ways to improve and make decisions. Let people know Atlassian and fellow community members are available to help people make decisions. Write as ifyou are educating. You are a teacher with empathy and an understanding of what itâs like to be in the weeds. You expect your audience to have a basic understanding. Person is feeling: confident, interested, trust, anticipation. Examples: power users, admins, everyday users Design principle (Atlassians only): Guide mastery for greater value"
        },
        {
          "type": "list",
          "items": [
            "In product:onboarding (spotlight),benefits modal, andmodal dialogs",
            "Something requires an action from the person",
            "Educational opportunities",
            "Social opportunities â let them know best practices"
          ]
        },
        {
          "type": "p",
          "text": "Inspireinitialoptimismby providingsupportin the right place. Beconsistentanddependable. Offer waypoints, help, and support if people are feeling confused or frustrated at a point in their journey. This principle is about being human, giving guidance, support, and encouragement along the way. Guide people by revealing information gracefully. Let them know they are on the right path, they arenât alone, and that delivering projects and building teams can be challenging. Write in an upbeat, friendly way. Acknowledge the opportunities in the here-and-now and walk through it with them. Person is feeling: anticipation, unsupported, confused, uncertain Examples: new to Atlassian, evaluators, or when introducing a new concept, feature, or product Design principles (Atlassians only): Guide mastery for greater value"
        },
        {
          "type": "list",
          "items": [
            "In product:information messages,error messages, andsection messages",
            "Something requires an action from the person"
          ]
        },
        {
          "type": "p",
          "text": "Provideincentiveandexcitementfor continued growth. Consider why someone would want to do this. Show the possibilities of what can be accomplished by giving examples of how other people accomplish the same task, or by presenting the ideal state. Describe the end result, giving expert testimony, or offer opportunities for advanced knowledge. Write like an expert. Focus more on the solution than on the problem. Show people the possible benefits. Person is feeling: ambitious, inspired, curious, admiration. Examples: power users, admins, everyday users"
        },
        {
          "type": "list",
          "items": [
            "In product:onboarding (spotlight)andmodal dialogs",
            "Educational opportunities â it's a chance to tell them how other industry leaders do it, give best practices, and tips and tricks"
          ]
        },
        {
          "type": "p",
          "text": "Design principle (Atlassians only): Guide mastery for greater value Give people what they need. Providequick and thoroughanswers, guidance, actions, and instructions. We arenât trying to lead, inspire, motivate, delight, or encourage. Simply tell people what they need to know and get out of the way. All of our content should be practical at a minimum. Write as if you are explaining to your friend how to travel somewhere youâve visited regularly. Person is feeling: overwhelmed and stressed. Examples: people under pressure with deadlines â everyone feels this way sometimes"
        },
        {
          "type": "list",
          "items": [
            "Whenever we can",
            "In product:warning messages,information messages, anderror messages"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only):"
        },
        {
          "type": "list",
          "items": [
            "Build trust in every interaction",
            "Connect people to collaborate better",
            "Match purpose and feel familiar"
          ]
        },
        {
          "type": "p",
          "text": "âWinkâ where appropriate. We deliver appropriatedelightâ celebratesuccessorprogressonce weâve builttrust. But donât overdo it. These are little flourishes: we give flowers, not puppies. Pay particular attention to peopleâs state of mind. Think about the timing, and how frequently they will see this. Person is feeling: successful, joy, pride, relief. Examples:evaluators, power users, during social interactions"
        },
        {
          "type": "list",
          "items": [
            "In product:success messagesandmodal dialogs",
            "Social interactions and while introducing new experiences"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only): Drive momentum from end-to-end"
        }
      ]
    },
    {
      "url": "https://atlassian.design/brand/personality",
      "title": "Voice and tone - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "This updated page replaces duplicate brand and content guidance across the site. We use the Atlassian voice and tone in all of our properties, and product content, from product user interfaces to email, social media, and other channels. Any Atlassian who works with customer-facing communications should follow the voice and tone guidelines: content designers, engineers, product designers, blog contributors, product managers, marketers... pretty much everyone. To help teams do the best work of their lives, we:"
        },
        {
          "type": "list",
          "items": [
            "offer solutions that help people at the moment they need it",
            "simplify complex problems into easy-to-understand pieces",
            "inspire people to try new things"
          ]
        },
        {
          "type": "p",
          "text": "With a familiar tone, clear language, and a solid knowledge of our audience, we craft messages that get teams moving in the right direction, then we get out of their way. The Atlassian voice is based on the Atlassian brand personality traits of:"
        },
        {
          "type": "list",
          "items": ["bold", "optimistic", "practical, with a wink"]
        },
        {
          "type": "p",
          "text": "To provide consistent, friendly, and helpful content for people, use this guidance with our other guidelines:"
        },
        {
          "type": "list",
          "items": [
            "Language and grammar",
            "Inclusive language",
            "Vocabulary (Atlassians only)"
          ]
        },
        {
          "type": "p",
          "text": "When writing with Atlassian's voice, we're part of the team. We're that friend or colleague who is always up on new trends and wants to be helpful and share new wisdom with everyone in a relatable way. We know when it's time to be serious and direct, and when it's time to be more casual. Personality comes across best in the details. The emphasis of each trait should be contextual to the audience and situation. Here are some questions you can ask yourself during your process to assess whether or not youâre leveraging our personality traits well."
        },
        {
          "type": "list",
          "items": [
            "What is the emotional state of the person when encountering your solution during their journey?",
            "How might our personality traits help enhance a moment of celebration?",
            "How might our personality traits help diffuse a moment of frustration or pain?"
          ]
        },
        {
          "type": "p",
          "text": "Motivate teams to do their best work. Offer best practices to get people going in the right direction. Be bold and offer just enough help to get the work started, and then get out of the way. Give accurate information so people can make educated decisions. Understand the person's struggles and desired outcomes and give enough information to let them get where they need to go. Go on the journey with people and highlight the key points that will help them the most, right now. Be in the moment by focusing attention on the important bits first. This gives people confidence in our products. Weave a consistent story across our fabric and be diligent about vocabulary across all messaging by being brand-conscious across products. Create a seamless flow across all the things. Let people know that they can jump in and start working, and can expect a familiar experience across all of the things. Keep teams in the loop about what is happening by informing them of relevant features, products and opportunities for success. Get to the point and be direct. Be concise. Be on the lookout for opportunities and be quick to offer a helping hand. Give the user just enough to know that something awesome is around the corner and then get out of the way. Write clear, accurate, and concise text that makes interfaces more usable and consistent â and builds trust. Write text that is understandable by anyone, anywhere, regardless of their culture or language so that everyone feels they are part of the team. A consistent voice creates greater quality products and better relationships with our customers. But, there is one caveat. There are times when you need to speak to different subsets of people, for instance among different products, and your tone might not be quite the same. That's okay! We've provided enough guidance to help adjust ourtoneto accommodate for:"
        },
        {
          "type": "list",
          "items": [
            "where people are at in their journey",
            "their emotional state",
            "product or property you are writing for"
          ]
        },
        {
          "type": "p",
          "text": "The voice and tone principles:"
        },
        {
          "type": "list",
          "items": [
            "Inform to build trust",
            "Empower to inspire action",
            "Encourage people along the path",
            "Motivate by showing possibilities",
            "Satisfy by meeting expectations",
            "Delight with unexpectedly pleasing experiences"
          ]
        },
        {
          "type": "p",
          "text": "Informby beingopenandclearon what people are experiencing with our products. It's about telling them what they need to know at that moment and nothing more. Be aware of when a user may be new or confused, and tone down the boldness by being more prescriptive. Let people know where they are in their journey and what they are looking at in the product. Write as a knowledgable member of the team. Show up at the right time and be open, humble, and warm â offer direction for the most appropriate next steps and get out of the way. Person is feeling: apprehension, confusion, annoyance, fear, loathing, anger. Examples: new users, evaluators, and when introducing a new concept, feature, or product"
        },
        {
          "type": "list",
          "items": [
            "In product:flags,error messages, andonboarding (spotlight)",
            "Being informative and to build trust"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only):"
        },
        {
          "type": "list",
          "items": [
            "Drive momentum from end-to-end",
            "Build trust in every interaction"
          ]
        },
        {
          "type": "p",
          "text": "Educatewhere we people need it most. Offeropportunitiesto learn at pivotal times toempowerpeople to move in the right direction. Offer best practices and recommendations for next steps while suggesting ways to improve and make decisions. Let people know Atlassian and fellow community members are available to help people make decisions. Write as ifyou are educating. You are a teacher with empathy and an understanding of what itâs like to be in the weeds. You expect your audience to have a basic understanding. Person is feeling: confident, interested, trust, anticipation. Examples: power users, admins, everyday users Design principle (Atlassians only): Guide mastery for greater value"
        },
        {
          "type": "list",
          "items": [
            "In product:onboarding (spotlight),benefits modal, andmodal dialogs",
            "Something requires an action from the person",
            "Educational opportunities",
            "Social opportunities â let them know best practices"
          ]
        },
        {
          "type": "p",
          "text": "Inspireinitialoptimismby providingsupportin the right place. Beconsistentanddependable. Offer waypoints, help, and support if people are feeling confused or frustrated at a point in their journey. This principle is about being human, giving guidance, support, and encouragement along the way. Guide people by revealing information gracefully. Let them know they are on the right path, they arenât alone, and that delivering projects and building teams can be challenging. Write in an upbeat, friendly way. Acknowledge the opportunities in the here-and-now and walk through it with them. Person is feeling: anticipation, unsupported, confused, uncertain Examples: new to Atlassian, evaluators, or when introducing a new concept, feature, or product Design principles (Atlassians only): Guide mastery for greater value"
        },
        {
          "type": "list",
          "items": [
            "In product:information messages,error messages, andsection messages",
            "Something requires an action from the person"
          ]
        },
        {
          "type": "p",
          "text": "Provideincentiveandexcitementfor continued growth. Consider why someone would want to do this. Show the possibilities of what can be accomplished by giving examples of how other people accomplish the same task, or by presenting the ideal state. Describe the end result, giving expert testimony, or offer opportunities for advanced knowledge. Write like an expert. Focus more on the solution than on the problem. Show people the possible benefits. Person is feeling: ambitious, inspired, curious, admiration. Examples: power users, admins, everyday users"
        },
        {
          "type": "list",
          "items": [
            "In product:onboarding (spotlight)andmodal dialogs",
            "Educational opportunities â it's a chance to tell them how other industry leaders do it, give best practices, and tips and tricks"
          ]
        },
        {
          "type": "p",
          "text": "Design principle (Atlassians only): Guide mastery for greater value Give people what they need. Providequick and thoroughanswers, guidance, actions, and instructions. We arenât trying to lead, inspire, motivate, delight, or encourage. Simply tell people what they need to know and get out of the way. All of our content should be practical at a minimum. Write as if you are explaining to your friend how to travel somewhere youâve visited regularly. Person is feeling: overwhelmed and stressed. Examples: people under pressure with deadlines â everyone feels this way sometimes"
        },
        {
          "type": "list",
          "items": [
            "Whenever we can",
            "In product:warning messages,information messages, anderror messages"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only):"
        },
        {
          "type": "list",
          "items": [
            "Build trust in every interaction",
            "Connect people to collaborate better",
            "Match purpose and feel familiar"
          ]
        },
        {
          "type": "p",
          "text": "âWinkâ where appropriate. We deliver appropriatedelightâ celebratesuccessorprogressonce weâve builttrust. But donât overdo it. These are little flourishes: we give flowers, not puppies. Pay particular attention to peopleâs state of mind. Think about the timing, and how frequently they will see this. Person is feeling: successful, joy, pride, relief. Examples:evaluators, power users, during social interactions"
        },
        {
          "type": "list",
          "items": [
            "In product:success messagesandmodal dialogs",
            "Social interactions and while introducing new experiences"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only): Drive momentum from end-to-end"
        }
      ]
    },
    {
      "url": "https://atlassian.design/components",
      "title": "Overview - Brand - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/app-provider",
      "title": "Atlassian navigation - Atlassian navigation - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "New and ready to use. We'll provide comms and support for any major changes."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/atlassian-navigation",
      "title": "No Title",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/avatar",
      "title": "Avatar - Avatar - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/avatar-group",
      "title": "Avatar group - Avatar group - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/avatar/avatar-item",
      "title": "Avatar item - Avatar item - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/avatar/avatar-skeleton",
      "title": "Avatar skeleton - Avatar skeleton - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/badge",
      "title": "Badge - Badge - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/banner",
      "title": "Banner - Banner - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/blanket",
      "title": "Blanket - Blanket - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/breadcrumbs",
      "title": "Breadcrumbs - Breadcrumbs - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/button",
      "title": "Button - Button - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/button/button-group",
      "title": "Button group - Button group - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/button/button-legacy",
      "title": "Button (legacy) - Button legacy - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Legacy buttons will soon be deprecated. Please use the newbutton,icon button,link button, orlink icon button. Migrate from legacy buttons using our codemod."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/button/icon-button",
      "title": "Icon button - Icon button - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/button/link-button",
      "title": "Link button - Link button - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/button/link-icon-button",
      "title": "Link icon button - Link icon button - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/button/split-button",
      "title": "Split button - Split button - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/calendar",
      "title": "Calendar - Calendar - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/checkbox",
      "title": "Checkbox - Checkbox - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/code",
      "title": "Code - Code - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/code/code-block",
      "title": "Code block - Code block - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/comment",
      "title": "Comment - Comment - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/css",
      "title": "CSS - Css - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/css-reset",
      "title": "CSS reset - Css reset - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/datetime-picker",
      "title": "Date time picker - Datetime picker - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/datetime-picker/date-picker",
      "title": "Date picker - Date picker - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/datetime-picker/time-picker",
      "title": "Time picker - Time picker - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/drawer",
      "title": "Drawer - Drawer - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/dropdown-menu",
      "title": "Dropdown menu - Dropdown menu - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/dropdown-menu/dropdown-item",
      "title": "Dropdown item - Dropdown item - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/dropdown-menu/dropdown-item-checkbox",
      "title": "Dropdown item checkbox - Dropdown item checkbox - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/dropdown-menu/dropdown-item-radio",
      "title": "Dropdown item radio - Dropdown item radio - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/dynamic-table",
      "title": "Dynamic table - Dynamic table - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/empty-state",
      "title": "Empty state - Empty state - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/focus-ring",
      "title": "Focus ring - Focus ring - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/form",
      "title": "Form - Form - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/grid",
      "title": "Layout grid - Grid - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "This package is deprecated. Usegrid primitive."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/heading",
      "title": "Heading - Heading - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "New and ready to use. We'll provide comms and support for any major changes."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/icon",
      "title": "Icon - Icon - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "These are new icons that will be released as part of Atlassian's visual refresh. Use the legacy icons for current product experiences."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/icon-object",
      "title": "Icon object - Icon object - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/icon/custom-icon",
      "title": "Custom icon (legacy) - Custom icon - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/icon/custom-svg",
      "title": "Custom SVG - Custom svg - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/icon/icon-legacy",
      "title": "Icon (legacy) - Icon legacy - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/icon/icon-tile",
      "title": "Icon tile - Icon tile - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "This is an experiment. We may make frequent breaking changes with limited notice. We don't recommend using this without support from our team."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/image",
      "title": "Image - Image - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "New and ready to use. We'll provide comms and support for any major changes."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/inline-dialog",
      "title": "Inline dialog - Inline dialog - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "We are planning on deprecating Inline dialog. We recommend using the Popup component instead."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/inline-edit",
      "title": "Inline edit - Inline edit - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/inline-edit/inline-editable-textfield",
      "title": "Inline editable textfield - Inline editable textfield - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/inline-message",
      "title": "Inline message - Inline message - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/link",
      "title": "Link - Link - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/logo",
      "title": "Logo - Logo - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/lozenge",
      "title": "Lozenge - Lozenge - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/menu",
      "title": "Menu - Menu - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/modal-dialog",
      "title": "Modal dialog - Modal dialog - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/motion",
      "title": "Motion - Motion - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/motion/accessibility",
      "title": "Motion - Accessibility - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/motion/entering-motions",
      "title": "Motion - Entering motions - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/motion/resizing-motions",
      "title": "Motion - Resizing motions - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/motion/variables",
      "title": "Motion - Variables - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/onboarding",
      "title": "Onboarding (spotlight) - Onboarding - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/onboarding/benefits-modal",
      "title": "Benefits modal - Benefits modal - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/onboarding/spotlight-card",
      "title": "Spotlight card - Spotlight card - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/page",
      "title": "Page - Page - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "We are planning on deprecating Page component. We recommend using the Page layout component instead."
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/page-header",
      "title": "Page header - Page header - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/page-layout",
      "title": "Page layout - Page layout - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/page/grid",
      "title": "Grid - Grid - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/page/grid-column",
      "title": "Grid column - Grid column - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/pagination",
      "title": "Pagination - Pagination - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/popper",
      "title": "Popper - Popper - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/popup",
      "title": "Popup - Popup - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/portal",
      "title": "Portal - Portal - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/anchor",
      "title": "Anchor - Anchor - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/bleed",
      "title": "Bleed - Bleed - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/box",
      "title": "Box - Box - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/flex",
      "title": "Flex - Flex - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/grid",
      "title": "Grid - Grid - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/inline",
      "title": "Inline - Inline - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/overview",
      "title": "Primitives - index - Components - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Primitives are a new type of component for layouts, styling, and the placement of elements. They act\nas building blocks to compose different parts of the user experience, from the smallest design\ndecisions (for example, the spacing around an icon) to larger layout decisions (for example, how a\npage is structured). Primitives are powered by design tokens and make it easier to apply design decisions. This reduces\ncognitive overhead, improves productivity and prevents accidents or mistakes. Primitives are used together to compose complex designs not otherwise implemented directly in the\nDesign System. Currently, three layout primitive components are available:"
        },
        {
          "type": "list",
          "items": [
            "in a container (seebox)",
            "horizontally (seeinline)",
            "vertically (seestack)"
          ]
        },
        {
          "type": "p",
          "text": "Additional layouts not well-expressed by these core primitives can also be composed using:"
        },
        {
          "type": "list",
          "items": [
            "CSS Flexbox (seeflex)",
            "CSS Grid (seegrid)",
            "Bleed (seebleed)"
          ]
        },
        {
          "type": "p",
          "text": "Interactive primitives can be used to build:"
        },
        {
          "type": "list",
          "items": ["buttons (seepressable)", "links (seeanchor)"]
        },
        {
          "type": "p",
          "text": "To install primitive components, add @atlaskit/primitives as a dependency on your project:"
        },
        {
          "type": "code",
          "code": "$ yarn add @atlaskit/primitives"
        },
        {
          "type": "p",
          "text": "Use primitives for composing layouts. Primitives are not currently available in Figma, so the first\nstep in implementing primitive components is identifying where they might fit in a given design.\nThis involves breaking down a design into its core layout components to as granular level as is\nuseful. You might like to think first about breaking down a page intoBoxcontainers, identifying larger\npieces of a design that function in a similar manner or fulfill a singular purpose in a layout and\ngrouping them together under aBox. The behavior within and around these boxes can then be broken down into their horizontalInlineand verticalStackcomponents."
        },
        {
          "type": "list",
          "items": [
            "Box",
            "Inline",
            "Stack",
            "Grid",
            "Bleed",
            "Flex",
            "Pressable",
            "Anchor",
            "xcss"
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/components/primitives/pressable",
      "title": "Pressable - Pressable - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/responsive",
      "title": "Responsive - Responsive - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/responsive/breakpoints",
      "title": "Breakpoints - Breakpoints - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/responsive/hide",
      "title": "Hide - Hide - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/responsive/show",
      "title": "Show - Show - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/stack",
      "title": "Stack - Stack - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/text",
      "title": "XCSS - Xcss - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/primitives/xcss",
      "title": "No Title",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/progress-bar",
      "title": "Success progress bar - Success progress bar - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/progress-bar/success-progress-bar",
      "title": "No Title",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/progress-bar/transparent-progress-bar",
      "title": "Transparent progress bar - Transparent progress bar - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/progress-indicator",
      "title": "Progress indicator - Progress indicator - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/progress-tracker",
      "title": "Progress tracker - Progress tracker - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/radio",
      "title": "Radio - Radio - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/radio/radio-group",
      "title": "Radio group - Radio group - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/range",
      "title": "Range - Range - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/section-message",
      "title": "Section message - Section message - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select",
      "title": "Select - Select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/async-creatable-select",
      "title": "Async creatable select - Async creatable select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/async-select",
      "title": "Async select - Async select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/checkbox-select",
      "title": "Checkbox select - Checkbox select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/country-select",
      "title": "Country select - Country select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/creatable-select",
      "title": "Creatable select - Creatable select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/popup-select",
      "title": "Popup select - Popup select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/select/radio-select",
      "title": "Radio select - Radio select - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/side-navigation",
      "title": "Side navigation - Side navigation - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/spinner",
      "title": "Spinner - Spinner - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/storybook-addon-design-system",
      "title": "Storybook addon - Storybook addon design system - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/stylelint-design-system",
      "title": "Stylelint plugin - Stylelint design system - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/table-tree",
      "title": "Table tree - Table tree - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/tabs",
      "title": "Tabs - Tabs - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/tag",
      "title": "Tag - Tag - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/tag-group",
      "title": "Tag group - Tag group - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/textarea",
      "title": "Text area - Textarea - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/textfield",
      "title": "Text field - Textfield - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/toggle",
      "title": "Toggle - Toggle - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/tokens",
      "title": "Design tokens - Tokens - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/tooltip",
      "title": "Tooltip - Tooltip - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/components/visually-hidden",
      "title": "Visually hidden - Visually hidden - Components - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/content",
      "title": "Overview - Foundations - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/content/inclusive-writing",
      "title": "Inclusive language - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Inclusive language isnât about following a list of good and bad words. Itâs about taking an approach to your writing that avoids assumptions, stereotypes, and treats people with respect. Our products are for all kinds of people. The words we use should help them have a great experience. Consider how your language is helping or harming people. Be inclusive by using plain language. Remove jargon, metaphors, and idioms. Simple wording is proven to help people complete their tasks faster and with higher success rates. It also ensures that you arenât excluding people by using words that are specific to your context. Rely on the expertise of people who belong to the groups youâre writing about. You can do this by reading resources put out by advocacy groups, or consulting with people from diverse communities. Never assume people from a diverse community want to educate or give feedback â always ask for permission first. When you need to describe a group of people, use clear language that aligns with how people describe themselves. When youâre not sure, always use person-first language. This language centers the person, rather than their difference. For example, âpeople with disabilitiesâ, rather than âdisabled peopleâ In some circumstances people prefer to use identity-first language to represent themselves, such as in the Deaf community. You can reduce inaccurate assumptions or stereotypes by improving the way you describe peopleâs differences. For example: Donât modify phrases to make differences sound positive. Words like âdifferently abledâ or âhandi-capableâ are patronizing, and donât fit with the full diversity of human experiences. Avoiding describing peopleâs differences can reinforce the prejudices of society. Describing race, ethnicity, disability, age, class, gender, and sexuality isnât a negative thing, unless these descriptions are being used in discriminatory ways. For example, only use the phrase âpeople of colorâ when you donât have enough information to be more specific. Microaggressions are actions that arenât intentionally aggressive, but contribute towards an environment that excludes people towards people who belong to marginalized communities. This makes people feel excluded, fatigued, and unseen. In writing, microaggressions are words that are associated with stereotypes, or phrases that have a negative origin, like âlong time no seeâ â a phrase historically used to make fun of people who spoke limited English, which has now slipped into casual use. These words may seem inoffensive to some people. Remember that our goal is to do more than just avoid causing offence. We want to create products that include all people. Metaphors and idioms are non-literal phrases people use in regular speech. Metaphors are when people compare something to something else (such as âthey were like a fish out of waterâ), while idioms are phrases where the meaning isnât conveyed by any of the words (such as âbetween a rock and a hard placeâ). Idioms are only understood from cultural familiarity with the phrase, which makes them unhelpful if youâre writing for a global audience. Some metaphors and idioms invoke histories of violence, patriarchy, or colonization. Other metaphors and idioms can confuse people outside of the group, country, or culture the phrase originates from. This creates an environment that includes some people more than others. When youâre writing content for a wide audience, be literal. Donât rely on harmful or confusing phrases. The context and identity of the person using a word or phrase can change whether a word or phrase is helpful or harmful. Sometimes words are used for their original purpose, sometimes they are appropriated, and sometimes words are reclaimed. Appropriation is when words are used outside of their original context in ways that are hurtful or minimizing to a group of people. Reclamation is when a group starts using language that people previously used to harm them, with the intention to make it a positive word or phrase. For example, the word âqueerâ was previously used as a homophobic term, but now many people describe themselves with the word âqueerâ. Donât use these words if you donât belong to the group the word originates from. Donât use phrasing that makes assumptions about how people experience your product. For example, by making claims about how easy your experience is. Designers avoid some words related to disabilities because theyâre trying to be inclusive. These words aren't microaggressions because words that relate to disabilities arenât negative words. You only need to avoid using them in a negative context. You can use them in your product experiences if they help make things clear. When referring to a person, use the pronouns they tell you to use. When referring to a person or a group of people you donât know, use they/them pronouns. This makes your product experience more gender inclusive. When you gather data about people, remember that pre-defined categories donât accurately reflect the diversity of our world. Form fields can prevent people from using software if they're unable to fit into the schemas weâve defined for them. If you need to collect information about peopleâs identities, give people the option to choose not to answer, or to give a self-defined answer. When gathering information about names, use a âFull nameâ field instead of separating names by first name, last name, and salutation. Avoid setting any particular group of people as the default option. This implies that other groups are not the norm, not common, or forces them to navigate and configure things more than others. One way to avoid this is by not asking for more information than necessary. Often detailed personal information isnât relevant to our products, so ask yourself if you really need people to identify or group themselves before building this into products. It can be tempting to keep visual labels short, and hide the descriptive information behind anaria-label. Weâre moving away from this approach, because descriptive language also improves the experience for people who donât use assistive technology. It can be tempting to use the example text for form fields or search boxes to add fun and delight to your product or platform. If your example includes an example company name or task, make sure that these are accurate enough to convey what the example is showing. If images provide information, always include alternative text (âalt textâ). When youâre writing alternative text, consider how that text will change the screen reader experience. If youâre working on a product experience with elements that are very repetitive, like iconography, donât make alternative text too wordy as this will make the experience worse for people who use assistive technology. For example: If youâre using the same visuals in multiple places, make sure that you use the same alt text every time it appears. The design system helps with this by providing label guidelines for components likemodal dialogsandspinners. Language is changing all the time, so we donât maintain a list of terms to use or avoid. Use resources like theAPA Inclusive Language GuideorAP Stylebookto learn about specific terms. Â These guidelines are here to help you use inclusive language when designing products and platforms. You can access thearchived global inclusive language guidelines (Atlassians only), these are deprecated and will be replaced in the future."
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/language-and-grammar",
      "title": "Language and grammar - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Our internal word list and glossary has changed locations. Atlassian employees, usego/vocabfor the full list. Donât use internal abbreviations in customer-facing copy. Donât use apostrophes for plural abbreviations. Donât use i.e. or e.g. They are not localization friendly."
        },
        {
          "type": "list",
          "items": [
            "Yes:Jira Service Desk, Â jira.atlassian.com,Â developer.atlassian.com",
            "No:JSD, JAC, DAC, CDâs, 1980âs, i.e., e.g."
          ]
        },
        {
          "type": "list",
          "items": [
            "Yes:Administrators control user access to Atlassian Cloud applications.",
            "No:User access to Atlassian Cloud applications is controlled by administrators."
          ]
        },
        {
          "type": "p",
          "text": "Use bold text to draw the readerâs eye to key phrases and statements in your email and web content. For product copy or help articles, use bold for static UI elements like menu items, buttons, screen headings, and anything else you want to call attention to. If you need to bold an element but the UI doesnât support it, for example, in a dialog header or a UI message, you can use italics instead. Use italics for fields that might change, like a page name. See italics for more guidelines."
        },
        {
          "type": "list",
          "items": [
            "Yes:Go toGeneral Configuration>User Macros.",
            "No:Go tothe settings page and select Configuration."
          ]
        },
        {
          "type": "p",
          "text": "Use sentence case in all titles, headings, menu items, labels, and buttons."
        },
        {
          "type": "list",
          "items": [
            "Yes:This is the new Jira experience!",
            "No:This Is The New JIRA Experience!",
            "Double no:tHiS iS tHe nEw JIRA eXpErIeNcE!"
          ]
        },
        {
          "type": "p",
          "text": "Use colons to introduce a bulleted list or series of steps. Donât use colons at the end of headings. In keeping with our more conversational, friendly voice, use contractions. Use curly apostrophes wherever possible in UI copy by typingoption+shift+]on a Mac."
        },
        {
          "type": "list",
          "items": [
            "Yes:Canât, donât, itâs",
            "No:Cannot, can not, it is, it's (not curly)"
          ]
        },
        {
          "type": "p",
          "text": "Use em dashes sparingly to indicate an abrupt or dramatic change in a sentence â like this. lf the break happens in the middle of a sentence â like this â use em dashes on either side of the phrase. Em dashes can help avoid confusion when the phrase being set apart contains several commas, such as a mid-sentence list. In general, though, try to keep sentences as short and simple as possible to avoid excessively complex punctuation. Use spaces on either side of an em dash. Use option-shift-hyphen to make an em dash on a Mac. For ranges of numbers, use a hyphen with no spaces â not an em or en dash."
        },
        {
          "type": "list",
          "items": [
            "Yes:The newly released Jira 6 â our best Jira yet â will be available next week.",
            "No:The newly released Jira 6âour best Jira yetâwill be available next week.",
            "Yes:He said his friends â Mike, Charlie, and Scott â would be arriving late. They should arrive anywhere from 2-4.",
            "No:He said his friends - Mike, Charlie, and Scott - would be arriving late. They should arrive anywhere from 2â4."
          ]
        },
        {
          "type": "p",
          "text": "SeeDate and time guidelines. Quote with curly quotes, not italics. SeeQuotation marksfor details."
        },
        {
          "type": "list",
          "items": [
            "Yes:âJira Software is the best software ever!â said Charlie.",
            "No:Jira Software is just ok.said Charlie."
          ]
        },
        {
          "type": "p",
          "text": "Donât put spaces in-between the periods in an ellipsis. When using an ellipsis to omit part of a long quote, include spaces on either side of the ellipsis ( ... )."
        },
        {
          "type": "list",
          "items": [
            "Yes: âFrom medicine and space travel, to disaster response ... our products help teams all over the planet advance humanity through the power of software.âAtlassian: Discover our story."
          ]
        },
        {
          "type": "p",
          "text": "Ellipses sometimes show that text was cut off or truncated when a message doesnât fit in the given space. Avoid truncation whenever possible using these techniques:"
        },
        {
          "type": "list",
          "items": [
            "Shorten UI messages and front-load important information.",
            "Wrap the text or use other techniques instead of truncating."
          ]
        },
        {
          "type": "p",
          "text": "Test your designs using multiple screen widths and magnification levels to ensure it doesnât truncate. When you canât avoid truncation, provide an alternative way to view the full text for accessibility and usability. In Atlassian Design System components that truncate, the ellipsis appears without any space next to the last visible character (for example, Sign up for...)."
        },
        {
          "type": "list",
          "items": ["Yes: This message is truncaâ¦"]
        },
        {
          "type": "p",
          "text": "Avoid exclamation marks! They should only be used for exciting or new things! At most, there should only be one exclamation mark per page! When possible, avoid gendered pronouns. If you canât, thenÂtheyÂ orÂtheirÂ is preferable toÂhis or herÂ orÂhe or she."
        },
        {
          "type": "list",
          "items": [
            "Yes:Ask your admin to add you.",
            "Yes:Ask your admin if they can add you.",
            "No:Ask your admin if he or she can add you."
          ]
        },
        {
          "type": "p",
          "text": "Use hyphens to form a single idea from multiple words. In general, only use hyphens when they help to avoid confusion or ambiguity. When two or more words function together as a descriptor or adjective (also known as a compound modifier), we typically hyphenate those words if they precede the noun they describe, but donât hyphenate if they come after the noun. There are exceptions to this rule, such as with the word very or any adverbs ending in -ly."
        },
        {
          "type": "list",
          "items": [
            "Yes:Fast-moving trucks, ice-cold drinks, dog-friendly hotels. The hotel is dog friendly.",
            "No:Very-interesting topics, poorly-worded sentences."
          ]
        },
        {
          "type": "p",
          "text": "Most prefixes donât require hyphens to be understood. Only use a hyphen if not doing so causes confusion or ambiguity. Consult a modern dictionary to be sure."
        },
        {
          "type": "list",
          "items": [
            "Yes:Autocorrect, coworker, and preexisting are all fine without a hyphen. Recreating in a park, however, is different from re-creating a page. I could resign from my job one day, then re-sign my contract the next.",
            "No:Avoid creating nonsense words by when using prefixes without hyphens, such asnonlifein nonlife-threatening."
          ]
        },
        {
          "type": "p",
          "text": "Use hyphens for number ranges with no spaces on either side. For example,see rows 1-4 in the table. There are always exceptions, and some commonly hyphenated words can become closed over time (remember e-mail?). CheckVocabularyfor more specific hyphenated word guidance. Use italics for emphasis, citations, or defining a term. You can also use it for UI elements that might change, like a field name or user input. You can also use italics in places where you would normally use bold but the UI doesnât support it. For example, in a dialog header or UI message. Donât use italics if the item is also a hyperlink. See bold for more information about how to format UI elements."
        },
        {
          "type": "list",
          "items": [
            "Yes:A JIRA workflow is the set ofstatusesandtransitionsthat an issue goes through during its lifecycle.",
            "Yes:According to the 2008IT Unpluggedreport, IT is really unplugged!",
            "Yes: For example, if you create a metric calledTime to resolution, other projects can create metrics with that name.",
            "No:To learn more, see the2008 IT Unplugged report",
            "No: In your project, selectSettings>Request types"
          ]
        },
        {
          "type": "p",
          "text": "Use lists to draw the readerâs eye and make items easier to scan and follow. Use proper punctuation in your items if they are complete sentences. Try to limit lists to six items or less. If you need more items, see if you can split the list into multiple lists. Use bulleted lists for options, or a list where the order of the items doesnât matter. Phrase each item in a parallel way. If the bullets complete the introductory sentence, start the fragments with lowercase and skip the periods. Yes: Due to security concerns, all employees are now required to:"
        },
        {
          "type": "list",
          "items": [
            "wear an identification tag in the building",
            "identify themselves when answering the phone",
            "use their identification tag to enter or leave before 7 AM and after 6 PM",
            "alert security if a suspicious package is found"
          ]
        },
        {
          "type": "p",
          "text": "No: Due to security concerns, all employees are now required to follow the regulations below:"
        },
        {
          "type": "list",
          "items": [
            "Wear an identification tag when in the company building",
            "Employees who answer the phone must first identify themselves",
            "Entering the building before 7 AM and after 6 PM requires that employees use their identification tag to enter or leave the building",
            "When opening all packages, alert security if the package is suspicious."
          ]
        },
        {
          "type": "p",
          "text": "Use numbered lists for tasks, or lists where the order of the items matters. Unlike with bulleted lists, always capitalize the first word in each item and end the item with a period. You donât need to create a list for tasks that have two or fewer steps. To add a new user macro:"
        },
        {
          "type": "list",
          "items": [
            "Go to Settings >General Configuration>User Macros.",
            "ChooseCreate a User Macro.",
            "Enter the macro details."
          ]
        },
        {
          "type": "p",
          "text": "Use monospaced font for names of a file or directory. It is mostly used in administrator and developer docs. For example: The location of the Home directory is stored in a configuration file calledconfluence-init.propertieswhich is located in theconfluence/WEB-INF/classes directoryin your Confluence Installation directory. Write out numbers one through ten. After ten, you can use 11, 12, 108, and so on. Canât remember if itâs filesystem or file system? Check out ourVocabulary. Use the Oxford or serial comma to offset the final item in a list."
        },
        {
          "type": "list",
          "items": [
            "Yes:We use sentence case in all titles, headings, menu items, and buttons.",
            "No:We use sentence case in all titles, headings, menu items and buttons."
          ]
        },
        {
          "type": "p",
          "text": "Use a period at the end of complete sentences, including in the description text of products, messages, and notifications. Add only one space after a period. This includes sentences where the link is part of the sentence. Donât hyperlink the period."
        },
        {
          "type": "list",
          "items": [
            "Yes:Atlassianâs work is guided byfive core values.",
            "No:Atlassianâs work is guided byfive core values"
          ]
        },
        {
          "type": "p",
          "text": "Donât use periods in headers, titles, tooltips, field descriptions, and menu names, even if they are full sentences. Only use periods in a bulleted list if the list item is a complete sentence. Donât add a period at the end of a list of fragments. Use âs to show possession, even if the word ends in s. Use curly apostrophes by typingoption+shift+]on Mac."
        },
        {
          "type": "list",
          "items": [
            "Yes: Jamesâs book",
            "Yes: a weekâs time",
            "No: James' book"
          ]
        },
        {
          "type": "p",
          "text": "In most cases, second person is best. It fits Atlassianâs casual, conversational tone to refer to the reader directly withyou. Exceptions can be made for specific types of writing, such as whitepapers and press releases. Not sure whether itâsÂMy projectsÂ orÂYour projects? For best results, avoid usingÂmine,Âmy, orÂyourÂ in UI copy. If you need to useÂmine,Âmy, orÂyour, the rule of thumb is to think of the UI as a conversation between the system and the user. If the system is presenting information to the user, such as in a dialog box, thenÂyourÂ is more appropriate, because itâs like saying âHere are your thingsâ, or âWhat would you like to do?â\nIf the user is performing an action, such as clicking a button or a link, thenÂmine/myÂ is more appropriate, because itâs like saying âShow me my stuff!â"
        },
        {
          "type": "list",
          "items": [
            "Yes: Bitbucket will change your life.",
            "Yes: Your team will love using pull requests in Bitbucket.",
            "No: Teams love using pull requests in Bitbucket."
          ]
        },
        {
          "type": "p",
          "text": "Use double quotes (ââ) for direct quotes. For UI elements, page titles, and other objects, use bold or italicized text as appropriate. Use curly quotes in any UI or body copy, unless you're writing in code or there is a semantic reason to use straight quotes. To create curly quotation marks, useoption+[for opening andoption+shift+[for closing quotation marks on a Mac. Punctuation goes inside the quotation marks."
        },
        {
          "type": "list",
          "items": [
            "Yes:âWe have big things planned for the coming year,â said Mike and Scott.",
            "Yes: He called quokkas âthe cutest animal ever.â",
            "No:Add a comment to the \"Team processes\"page.",
            "No: The shark said \"Surfers are delicious\"."
          ]
        },
        {
          "type": "p",
          "text": "Five great guidelines for clear, concise writing, courtesy of George Orwell:"
        },
        {
          "type": "list",
          "items": [
            "Donât use a metaphor, simile, or other figures of speech that you commonly see.",
            "Donât use a long word if a shorter one will do.",
            "If you can omit a word, do it.",
            "Use active voice.",
            "Donât use foreign phrases, scientific nomenclature, or jargon if there's an everyday word you can use instead."
          ]
        },
        {
          "type": "p",
          "text": "Use sentence case. Donât use bold, italics, or standard punctuation in headings. It's ok to use question marks and exclamation points if they fit the criteria for those two marvelous pieces of punctuation."
        },
        {
          "type": "list",
          "items": [
            "Capitalize the first word of a title or heading (sentence case)",
            "Capitalize proper nouns and any trademarked names (products, countries, people's names, etc...)",
            "Donât use full stops"
          ]
        },
        {
          "type": "p",
          "text": "The use of articles (the, a, an) in headings depends on whether the message is conversational or action-based microcopy. Avoid articles in buttons and labels. In more conversational sections of the interface, like Home cards, marketing copy, and empty states, use articles. It makes the language more approachable and helps understanding when introducing new, complex concepts. Phrase documentation H1s with an action verb. Using action verbs informs the user of the type of content they can expect to find (for example,LearnversusGet). Donât use gerunds."
        },
        {
          "type": "list",
          "items": ["Yes:Create a page", "No:Creating a page"]
        },
        {
          "type": "p",
          "text": "More documentation guidelines for Atlassian employees(login required)."
        },
        {
          "type": "list",
          "items": [
            "Use sentence case, even if the UI element does not",
            "Use bold to call out the UI element in a step. Donât bold the >.",
            "If the UI element has an icon, use both the name and the icon."
          ]
        },
        {
          "type": "p",
          "text": "Go toÂ More â¢â¢â¢Â>Â Link issues. We write with US English spelling and punctuation, but our Australian roots are still part of our personality. Communications from Australians can use Australian English such asÂcolour,Âoptimise, theatre. For example, Aussie PMs writing JAC comments to customers can use Australian English. Developers should code in US English."
        },
        {
          "type": "list",
          "items": [
            "Yes:What kind of cookie would you like with your coffee, friend?",
            "No:Which biscuit do ya want with your cuppa, mate?"
          ]
        },
        {
          "type": "p",
          "text": "Follow the AP Style Guide."
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/vocabulary",
      "title": "Log in with Atlassian account",
      "content": [
        {
          "type": "p",
          "text": "You should enable JavaScript to work with this page. We tried to load scripts but something went wrong. Please make sure that your network settings allow you to download scripts from the following domain: https://id-frontend.prod-east.frontend.public.atl-paas.net"
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/voice-and-tone-principles",
      "title": "Voice and tone - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "This updated page replaces duplicate brand and content guidance across the site. We use the Atlassian voice and tone in all of our properties, and product content, from product user interfaces to email, social media, and other channels. Any Atlassian who works with customer-facing communications should follow the voice and tone guidelines: content designers, engineers, product designers, blog contributors, product managers, marketers... pretty much everyone. To help teams do the best work of their lives, we:"
        },
        {
          "type": "list",
          "items": [
            "offer solutions that help people at the moment they need it",
            "simplify complex problems into easy-to-understand pieces",
            "inspire people to try new things"
          ]
        },
        {
          "type": "p",
          "text": "With a familiar tone, clear language, and a solid knowledge of our audience, we craft messages that get teams moving in the right direction, then we get out of their way. The Atlassian voice is based on the Atlassian brand personality traits of:"
        },
        {
          "type": "list",
          "items": ["bold", "optimistic", "practical, with a wink"]
        },
        {
          "type": "p",
          "text": "To provide consistent, friendly, and helpful content for people, use this guidance with our other guidelines:"
        },
        {
          "type": "list",
          "items": [
            "Language and grammar",
            "Inclusive language",
            "Vocabulary (Atlassians only)"
          ]
        },
        {
          "type": "p",
          "text": "When writing with Atlassian's voice, we're part of the team. We're that friend or colleague who is always up on new trends and wants to be helpful and share new wisdom with everyone in a relatable way. We know when it's time to be serious and direct, and when it's time to be more casual. Personality comes across best in the details. The emphasis of each trait should be contextual to the audience and situation. Here are some questions you can ask yourself during your process to assess whether or not youâre leveraging our personality traits well."
        },
        {
          "type": "list",
          "items": [
            "What is the emotional state of the person when encountering your solution during their journey?",
            "How might our personality traits help enhance a moment of celebration?",
            "How might our personality traits help diffuse a moment of frustration or pain?"
          ]
        },
        {
          "type": "p",
          "text": "Motivate teams to do their best work. Offer best practices to get people going in the right direction. Be bold and offer just enough help to get the work started, and then get out of the way. Give accurate information so people can make educated decisions. Understand the person's struggles and desired outcomes and give enough information to let them get where they need to go. Go on the journey with people and highlight the key points that will help them the most, right now. Be in the moment by focusing attention on the important bits first. This gives people confidence in our products. Weave a consistent story across our fabric and be diligent about vocabulary across all messaging by being brand-conscious across products. Create a seamless flow across all the things. Let people know that they can jump in and start working, and can expect a familiar experience across all of the things. Keep teams in the loop about what is happening by informing them of relevant features, products and opportunities for success. Get to the point and be direct. Be concise. Be on the lookout for opportunities and be quick to offer a helping hand. Give the user just enough to know that something awesome is around the corner and then get out of the way. Write clear, accurate, and concise text that makes interfaces more usable and consistent â and builds trust. Write text that is understandable by anyone, anywhere, regardless of their culture or language so that everyone feels they are part of the team. A consistent voice creates greater quality products and better relationships with our customers. But, there is one caveat. There are times when you need to speak to different subsets of people, for instance among different products, and your tone might not be quite the same. That's okay! We've provided enough guidance to help adjust ourtoneto accommodate for:"
        },
        {
          "type": "list",
          "items": [
            "where people are at in their journey",
            "their emotional state",
            "product or property you are writing for"
          ]
        },
        {
          "type": "p",
          "text": "The voice and tone principles:"
        },
        {
          "type": "list",
          "items": [
            "Inform to build trust",
            "Empower to inspire action",
            "Encourage people along the path",
            "Motivate by showing possibilities",
            "Satisfy by meeting expectations",
            "Delight with unexpectedly pleasing experiences"
          ]
        },
        {
          "type": "p",
          "text": "Informby beingopenandclearon what people are experiencing with our products. It's about telling them what they need to know at that moment and nothing more. Be aware of when a user may be new or confused, and tone down the boldness by being more prescriptive. Let people know where they are in their journey and what they are looking at in the product. Write as a knowledgable member of the team. Show up at the right time and be open, humble, and warm â offer direction for the most appropriate next steps and get out of the way. Person is feeling: apprehension, confusion, annoyance, fear, loathing, anger. Examples: new users, evaluators, and when introducing a new concept, feature, or product"
        },
        {
          "type": "list",
          "items": [
            "In product:flags,error messages, andonboarding (spotlight)",
            "Being informative and to build trust"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only):"
        },
        {
          "type": "list",
          "items": [
            "Drive momentum from end-to-end",
            "Build trust in every interaction"
          ]
        },
        {
          "type": "p",
          "text": "Educatewhere we people need it most. Offeropportunitiesto learn at pivotal times toempowerpeople to move in the right direction. Offer best practices and recommendations for next steps while suggesting ways to improve and make decisions. Let people know Atlassian and fellow community members are available to help people make decisions. Write as ifyou are educating. You are a teacher with empathy and an understanding of what itâs like to be in the weeds. You expect your audience to have a basic understanding. Person is feeling: confident, interested, trust, anticipation. Examples: power users, admins, everyday users Design principle (Atlassians only): Guide mastery for greater value"
        },
        {
          "type": "list",
          "items": [
            "In product:onboarding (spotlight),benefits modal, andmodal dialogs",
            "Something requires an action from the person",
            "Educational opportunities",
            "Social opportunities â let them know best practices"
          ]
        },
        {
          "type": "p",
          "text": "Inspireinitialoptimismby providingsupportin the right place. Beconsistentanddependable. Offer waypoints, help, and support if people are feeling confused or frustrated at a point in their journey. This principle is about being human, giving guidance, support, and encouragement along the way. Guide people by revealing information gracefully. Let them know they are on the right path, they arenât alone, and that delivering projects and building teams can be challenging. Write in an upbeat, friendly way. Acknowledge the opportunities in the here-and-now and walk through it with them. Person is feeling: anticipation, unsupported, confused, uncertain Examples: new to Atlassian, evaluators, or when introducing a new concept, feature, or product Design principles (Atlassians only): Guide mastery for greater value"
        },
        {
          "type": "list",
          "items": [
            "In product:information messages,error messages, andsection messages",
            "Something requires an action from the person"
          ]
        },
        {
          "type": "p",
          "text": "Provideincentiveandexcitementfor continued growth. Consider why someone would want to do this. Show the possibilities of what can be accomplished by giving examples of how other people accomplish the same task, or by presenting the ideal state. Describe the end result, giving expert testimony, or offer opportunities for advanced knowledge. Write like an expert. Focus more on the solution than on the problem. Show people the possible benefits. Person is feeling: ambitious, inspired, curious, admiration. Examples: power users, admins, everyday users"
        },
        {
          "type": "list",
          "items": [
            "In product:onboarding (spotlight)andmodal dialogs",
            "Educational opportunities â it's a chance to tell them how other industry leaders do it, give best practices, and tips and tricks"
          ]
        },
        {
          "type": "p",
          "text": "Design principle (Atlassians only): Guide mastery for greater value Give people what they need. Providequick and thoroughanswers, guidance, actions, and instructions. We arenât trying to lead, inspire, motivate, delight, or encourage. Simply tell people what they need to know and get out of the way. All of our content should be practical at a minimum. Write as if you are explaining to your friend how to travel somewhere youâve visited regularly. Person is feeling: overwhelmed and stressed. Examples: people under pressure with deadlines â everyone feels this way sometimes"
        },
        {
          "type": "list",
          "items": [
            "Whenever we can",
            "In product:warning messages,information messages, anderror messages"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only):"
        },
        {
          "type": "list",
          "items": [
            "Build trust in every interaction",
            "Connect people to collaborate better",
            "Match purpose and feel familiar"
          ]
        },
        {
          "type": "p",
          "text": "âWinkâ where appropriate. We deliver appropriatedelightâ celebratesuccessorprogressonce weâve builttrust. But donât overdo it. These are little flourishes: we give flowers, not puppies. Pay particular attention to peopleâs state of mind. Think about the timing, and how frequently they will see this. Person is feeling: successful, joy, pride, relief. Examples:evaluators, power users, during social interactions"
        },
        {
          "type": "list",
          "items": [
            "In product:success messagesandmodal dialogs",
            "Social interactions and while introducing new experiences"
          ]
        },
        {
          "type": "p",
          "text": "Design principles (Atlassians only): Drive momentum from end-to-end"
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines",
      "title": "Writing guidelines - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Humans care about how products talk to them. Whether you look at giants like Google and Apple, or upstarts like Trello, GitHub, and Slack, these products all have a distinct voice, tone and personality. They engage us, manage to make us feel at home, capture our attention, and earn our loyalty. Poor messaging contributes to a poor user experience, which in turn leads to frustration, dissatisfaction, and abandonment. On the other hand, good copy reflects our products' voice (personality), and enables us to build a relationship with our audience. In short, good messaging may not be a reason people stay in our products, but bad messaging could be a reason they decide to leave. Use the guidelines and table below to inform your copywriting,Â calibrate your tone, and maintain consistency in your content. The following guidelines have information on specific message types:"
        },
        {
          "type": "list",
          "items": [
            "Error messages",
            "Success messages",
            "Info messages",
            "Warning messages",
            "Feature discovery"
          ]
        },
        {
          "type": "p",
          "text": "The table below will help you pick out what component to use to express a certain message. For example, if you want to show off a new feature to a user, investigate patterns and recommendations for spotlights, benefits modals, and empty states. Or if you want to tell someone they've accomplished a task successfully, check out the patterns and recommendations for flag messages."
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/date-and-time-guideline",
      "title": "Writing guidelines - Date and time - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "When youâre working with engineers, all they need is the time and date format length, and the i18n library API will format the date accordingly based on the locale signals Atlassian provides. Each programming language has an i18n library that automatically localizes time and date strings based on a userâs locale settings/preferences. Date and time formatters are used to convert dates and times from their internal representations to textual form and back again in a language-independent manner. Time and date strings should never be localized manually by a translator as time and date strings should be tied to a userâs locale (country and language) not their language. Hardcoding time and date content is bad practice and creates a bad international customer experience. Use abbreviations when space is limited. Be clear about which months or days you are referring to. Use these abbreviations for the days of the week:"
        },
        {
          "type": "list",
          "items": [
            "Monday â Mon",
            "Tuesday âÂ Tue",
            "Wednesday âÂ Wed",
            "Thursday â Thu",
            "Friday â Fri",
            "Saturday â Sat",
            "Sunday â Sun"
          ]
        },
        {
          "type": "p",
          "text": "Use these abbreviations for the months:"
        },
        {
          "type": "list",
          "items": [
            "January â Jan",
            "February â Feb",
            "March â Mar",
            "April â Apr",
            "May â leave it as May",
            "June â Jun",
            "July â Jul",
            "August âÂ Aug",
            "September â Â Sep",
            "October â Oct",
            "November â Nov",
            "December âÂ Dec"
          ]
        },
        {
          "type": "p",
          "text": "Be consistent when using abbreviations Donât use the shortest form of days and months â F, M, N, etc. If there isnât room to designate the month, work on redesigning. Usually, the month comes before the day, then followed by the year. On the 8th day of the month of January, in the year 2020, then the date in American English can be written as:"
        },
        {
          "type": "list",
          "items": [
            "Jan 8",
            "January 8",
            "January 8, 2020",
            "Monday, January 8, 2020"
          ]
        },
        {
          "type": "p",
          "text": "Atlassian uses American English when writing in English. The formats above are broken down below to help when writing absolute values are required.Â Choose patterns that are appropriate for your context.Â Use full date in cards, bylines, and anywhere else space or your design allows for it:"
        },
        {
          "type": "list",
          "items": [
            "Use numerals for the day",
            "Spell out the month and day of the week in words",
            "Give the full four-digit year, not a two-digit abbreviation"
          ]
        },
        {
          "type": "p",
          "text": "Donât useÂ ordinal numbers, for example, 1st, 2nd, 3rd, etc. Tuesday, April 12, 1952 Tuesday 12th April 1952 You can also use a shorter format. Here spell out the month and use numerals for the day and year: April 12, 1952 When space is limited shorten dates further, for example in lists, tables, charts, and comments."
        },
        {
          "type": "list",
          "items": [
            "Spell out the month using abbreviations",
            "Use numerals for the day and the year"
          ]
        },
        {
          "type": "p",
          "text": "We recommend using the following pattern in most product copy if your context allows for it Sep 14, 2006 When you need to leave out either the day or year, where possible, spell out the month in full."
        },
        {
          "type": "list",
          "items": ["October 22 or July 2019"]
        },
        {
          "type": "p",
          "text": "Writing dates entirely in numbers has disadvantages when it comes to readability and usability. This is because parts of the world use the date in a different order for numeric dates. Avoid doing this if it's possible because it often also has large UX implications. Instead, we recommend using any of the other date formats above. If itâs absolutely necessary to express a date in numerical date format, use the formatÂ YYYY-MM-DD, and separate the elements by using hyphens. This conforms toÂISO 8601 international standardsÂ for numerical date format."
        },
        {
          "type": "list",
          "items": ["2021-05-23"]
        },
        {
          "type": "p",
          "text": "In a content draft or design spec if youâre adding a fictional date, choose a day greater than 12. This will help to clearly differentiate the day from the month. Punctuation is a localization issue and should be localized wherever possible. Avoid if possible, defaulting to no punctuation. When writing as numerals separate the numbers with an unspaced hyphen, usingÂ the format above. Avoid using apostrophes. In more casual writing, you can use expressions such asÂ âthe seventiesâ or 'the '70s' - using contractions for the missing numerals in the year. Months and days are proper nouns and start with a capital letter. Specific days, times of the year or periods in history are all proper nouns. Use capitals for all proper nouns. Use initial capitals for all institutional holidays, religious days, and public events:"
        },
        {
          "type": "list",
          "items": ["New Yearâs Day", "Good Friday", "Ramadan", "Yom Kippur"]
        },
        {
          "type": "p",
          "text": "Use âtoâ if a number range is preceded by âfromâ in a phrase. Use âandâ if a range is preceded by âbetweenâ. Avoid using hyphens andÂ en dashes in spans of dates.Â From 2015 to 2019 2014 - 2015 When this isn't possible, for example:"
        },
        {
          "type": "list",
          "items": [
            "financial years",
            "or when information is in parentheses, such as terms of office and years of birth and death."
          ]
        },
        {
          "type": "p",
          "text": "For these, use a hyphen without any spaces on either side:"
        },
        {
          "type": "list",
          "items": [
            "FY2008-09",
            "John Smith (1917â1992) had 3 younger siblings."
          ]
        },
        {
          "type": "p",
          "text": "Spring in the northern hemisphere is autumn (fall) in the southern hemisphere. Avoid talking about seasons. Instead, use months or quarters. In most cases, especially when you need to be precise, use numbers to give a clearer expression of time. Use a colon between the hours and minutes with no spaces on either side. 3:30:42 p.m. PST If itâs an exact hour, no â:00â³ is required. For timestamps, labels on graphs, durations, and more avoid using zeros. Only show minutes if itâs not on the hour. 8 a.m. 8:00am As with American English in most cases, we use rules set by the AP style guide."
        },
        {
          "type": "list",
          "items": [
            "Lowercase a.m. and p.m., with periods.",
            "Use numerals, with a space between the time and the a.m. or p.m., for example, 6:30 a.m.",
            "If a time range is entirely in the morning or evening, use a.m. or p.m. only once: â6:30-10 p.m.â If it goes from the morning into the evening (or vice versa), you need both: â10 a.m.-2 p.m.â"
          ]
        },
        {
          "type": "p",
          "text": "Where possible use ânoonâ, âmiddayâ or âmidnightâ instead of â12 a.m.â or â12 p.m.â to make it easier for people. Use the 24-hour system if it helps people understand your content. But itâs important to understand that many times this is system-driven.\nThis is important if youâre referring to time in the context of more serious communications, for example, in case of outages and in security comms. The 24-hour system numbers hours from 00:00 hours (midnight) to 23:59 and always uses at least 4 digits. If seconds are included use 6 digits."
        },
        {
          "type": "list",
          "items": [
            "The first 2 digits are the hours",
            "The next 2 digits are the minutes",
            "The last 2 digits are the seconds"
          ]
        },
        {
          "type": "p",
          "text": "Use a colon to separate the hours, minutes, and seconds. Avoid using the prefix âbiâÂ to mean either 2 or twice. It can be confusing."
        },
        {
          "type": "list",
          "items": [
            "âBimonthlyâ can mean either every 2 months or twice a month.",
            "âBiannualâ means twice a year."
          ]
        },
        {
          "type": "p",
          "text": "Instead, use fortnightly or the phrase âevery 2â. Your x will repeat every 2 weeks Your x will repeat bi-monthly This is used when displaying both the date and the time of day. For example, in historical versions of pages. To do this use the following formats"
        },
        {
          "type": "list",
          "items": ["MMM dd, yyyy HH:mm", "dd, HH:mm"]
        },
        {
          "type": "p",
          "text": "Itâs important that you express date and time information as you would speak in conversation when the situation allows for it. In some cases, the easiest way to describe something that happened very recently is using the âagoâ format. Use this when the exact date is less important. For future and past events, use approximate time by rounding down to the largest or most recent date or time.Â You should always provide a way for people to see the actual timestamp, usually via a tooltip. Date and time formatting differs greatly from country to country, and even within regions of a country, such as Canada and Switzerland. The Product Internationalization team is responsible for creating product UI content in non-English languages by localizing externalized code strings provided by our Product Engineers. In order to accurately localize date and time formatting for different locales (country and language), we require Engineers to ensure that all content containing the date and time references are not hardcoded and reference built-in i18n libraries/APIs for automatic format The best practice for Internationalization is for Engineers not to hardcode time and date strings and to reference the programming i18n library API which will automatically format time and date strings as per the detected or selected locale."
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/empty-state",
      "title": "No Title",
      "content": [
        {
          "type": "p",
          "text": "An empty state message appears after someone has completed a task or workflow, or has cleared all data associated with certain functionality. For example, clearing their inbox. These messages are a way to celebrate, add energy, and motivate people to get on with their next task. Empty states can appear within a particular functionality or as a full-screen message. When crafting an empty state message, remember that most people scan text instead of reading everything. Make every word count and avoid irrelevant details."
        },
        {
          "type": "list",
          "items": [
            "Include an informative, scannable title. Try and limit the number of words as much as possible.",
            "Titles are a good place to add wink if itâs appropriate.",
            "Write in sentence case and donât use punctuation unless it's a question.",
            "Use the heading to describe the empty state or as an opportunity to tell people what they can do."
          ]
        },
        {
          "type": "list",
          "items": [
            "Include the reason for the empty state and where they can go next. If there is nothing for them to do, celebrate finishing a task.",
            "Avoid repeating content from the title.",
            "Keep messages one to two sentences long. Be considerate of people's time and patience. Be short, to the point, and avoid using jargon.",
            "Avoid having people look in another location for more information, but if it cant' be avoided, use a link to support content."
          ]
        },
        {
          "type": "list",
          "items": [
            "When offering an action to perform after an empty state, use imperative verbs such as âTryâ, âRemoveâ or âCreateâ, in the CTA to describe what action people will be making instead of vague terms such as âOKâ.",
            "An option to dismiss or cancel lets people feel reassured that they can opt-out.",
            "Limit your CTA to one or two words.",
            "Your CTA button should always complement the title of the empty state.",
            "Empty states are an  opportunity to encourage people to interact further with our products. While optional theyâre a good way to educate people about where they can go next or motivate them to explore."
          ]
        },
        {
          "type": "p",
          "text": "Be careful of how many call to action buttons are on one page. You donât want to overwhelm people with too many options. You want to leave people feeling motivated, supported, and delighted. Convey accurate emotions and make sure people know how to respond. Follow some of the followingAtlassian voice and tone principlesto build your message: Completing a task makes people feel ambitious, inspired, curious. Provide people with the incentive and excitement for continued growth in our products. Show the possibilities of what can be accomplished by presenting them with next steps, or offer opportunities for advanced knowledge. This is always better than leaving people at a dead end. Weâre celebrating the success or progress of completing a task. Write to conveyexcitement. You are giving a pat on the back for a job well done. But remember not to overdo it. Timing and repetition are critical. Messages that appear more frequently should be more concise and less delightful, for example clearing notifications. If messages are appearing repeatedly, consider multiple versions. These are low commitment experiences, we want to give flowers not puppies. Messages that appear after a bigger, optimistic action can be more playful, for example, a modal dialog. Remember that depending on the component you use, illustrations can also help to add a wink to your message. If an empty state has more than one potential cause or solution, try one of the following writing strategies. An empty state lets people know when theyâve completed or have cleared a task(s). By contrast, a blank slate is a type of message in which people have never come across or tried a new feature before. Blank slates promote and encourage people to try something new. Use text, design elements, and visual clues to differentiate where people are in their journeys."
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/feature-discovery",
      "title": "Writing guidelines - Empty state - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "These messages highlight a new or recently updated experience. Let people know what's changed, and invite them to try something new. A feature discovery message should leave your reader feeling curious, excited, and empowered. For more guidance on this messaging type, see thenew or updated feature pattern."
        },
        {
          "type": "list",
          "items": [
            "When introducing the new feature, consider what the user is trying to accomplish, what they were just doing, and where they need to go.",
            "Titles and messages should clearly indicate user benefits. For example, \"Find your work faster\" instead of \"New search\".",
            "This should be a positive experience for people, so it's okay to be delightful, just don't overdo it."
          ]
        },
        {
          "type": "p",
          "text": "Determine if you need to inform (a feature has moved) or educate (the experience or interaction has changed). Introduce the change, communicate its benefits, and provide a call to action if appropriate Be bold and optimistic about a new feature, especially if there are benefits and improvements for the user. Be clear and practical, and you can add a little âwinkâ to entice the user to try something new. The information flag below promotes the updated search feature, giving the option of learning more or trying out the new search. This example encourages and empowers the user to begin using Jira as intending by adding issues. This Bitbucket example encourages people to improve their Bitbucket experience by adding branch permissions. It clearly states the benefits and ideal state of using this feature."
        },
        {
          "type": "list",
          "items": [
            "Flag",
            "Benefits modal",
            "Spotlight",
            "New or updated feature"
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/writing-a-success-message",
      "title": "Writing guidelines - Success message - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "A success message appears after someone has taken an action or completed a task. The message is an opportunity to confirm the action or congratulate them. When crafting a success message, remember that most people scan text instead of reading everything. Make every word count and avoid irrelevant details."
        },
        {
          "type": "list",
          "items": [
            "Titles are optional depending on the component you choose. Avoid using âSuccess!â âsuccessfullyâ in a title.",
            "Include an informative, scannable title. Try and imagine people trying to understand whatâs happening by reading the title on its own.",
            "Limit titles to three to four words where possible, excluding âanâ, âaâ, or âtheâ. The character count will depend on the component you choose.",
            "Write in sentence case and no use of periods.",
            "Avoid using exclamations! We don't want to be overly enthusiastic about everything!"
          ]
        },
        {
          "type": "list",
          "items": [
            "Include the reason for the success â confirm what action someone has taken or what task has been completed. If someone has created something give them an opportunity to view it.",
            "Avoid repeating content from the title.",
            "Keep messages to 1 to 2 sentences. Use a few words of praise followed by one or two sentences of informative insight.",
            "Avoid putting technical information in the message or having people look in another location. If it can't be avoided, use a link to support content."
          ]
        },
        {
          "type": "p",
          "text": "Itâs important to show possibility once someone has achieved something. We want to tell people the result of something, for example âyouâve closed the ticket'; how to undo it, for example, âask your space admin to restore the page, if neededâ; and the step forward if possible, for example âView your new space or set the permissions on your new spaceâ."
        },
        {
          "type": "list",
          "items": [
            "CTAs are often optional unless there are any follow-up options. Donât include a CTA unnecessarily.",
            "Always give people an option to dismiss the message.",
            "When a success message invokes a choice, use imperative verbs such as âSaveâ, âRemoveâ or âCreateâ, in the CTA to describe what action people will be making instead of vague terms such as âOKâ.",
            "Limit your CTA to 1 or 2 words."
          ]
        },
        {
          "type": "p",
          "text": "Success messages should leave people feeling empowered, motivated, and satisfied with their efforts. You want to confirm the outcome and then get out of peopleâs way. Follow some of the followingAtlassian Voice and Tone principlesto build your message: Delight with unexpectedly pleasing experiences Weâre celebrating success or progress once weâve built trust. Write to conveyexcitement. You are giving a pat on the back for a job well done. But remember not to overdo it. Timing and repetition are critical. Success messages that appear more frequently should be more concise and have less delight. If messages are appearing repeatedly, consider multiple versions if you want to add some humor. These are low commitment experiences, we want to give flowers not puppies. Messages that appear after a bigger, optimistic action can be more playful, for example a modal dialog. Remember that depending on the component you use, illustrations can also help to add a wink to your message. Use success messages in the following components:"
        },
        {
          "type": "list",
          "items": [
            "Flag",
            "Banner",
            "Inline message",
            "Modal dialog",
            "Section message"
          ]
        },
        {
          "type": "list",
          "items": [
            "Use alternative text for illustrations and symbols in your messages.",
            "Avoid jargon and use simple language.",
            "Make links as descriptive as possible.",
            "Make text easily scannable to highlight key information."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/writing-a-warning-message",
      "title": "Writing guidelines - Info messages - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "A warning message, different from error messages, appearsbeforesomeone takes an action to indicate a significant change or potential loss of data. It draws their attention to a potential problem that may or may not require an action on the userâs part. When crafting warning messages, remember that most people scan text instead of reading everything. Make every word count and avoid irrelevant details."
        },
        {
          "type": "list",
          "items": [
            "Titles are optional depending on the component you choose.",
            "Include an informative, scannable title. People should understand whatâs happening by reading the title on its own.",
            "Avoid explaining what to do.",
            "Limit titles to three to four words where possible, excluding âanâ, âaâ, or âtheâ. The character count will depend on the component you choose.",
            "Write in sentence case with appropriate punctuation."
          ]
        },
        {
          "type": "p",
          "text": "Do: Warning bill increase Dont: Warning bill increase By giving people this warning before they add extra members to their team youâre giving them a chance to reconsider their options after having all the information. Avoid using a wink in instances where there could be a problem for people."
        },
        {
          "type": "list",
          "items": [
            "Include: the reason for the warning and the potential problem, how someone should act, and what happens if they donât act.",
            "If you donât know the reason for a warning, donât make one up â just say that somethingâs gone wrong and offer a solution for what they can do.",
            "Avoid repeating content from the title.",
            "Keep messages to 1 to 2 sentences.",
            "Avoid people having to look in another location for more information. If this can't be avoided, use a link to support content."
          ]
        },
        {
          "type": "p",
          "text": "Do: Warning trouble connecting Dont: Warning trouble connecting Use âweâre' instead of âyouâre' to avoid blaming people for issues they may be facing with the products."
        },
        {
          "type": "list",
          "items": [
            "When a warning message invokes a choice, use imperative verbs such as âSaveâ, âRemoveâ or âCreateâ, in the CTA to describe what action people will be making instead of vague terms such as âDoneâ.",
            "An option to dismiss or cancel lets people feel reassured that they can opt-out.",
            "Limit your CTA to 1 or 2 words."
          ]
        },
        {
          "type": "p",
          "text": "You want to leave people feeling informed, supported and reassured. Convey the correct level of urgency and make sure they understand how to respond. Follow theAtlassian voice and tone principlesto build your message: Inform, but don't alarm. If the warning comes before an action, clearly communicate what will happen if the action is taken. Give clear, concise advice on which path to take and describe and provide alternatives if possible.Â Use language that sounds and feels human, is natural and accessible. Explains the situation clearly and without assuming they have any advanced knowledge. Consider the context in which the message appears. The type of warning message required will change depending on the risk, consequences, and immediacy of the problem. Warning messages make people aware of a condition or potential problem, even if they don't have to take immediate action. Payment details needed Payment details needed This message describes the condition or problem, the implications and their importance, and offers a button to dismiss the message. This is when someone needs to act immediately to prevent an issue. Here the message describes what people need to do, explains the condition and why itâs important, and offers a button for each of the options. It's important to give people a timeline in which to make a certain change. You donât want to create panic and rush people into making changes. This message should ask people whether they want to proceed, explain any reasons why they may not wish to proceed, and offer commit buttons for proceeding or canceling an action. You should also inform them whether any actions they take can be easily undone. Confirm a risky action Risky action Use warning messages in the following components:"
        },
        {
          "type": "list",
          "items": [
            "Banner",
            "Flag",
            "Inline message",
            "Modal dialog",
            "Section message"
          ]
        },
        {
          "type": "list",
          "items": [
            "Use alternative text for illustrations and symbols in your messages",
            "Avoid jargon and use simple language",
            "Make links as descriptive as possible",
            "Make text easily scannable to highlight key information."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/writing-an-info-message",
      "title": "No Title",
      "content": [
        {
          "type": "p",
          "text": "Use these messages when you want to provide more information without disrupting someoneâs work or requiring them to take action. An info message needs to leave your reader feeling:"
        },
        {
          "type": "list",
          "items": [
            "Informed",
            "Helped and supported",
            "In control of their situation"
          ]
        },
        {
          "type": "p",
          "text": "Information messages may be used to communicate a change in state or important information about an experience or feature. Get right to the point and say why itâs important."
        },
        {
          "type": "list",
          "items": [
            "Get right to the point",
            "Say why it's important, then let them get back to work",
            "Keep the information useful and don't disrupt your users experience with the message"
          ]
        },
        {
          "type": "p",
          "text": "Inform the user about something that might happen or impact them. Then let them get back to work. Based on the situation, you can add more of a âwinkâ to your message, but keep it clear and concise. This flag informs the user they were logged out due to inactivity. Itâs personable, informative and offers a clear action to log back in. This message is used to inform the user and give a reason behind an empty state."
        },
        {
          "type": "list",
          "items": ["Flag", "Inline message", "Section message"]
        }
      ]
    },
    {
      "url": "https://atlassian.design/content/writing-guidelines/writing-error-messages",
      "title": "Writing guidelines - Error message - Content - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "An error message, different from a warning message, appearsaftersomeone has taken an action. The message draws their attention to what has happened and what the consequences are, and what people need to do to move forward. Optionally, they can also include why something happened and whether the problem will occur again. When crafting an error message, remember that most people scan text instead of reading everything. Make every word count and avoid irrelevant details."
        },
        {
          "type": "list",
          "items": [
            "Titles are optional depending on the component you choose.",
            "Include an informative, scannable title. Try and imagine people trying to understand whatâs happening by reading the title on its own.",
            "Avoid explaining what to do.",
            "Limit titles to three to four words where possible, excluding âanâ, âaâ, or âtheâ. The character count will depend on the component you choose.",
            "Write in sentence case with appropriate punctuation."
          ]
        },
        {
          "type": "list",
          "items": [
            "Include: the reason for the error and the problem, how someone should act and what happens if they donât act.",
            "If you donât know the reason for an error, donât make one up â just say that somethingâs gone wrong and offer a solution for what people can do.",
            "Avoid repeating content from the title.",
            "Keep messages to 1 to 2 sentences.",
            "Avoid putting technical information in the message or having people look in another location. If it can't be avoided, use a link to support content."
          ]
        },
        {
          "type": "p",
          "text": " "
        },
        {
          "type": "list",
          "items": [
            "When an error message invokes a choice, use imperative verbs such as âSaveâ, âRemoveâ or âCreateâ, in the CTA to describe what action people will be making instead of vague terms such as âOKâ.",
            "An option to dismiss or cancel lets people feel reassured that they can opt out.",
            "Limit your CTA to 1 or 2 words."
          ]
        },
        {
          "type": "p",
          "text": "Errors are high-stakes situations. They can be frustrating at a minimum, or catastrophic at their worst â especially when they involve work.Â You want to leave people feeling supported and reassured. Convey an error message with empathy and tact. The correct level of urgency will let people understand how to respond. Follow some of the followingAtlassian voice and tone principlesto build your message: Be open and clear about what people are experiencing in our products. Be aware that your reader could be new or confused, and tone down the boldness by being more prescriptive.   Treat errors as an opportunity to educate people. Help them understand why theyâre experiencing something and how they can avoid similar issues in the future. You may even be able to teach them something that can help them understand and manage the technology they use beyond our immediate products. Be consistent and dependable. Avoid messaging that focuses on the problem without offering a solution or way forward. Focus on next steps where possible and stay away from negative words or phrases.   Useweinstead ofyou,as emphasizing the relationship between the person and the problem could make them feel like theyâre being held responsible. Provide quick and thorough answers, guidance, actions, and instructions. Give them the information they need then get out of their way.   Avoid using âpleaseâ and âsorryâ. Saying \"sorry\" in error messages can make the situation worse by causing errors to appear more severe than they actually are. Similarly, saying \"please\" can undermine the authority and credibility of your message and lead people to think a required step is optional. Unless the error has severe and irreparable consequences, avoid niceties. If the error has more than one potential cause or solution, try one of the following writing strategies. An error message alerts people of a problem that has already occurred. By contrast, a warning message alerts people of a condition that might cause a problem in the future.Â Use text, design elements, and visual clues to differentiate the difference between where people are in their journeys. Stick to the most likely cause or the simplest solution in the first sentence of the error message and offer an alternative backup solution in the second sentence in case the error keeps occurring (for example, contacting support). Try to reframe the error as an opportunity to inspire trust and confidence.   For dead ends, start with something short but kind, and add context or other details only if the error will reoccur. Use error messages in the following components:"
        },
        {
          "type": "list",
          "items": ["Flag", "Inline message", "Modal dialog", "Section message"]
        },
        {
          "type": "list",
          "items": [
            "Use alternative text for illustrations and symbols in your messages",
            "Avoid jargon and use simple language",
            "Make links as descriptive as possible",
            "Make text easily scannable to highlight key information."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations",
      "title": "No Title",
      "content": []
    },
    {
      "url": "https://atlassian.design/foundations/accessibility",
      "title": "Accessibility - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Accessibility is everyoneâs responsibility. Start early in your teamâs planning process with accessibility in mind, to avoid time consuming and expensive reworks later. Weâre here to create products where nobody has to have a confusing, unpleasant, or exclusionary experience. Weâre regularly iterating on this design system to give you access to more accessibility features by default, whenever you use our components, foundations, guidelines, or tooling. Everyone will experience a disability at some point in their lives. Whether thatâs living with a permanent disability, a temporary injury, or a situational impairment (for example, working in a bright and noisy environment). Thanks to assistive technology, the web has made the world more accessible to people with disabilities. But the world still has a long way to go before everyone gets an equal experience when they use the internet â and thatâs where you come in. We design for people, not compliance. That means considering equity and inclusion throughout every part of the design and development process. When designing and coding products, we consider:"
        },
        {
          "type": "list",
          "items": [
            "Visual disabilities- Include people who are blind or low vision by providing good alternative text and semantic HTML. Donât rely on color or shape to convey meaning, and use accessible color contrast.",
            "Hearing disabilities- Include people who are Deaf, have full loss of hearing, or difficulty processing auditory information by providing information in non-auditory formats.",
            "Limited mobility- Include people who have difficulty using a mouse by supporting keyboard navigation, large selectable targets, and correct semantic HTML for speech recognition software.",
            "Cognitive disabilities- Include people who have memory loss, cognitive overload, difficulty reading or writing, and trauma/mood disorders by using wording and design that is clear and easy to navigate.",
            "Multiple/compound disabilities- Some people have multiple disabilities, so donât solve for one disability in isolation.",
            "Inclusive language- Use wording that can be localized into other languages, and ensure that it is inclusive of gender, race, age and ethnicity."
          ]
        },
        {
          "type": "p",
          "text": "Use the same solutions to solve the same problems. Regardless of what kind of device, screen size, platform, or assistive technology someone is using, they should be able to complete their tasks in a similar way. Use design system components so every experience feels familiar. Text is a powerful tool for assistive technologies, as it can be interpreted by:"
        },
        {
          "type": "list",
          "items": [
            "Seeing the words on a screen",
            "Hearing words, using a text-to-speech screen reader",
            "Touching the words, using a braille screen reader"
          ]
        },
        {
          "type": "p",
          "text": "This means that good labeling, alt text, and transcripts are essential to making your products accessible. Never rely on color to convey meaning. Some people can't perceive color at all, while others perceive limited color, and some colors have different meanings in different cultures. Use a color contrast ratio of 4.5:1 for regular text and 3:1 for large text and graphics so people can perceive it. Make sure your design reflows across all screen sizes, and let people adjust the scale and colors (for example, offer dark mode and increased contrast modes). Honor reduced motion settings, and make sure that people are well informed about high-impact changes to the system before they make them. Semantic HTML describes the exact meaning of an element to the web browser. For example, a heading, a section, or a navigation. This is the opposite to elements that don't convey meaning, like a <div> or a <span>. Using semantic HTML helps people who use assistive technology navigate and interpret page elements accurately. Great accessible design is intersectional, and inclusive of people of all races, ethnicities, genders, sexual orientations, and backgrounds. We acknowledge that some people live with multiple disabilities, or are marginalized in multiple ways. We celebrate that our differences are key to making great products. We live in an anxious, busy, and overwhelming world. Most people donât love products â they use them to get their job done. Respect their time by making software thatâs uncomplicated and easy to use. Make sure that your products are tested by people that represent our diverse world. Include people with disabilities, people with different levels of technical experience, different types of technology, and people who arenât advocates for your product."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/color-new",
      "title": "Color - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Saturated colors can infuse meaning to an experience, highlight UI, or create associations with similar colored UI. Neutral colors apply to most backgrounds, text, and shapes in our experiences. They donât typically have a meaning associated with them, though they can imply things like disabled states. There are dedicated neutrals for both light and dark mode. Alpha colors have varying levels of transparency or opacity. Transparency helps UI adapt to different background colors and elevations. If you aren't using design tokens, see ourcolor palettepage for hex codes and RGBa values. For most Atlassian product experiences, colors are applied usingdesign tokens. This means rather than choosing a certain shade or value, youâll choose a design token to apply colors. For the full list of color design tokens and their values, see ourdesign token reference list. Every token comes with a description to help you ensure youâre using the correct one. All color design tokens start with the word âcolorâ, followed by the property that it's applied to, such as a background, border, or icon. After the property name, the token may have one or more modifiers that represent the different parts of our color system: color role, emphasis level, and interaction state. Color roles describe the intention behind the color. For example, color roles are applied to buttons to differentiate between primary, secondary, warning, or dangerous actions. Use the right color role for your situation. Donât use an accent when the color has semantic meaning. Emphasis determines the amount of contrast a color has against the default surface. Emphasis can range from subtlest to boldest. Bolder colors have more contrast against the default surface, which adds more attention than subtle colors. Inverse tokens are designed to show on bold backgrounds. There are inverse tokens for text, borders, and icons on bold backgrounds. For bold warning backgrounds, which are yellow, there are specialwarning.inversetokens designed to pass WCAG AA contrast requirements. States communicate the status of an interactive element. Use hovered, pressed, selected, focused, or disabled tokens to create visual changes related to interaction states. There are no dedicated hovered and pressed tokens for icons. Instead, we recommend using a subtle neutral background to indicate state changes. We comply with WCAG AA standard contrast ratios:"
        },
        {
          "type": "list",
          "items": [
            "Must pass 3:1 contrast:Any UI essential to understanding the experience and text 24px or larger (WCAG 1.4.11)",
            "Must pass 4.5:1:Text smaller than 24px (WCAG 1.4.3)"
          ]
        },
        {
          "type": "p",
          "text": "See ourcolor accessibilityguidance for more information. Design tokens currently support two color themes: light and dark. Each color design token maps to a different value for each theme so their appearance differs depending on which theme is being used."
        },
        {
          "type": "list",
          "items": [
            "To learn the basics of tokens and themes, go todesign tokens.",
            "For detailed mappings from light to dark colors, seepicking colors for dark mode. Note that if you are using design tokens, you shouldnât have to map your own values."
          ]
        },
        {
          "type": "list",
          "items": [
            "Learn about the basics ofdesign tokens.",
            "If you need hex codes, RGBA values, or dark mode mappings, see ourcolor palettes.",
            "For guidance on color usage in charts, read ourdata visualization color guideline.",
            "See the list ofall design tokensfor full descriptions and values for all tokens."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/color-new/accents",
      "title": "Color new - Accents - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Accent colors help to differentiate between similar pieces of UI. Accents donât communicate any specific meaning to users, unlike success, warning, or othercolor roles. Use accent colors where users choose a color for their content (incolor pickers), or in experiences where color helps categorize content. There are 10 accent colors available: blue, teal, green, lime, yellow, purple, magenta, red, orange, and gray. Each accent color has dedicateddesign tokensthat can be applied to backgrounds, text, borders and icons. The full list of tokens is available indesign token reference list. If you arenât sure whether to use an accent token, consider whether the color could be swapped for another without changing the experience or meaning behind it. Use accent tokens for any experience where the color is just one of many colors, and changing it would have no impact on the experience. Donât use accent tokens when the color has a specific meaning in our system, such as information, warning, or success. Accent tokens come in multiple shades, which can either provide different emphasis levels for visual hierarchy or be used to provide more color options for user-generated content. Background accent tokens have four emphasis levels ranging from subtlest to bolder. Text accent tokens have two emphasis levels â default and bolder. Icon accent tokens have two emphasis levels â default and bolder. When pairing accent text or icon colors against backgrounds, make sure they meetminimum contrast requirements."
        },
        {
          "type": "list",
          "items": [
            "Pair default or bolder accent text or icons with subtlest and subtler accent backgrounds",
            "Pair bolder accent text or icons with subtle accent backgrounds",
            "Pair inverse text or icons with bolder accent backgrounds"
          ]
        },
        {
          "type": "p",
          "text": "If youâre pairing text or icon tokens outside of these recommendations, ensure they meet the minimum contrast requirements against the background. Yellow presents a unique challenge for accessibility and can appear more like brown. Consider using a different accent color in itâs place, such as orange. Consider using accent tokens other than yellow, such as orange. Avoid using yellow accent tokens, as these become brown to meet contrast requirements. Pair subtler accent backgrounds with accent borders if yourexperience needs to pass 3:1 contrast. Bolder accent backgrounds meet these requirements on their own. For data visualization, use ourchart tokensinstead. Maintain visual harmony by combining foreground and background elements with colors from the same family. Pair accent background and foreground elements (text, icons, or borders) from the same color to create harmonious experiences. Donât mix accent backgrounds with different colored foreground elements (text, icons, or borders)."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/color-new/color-palette-new",
      "title": "Color new - Palette - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "list",
          "items": [
            "LimeLime100HexRGBLime200HexRGBLime300HexRGBLime400HexRGBLime500HexRGBLime600HexRGBLime700HexRGBLime800HexRGBLime900HexRGBLime1000HexRGBRedRed100HexRGBRed200HexRGBRed300HexRGBRed400HexRGBRed500HexRGBRed600HexRGBRed700HexRGBRed800HexRGBRed900HexRGBRed1000HexRGBOrangeOrange100HexRGBOrange200HexRGBOrange300HexRGBOrange400HexRGBOrange500HexRGBOrange600HexRGBOrange700HexRGBOrange800HexRGBOrange900HexRGBOrange1000HexRGBYellowYellow100HexRGBYellow200HexRGBYellow300HexRGBYellow400HexRGBYellow500HexRGBYellow600HexRGBYellow700HexRGBYellow800HexRGBYellow900HexRGBYellow1000HexRGBGreenGreen100HexRGBGreen200HexRGBGreen300HexRGBGreen400HexRGBGreen500HexRGBGreen600HexRGBGreen700HexRGBGreen800HexRGBGreen900HexRGBGreen1000HexRGBTealTeal100HexRGBTeal200HexRGBTeal300HexRGBTeal400HexRGBTeal500HexRGBTeal600HexRGBTeal700HexRGBTeal800HexRGBTeal900HexRGBTeal1000HexRGBBlueBlue100HexRGBBlue200HexRGBBlue300HexRGBBlue400HexRGBBlue500HexRGBBlue600HexRGBBlue700HexRGBBlue800HexRGBBlue900HexRGBBlue1000HexRGBPurplePurple100HexRGBPurple200HexRGBPurple300HexRGBPurple400HexRGBPurple500HexRGBPurple600HexRGBPurple700HexRGBPurple800HexRGBPurple900HexRGBPurple1000HexRGBMagentaMagenta100HexRGBMagenta200HexRGBMagenta300HexRGBMagenta400HexRGBMagenta500HexRGBMagenta600HexRGBMagenta700HexRGBMagenta800HexRGBMagenta900HexRGBMagenta1000HexRGB",
            "LimeLime100HexRGBLime200HexRGBLime300HexRGBLime400HexRGBLime500HexRGBLime600HexRGBLime700HexRGBLime800HexRGBLime900HexRGBLime1000HexRGB",
            "Lime100HexRGB",
            "Lime200HexRGB",
            "Lime300HexRGB",
            "Lime400HexRGB",
            "Lime500HexRGB",
            "Lime600HexRGB",
            "Lime700HexRGB",
            "Lime800HexRGB",
            "Lime900HexRGB",
            "Lime1000HexRGB",
            "RedRed100HexRGBRed200HexRGBRed300HexRGBRed400HexRGBRed500HexRGBRed600HexRGBRed700HexRGBRed800HexRGBRed900HexRGBRed1000HexRGB",
            "Red100HexRGB",
            "Red200HexRGB",
            "Red300HexRGB",
            "Red400HexRGB",
            "Red500HexRGB",
            "Red600HexRGB",
            "Red700HexRGB",
            "Red800HexRGB",
            "Red900HexRGB",
            "Red1000HexRGB",
            "OrangeOrange100HexRGBOrange200HexRGBOrange300HexRGBOrange400HexRGBOrange500HexRGBOrange600HexRGBOrange700HexRGBOrange800HexRGBOrange900HexRGBOrange1000HexRGB",
            "Orange100HexRGB",
            "Orange200HexRGB",
            "Orange300HexRGB",
            "Orange400HexRGB",
            "Orange500HexRGB",
            "Orange600HexRGB",
            "Orange700HexRGB",
            "Orange800HexRGB",
            "Orange900HexRGB",
            "Orange1000HexRGB",
            "YellowYellow100HexRGBYellow200HexRGBYellow300HexRGBYellow400HexRGBYellow500HexRGBYellow600HexRGBYellow700HexRGBYellow800HexRGBYellow900HexRGBYellow1000HexRGB",
            "Yellow100HexRGB",
            "Yellow200HexRGB",
            "Yellow300HexRGB",
            "Yellow400HexRGB",
            "Yellow500HexRGB",
            "Yellow600HexRGB",
            "Yellow700HexRGB",
            "Yellow800HexRGB",
            "Yellow900HexRGB",
            "Yellow1000HexRGB",
            "GreenGreen100HexRGBGreen200HexRGBGreen300HexRGBGreen400HexRGBGreen500HexRGBGreen600HexRGBGreen700HexRGBGreen800HexRGBGreen900HexRGBGreen1000HexRGB",
            "Green100HexRGB",
            "Green200HexRGB",
            "Green300HexRGB",
            "Green400HexRGB",
            "Green500HexRGB",
            "Green600HexRGB",
            "Green700HexRGB",
            "Green800HexRGB",
            "Green900HexRGB",
            "Green1000HexRGB",
            "TealTeal100HexRGBTeal200HexRGBTeal300HexRGBTeal400HexRGBTeal500HexRGBTeal600HexRGBTeal700HexRGBTeal800HexRGBTeal900HexRGBTeal1000HexRGB",
            "Teal100HexRGB",
            "Teal200HexRGB",
            "Teal300HexRGB",
            "Teal400HexRGB",
            "Teal500HexRGB",
            "Teal600HexRGB",
            "Teal700HexRGB",
            "Teal800HexRGB",
            "Teal900HexRGB",
            "Teal1000HexRGB",
            "BlueBlue100HexRGBBlue200HexRGBBlue300HexRGBBlue400HexRGBBlue500HexRGBBlue600HexRGBBlue700HexRGBBlue800HexRGBBlue900HexRGBBlue1000HexRGB",
            "Blue100HexRGB",
            "Blue200HexRGB",
            "Blue300HexRGB",
            "Blue400HexRGB",
            "Blue500HexRGB",
            "Blue600HexRGB",
            "Blue700HexRGB",
            "Blue800HexRGB",
            "Blue900HexRGB",
            "Blue1000HexRGB",
            "PurplePurple100HexRGBPurple200HexRGBPurple300HexRGBPurple400HexRGBPurple500HexRGBPurple600HexRGBPurple700HexRGBPurple800HexRGBPurple900HexRGBPurple1000HexRGB",
            "Purple100HexRGB",
            "Purple200HexRGB",
            "Purple300HexRGB",
            "Purple400HexRGB",
            "Purple500HexRGB",
            "Purple600HexRGB",
            "Purple700HexRGB",
            "Purple800HexRGB",
            "Purple900HexRGB",
            "Purple1000HexRGB",
            "MagentaMagenta100HexRGBMagenta200HexRGBMagenta300HexRGBMagenta400HexRGBMagenta500HexRGBMagenta600HexRGBMagenta700HexRGBMagenta800HexRGBMagenta900HexRGBMagenta1000HexRGB",
            "Magenta100HexRGB",
            "Magenta200HexRGB",
            "Magenta300HexRGB",
            "Magenta400HexRGB",
            "Magenta500HexRGB",
            "Magenta600HexRGB",
            "Magenta700HexRGB",
            "Magenta800HexRGB",
            "Magenta900HexRGB",
            "Magenta1000HexRGB",
            "Light mode neutralsSolidNeutral0HexRGBNeutral100HexRGBNeutral200HexRGBNeutral300HexRGBNeutral400HexRGBNeutral500HexRGBNeutral600HexRGBNeutral700HexRGBNeutral800HexRGBNeutral900HexRGBNeutral1000HexRGBNeutral1100HexRGBAlphaNeutral100AHexRGBNeutral200AHexRGBNeutral300AHexRGBNeutral400AHexRGBNeutral500AHexRGB",
            "SolidNeutral0HexRGBNeutral100HexRGBNeutral200HexRGBNeutral300HexRGBNeutral400HexRGBNeutral500HexRGBNeutral600HexRGBNeutral700HexRGBNeutral800HexRGBNeutral900HexRGBNeutral1000HexRGBNeutral1100HexRGB",
            "Neutral0HexRGB",
            "Neutral100HexRGB",
            "Neutral200HexRGB",
            "Neutral300HexRGB",
            "Neutral400HexRGB",
            "Neutral500HexRGB",
            "Neutral600HexRGB",
            "Neutral700HexRGB",
            "Neutral800HexRGB",
            "Neutral900HexRGB",
            "Neutral1000HexRGB",
            "Neutral1100HexRGB",
            "AlphaNeutral100AHexRGBNeutral200AHexRGBNeutral300AHexRGBNeutral400AHexRGBNeutral500AHexRGB",
            "Neutral100AHexRGB",
            "Neutral200AHexRGB",
            "Neutral300AHexRGB",
            "Neutral400AHexRGB",
            "Neutral500AHexRGB",
            "Dark mode neutralsSolidDarkNeutral-100HexRGBDarkNeutral0HexRGBDarkNeutral100HexRGBDarkNeutral200HexRGBDarkNeutral250HexRGBDarkNeutral300HexRGBDarkNeutral350HexRGBDarkNeutral400HexRGBDarkNeutral500HexRGBDarkNeutral600HexRGBDarkNeutral700HexRGBDarkNeutral800HexRGBDarkNeutral900HexRGBDarkNeutral1000HexRGBDarkNeutral1100HexRGBAlphaDarkNeutral-100AHexRGBDarkNeutral100AHexRGBDarkNeutral200AHexRGBDarkNeutral250AHexRGBDarkNeutral300AHexRGBDarkNeutral350AHexRGBDarkNeutral400AHexRGBDarkNeutral500AHexRGB",
            "SolidDarkNeutral-100HexRGBDarkNeutral0HexRGBDarkNeutral100HexRGBDarkNeutral200HexRGBDarkNeutral250HexRGBDarkNeutral300HexRGBDarkNeutral350HexRGBDarkNeutral400HexRGBDarkNeutral500HexRGBDarkNeutral600HexRGBDarkNeutral700HexRGBDarkNeutral800HexRGBDarkNeutral900HexRGBDarkNeutral1000HexRGBDarkNeutral1100HexRGB",
            "DarkNeutral-100HexRGB",
            "DarkNeutral0HexRGB",
            "DarkNeutral100HexRGB",
            "DarkNeutral200HexRGB",
            "DarkNeutral250HexRGB",
            "DarkNeutral300HexRGB",
            "DarkNeutral350HexRGB",
            "DarkNeutral400HexRGB",
            "DarkNeutral500HexRGB",
            "DarkNeutral600HexRGB",
            "DarkNeutral700HexRGB",
            "DarkNeutral800HexRGB",
            "DarkNeutral900HexRGB",
            "DarkNeutral1000HexRGB",
            "DarkNeutral1100HexRGB",
            "AlphaDarkNeutral-100AHexRGBDarkNeutral100AHexRGBDarkNeutral200AHexRGBDarkNeutral250AHexRGBDarkNeutral300AHexRGBDarkNeutral350AHexRGBDarkNeutral400AHexRGBDarkNeutral500AHexRGB",
            "DarkNeutral-100AHexRGB",
            "DarkNeutral100AHexRGB",
            "DarkNeutral200AHexRGB",
            "DarkNeutral250AHexRGB",
            "DarkNeutral300AHexRGB",
            "DarkNeutral350AHexRGB",
            "DarkNeutral400AHexRGB",
            "DarkNeutral500AHexRGB"
          ]
        },
        {
          "type": "p",
          "text": "Neutral colors are set up in a way that makes it easy to convert a light theme to a dark theme. If you use ourdesign tokensto apply colors, this mapping is done for you. There is a light neutral ramp and an equivalent dark neutral ramp. Neutral100 in the light neutral ramp should equate to DarkNeutral100 in the dark neutral ramp. Saturated colors are also easy to convert from a light theme to a dark theme using symmetry. We currently have 10 swatches set up in each palette. If the swatches are divided in half, each half becomes a mirror. For instance, if a button color is 700 in light theme, it will be 400 in dark theme. If a section message background is 100 in light theme, it will be 1000 in dark theme. Design tokens will handle these conversions for you. Using symmetry is a great place to start and will cover most use cases. However, it may not work for all use cases and color mapping can be adjusted accordingly. These colors have been dedicated to honor the memory of Rosie and Alexandria, and will be woven into Atlassian products and design for years to come. Alexandria reflects genuine love and dedication. Like its namesake, Rosie makes the world a brighter place."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/color-new/color-picker-swatches",
      "title": "Color new - Color picker swatches - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Color pickers let users choose colors for elements in their content. Use design tokens for color pickers to ensure the colors work across different themes and experiences."
        },
        {
          "type": "list",
          "items": [
            "Text color pickers",
            "Background color pickers",
            "Chart color pickers"
          ]
        },
        {
          "type": "p",
          "text": "A range of colors and shades are available. Determine which ones to include based on the needs of your experience. There are two accent shades of each text color for a total of 18 text token color options. See the availabletext accent tokensin the design tokens list. If you need additional text colors, you can add a third row of colors using ouraccent icon colors. These meet the right contrasts for large-scale text (at least 18px bold or 24px). There are four accent shades of each background color for a total of 36 background color options. See the availablebackground accent tokensin the design tokens list. There are three accent shades of each chart color for a total of 27 chart color options. See the availablechart accent tokensin the design tokens list. Text tokens should be used for text color pickers, and background tokens should be used for background color pickers. Use design tokens appropriate to the type of picker. Donât use design tokens solely based on how the color looks. Consider how colors will be applied by customers to ensure appropriate options are available to support the creation of accessible content. For example, check how text and background colors will be used together to ensure the emphasis levels required for accessible pairings are available. Provide color options that can be paired in a way that meets accessible contrasts. Donât offer colors in color pickers that do not support the creation of accessible content. While yellow accent and chart tokens are available, we recommend not including them in your color picker. Consider using accent tokens other than yellow, such as orange. Avoid using yellow accent tokens, as these become brown to meet contrast requirements. Always provide text descriptions for color options in a picker. Text descriptions should be included in a tooltip. Use emphasis levels to describe different shades of the same color, from subtlest to boldest. When applied to a background color picker, this might appear like:"
        },
        {
          "type": "list",
          "items": [
            "Subtlest {color}",
            "Subtler {color}",
            "Subtle {color}",
            "Bold {color}"
          ]
        },
        {
          "type": "p",
          "text": "Use color descriptions that work across light and dark themes, such as âsubtleâ and âboldâ.â¨ Donât use terms such as âlightâ and âdarkâ to describe colors, as these descriptions become inaccurate between light and dark themes. When defining text descriptions for inverse or default surface color options, use âdefaultâ as the color description where possible. In cases where this doesnât make sense, such as for inverse text, the description can be changed dynamically between light and dark mode."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/color-new/data-visualization-color",
      "title": "Color new - Data visualization - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Data visualization is the representation of information in pictorial or graphical format, such as charts, graphs, maps, and diagrams. These visuals aid in the communication of complex data so that insights can be more easily drawn. Because color can affect our perception of information, the appropriate use of color is critical in making a data visualization successful. Color in Atlassian product experiences are applied usingdesign tokens. For data visualization, chart color tokens are available to ensure appropriate color contrasts can be met.\n\nUse chart tokens for lines, bars or other UI representing the data. For elements of the chart interface such as axes and text, use border and text tokens."
        },
        {
          "type": "list",
          "items": [
            "Title:color.text",
            "Tick label:color.text.subtle",
            "Threshold or reference line:color.chart.neutral",
            "Legend:color.text",
            "Gridline:color.border",
            "Mark:color.chart.brand"
          ]
        },
        {
          "type": "list",
          "items": [
            "Single-color charts",
            "Categorical",
            "Status and severity",
            "Custom charts"
          ]
        },
        {
          "type": "p",
          "text": "Sequential and divergent chart colors are not currently supported. For data visualization requiring only one color, usecolor.chart.brandas the default color choice. This ensures all data visualization embodies our brandâs visual language. If the data represents status or severity, use the appropriatestatus or severity color tokeninstead. To highlight one piece of data from a data set, usecolor.chart.neutralfor the less important information so that the important data can stand out. Use a single color as the default for data visualizations. Only add more colors when needing to differentiate between data categories. Donât use more than one color in your data visualization if the additional colors donât serve any communication purpose. Use categorical chart colors when you need to differentiate two or more unrelated data categories from each other. Follow the same sequence as the numbers in the token names. This ensures each color is visually distinct from its neighbors across all color deficiencies. If the display order can't be controlled (in line charts for example), provideadditional visual indicators. Limit the number of colors presented in your data visualization to 5-6 by grouping additional categories together. Avoid using more than 5-6 colors in a data visualization. Too many colors can hinder comprehension. These chart colors use established color associations for status and severity, such as in progress, at risk, or high priority. Use these when you want to reinforce meaning through color in your data visualization. If more than one set of data exists for a given color association, use bold emphasis to represent the more extreme value. For example, High priority and Highest priority both use danger tokens, but Highest usescolor.chart.danger.bold. Itâs important to note that status and severity colors may be hard for users with color deficiencies to tell apart. For this reason, use othervisual indicatorsor considercategorical colorsas a better option. A generic set of chart color tokens is available to support data visualization experiences where end users can choose their own colors. They can also be used to build custom categorical color schemes, although our predefinedcategorical tokensare recommended for better accessibility and consistency. These tokens are available in every hue with three emphasis levels. See all custom chart tokens in ourdesign token reference listor get guidance oncolor picker swatches. Data visualization often allows users to drill into data by hovering or selecting a data point. Use chart hovered tokens to provide visual feedback for these interactions. An alternative approach is to fade out data that isnât being interacted with. Use ouropacity.disabledtoken for this implementation. For the full list of chart design tokens and their values, see ourdesign token reference list. Every token comes with a description to help you ensure youâre using the correct one. Our chart colors meet WCAG AA 3:1 contrast ratios when used on any of ourelevation surfaces(WCAG 1.4.11). The following sections provide more guidance to help you achieve better accessibility. While these chart colors pass 3:1 contrast ratios against surfaces, they donât against each other. For this reason, apply a space or border (color.border.inverse) as a visual separator between data elements. Apply a visual separator between chart colors Donât place chart colors adjacent to each other Our chart colors donât support accessible pairings with text, which need at least a 4.5:1 contrast. Consider placing text next to the chart element instead. For use cases where text is an essential feature (for example, calendar events), consider using our othercolor tokensinstead. Position text nearby chart data. Donât apply text over chart colors. Avoid using just color to communicate meaning in your data visualization. Incorporate other visual indicators such as shapes, line texture, patterns, or direct labels to support users in making sense of the data.Highchartsprovide some good examples of these accessible chart experiences. Additionally, providing the data in alternative formats, such as tables and text-based descriptions, will ensure all users can access the data in their preferred format. Incorporate visual indicators other than color into your data visualization. Donât rely on color alone to communicate meaning in your data visualization. Chart color tokens currently support two color themes: light and dark. Each token maps to a different value for each theme so their appearance differs depending on which theme is being used."
        },
        {
          "type": "list",
          "items": [
            "To learn the basics of tokens and themes, go todesign tokens.",
            "For detailed mappings from light to dark colors, seepicking colors for dark mode. Note that if you are using design tokens, you shouldnât have to map your own values."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/elevation",
      "title": "Elevation - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Elevations are the layered surfaces that form the foundation of the UI. They create a blank canvas where other UI will be placed, such as text, icons, backgrounds, and borders. Most elevations consist of surfaces and shadows. Together, surfaces and shadows give the impression of lift or depth. Elevations can guide focus through layering, or indicate that the UI can be scrolled, slid, or dragged. The elevations usedesign tokensto apply different surface levels. The highest two elevation surfaces, raised and overlay, are paired with shadows to create more depth. Shadows can be harder to see in dark mode, so dark mode elevations also rely on different surface colors. Imagine that the surfaces are distantly lit from the front â the higher the elevation, the lighter the surface looks. Raised and overlay surfaces are still paired with shadows for added depth and consistency in dark mode. There are four basic elevation levels:"
        },
        {
          "type": "list",
          "items": ["Sunken", "Default", "Raised", "Overlay"]
        },
        {
          "type": "p",
          "text": "There is also one \"overflow\" elevation for special cases. Sunken is the lowest elevation available. The sunken surface creates a backdrop (or well) where other content sits. Columns on a Kanban board are a good example of the sunken elevation. Only use sunken surfaces on the default surface level. Donât apply sunken elevations on raised or overlay elevations. To differentiate areas of the UI in other ways, use whitespace or borders instead. Althoughelevation.surface.sunkenandcolor.background.neutraltokens may appear similar in light mode, they behave differently in dark mode. Here are the main differences between the two: elevation.surface.sunkenis an opaque (solid) token that darkens in both light and dark modes. Use this token as a backdrop to group content or elements together (such as a kanban board) on the default surface. color.background.neutralis a token that uses a transparent color. It darkens in light mode and lightens in dark mode. Use this token when you need the background to adapt to different elevations, which is relevant in dark mode since surfaces change depending on what elevation youâre on. The default elevation is the baseline with respect to all other layers. It represents a flat UI surface with no visual lift, such as a Confluence page. Use theelevation.surfaceas the starting point for body content when building a UI. To create flat cards, pair with a border. Raised elevations sit slightly higher than default elevations. They are reserved for cards that can be moved, such as Jira issue cards and Trello cards. In special circumstances, they can be used for cards as a way to provide additional heirarchy or emphasis. Always pairelevation.surface.raisedwithelevation.shadow.raised. This is particularly important in dark mode, where raised surfaces are lighter to help differentiate elevations. Use raised elevations intentionally. If using for emphasis, limit to one section or focal point of the screen. Raised elevations can create visual noise, so donât use to group content when a border or white space would suffice. Overlay is the highest elevation available. It is reserved for a UI that sits over another UI, such as modals, dialogs, dropdown menus, floating toolbars, and floating single-action buttons. Always pairelevation.surface.overlaywithelevation.shadow.overlay. This is important in dark mode, where overlay surfaces are lighter to help differentiate elevations. Overlays can stack on top of other overlays. Overflow is a shadow indicating content hasscrolledoutside a view. It can be used for vertical or horizontal scroll. An example of overflow shadows is the horizontal scroll in tables on a Confluence page. If box shadows are not technically feasible, use the combination ofelevation.shadow.overflow.spreadandelevation.shadow.overflow.perimeterto replicate the overflow shadow. Elevations use surface color changes to communicate hovered and pressed states. Use the hovered and pressed elevation tokens to create these visual changes. Transitions between elevations can be used as an alternative to hovered and pressed tokens, but only for default and raised elevations (not overlays):"
        },
        {
          "type": "list",
          "items": [
            "Transition to overlay elevation on hover",
            "Transition to raised elevation on press"
          ]
        },
        {
          "type": "p",
          "text": "This approach should be used sparingly to avoid excessive animation. It should not be used for very small UI, as elevation changes are harder to see than surface color changes at this size. Use the recommended hovered and pressed tokens for interaction states on elevations. Donât combine elevation transitions and hovered and pressed tokens for interactive states. Use one or the other. Use the overlay elevation for any UI that is being dragged. Once moved, it returns to its original elevation. When scrollable content exceeds the available area, a border oroverflowshadow can be applied at the point the content is cut off to indicate there is hidden content that can be scrolled back into view. A border is the default approach for scrolled content and can be seen in modal sticky headers and footers, and top and side navigation. Overflowshadows are reserved for experiences where a border might be easily missed, such as in very small UI or tables that use borders to separate cells. Both approaches should apply the appropriate surface token where the content is being hidden. For the full list of elevation design tokens and their values, see ourdesign token reference list. Every token comes with a description to help you ensure youâre using the correct one. Raised and overlay elevations have dedicated surface and shadow pairings. When creating elevations, always pair matching surface and shadow tokens. Don't mix different shadow and surface elevation tokens. Elevation surfaces use ourneutral palettes. If a different color is needed, surface tokens can be swapped for any solid background token. When using background tokens, align to the behavior ofinteraction states for color tokens. The shadows and surfaces of raised and overlay elevations can create busy UI if not applied intentionally. Follow the recommended guidance when considering these elevations. Limit the use of overlay elevations by grouping related buttons together in a floating toolbar if they are required to sit over another UI. Donât have more than one floating button next to each other. Always make sure your elevation and background choices are accessible. Check the contrast ratio for UI on overlay surfaces in dark mode to ensure it meets accessibility requirements. Don't assume that because UI is accessible in light mode, it will be in dark mode. Some UI may need tweaking. The z-index determines the stacking order of elements. Elements with a higher z-index always sit in front of elements with a lower z-index. Different UI can have the same elevation style, but each UI should apply a different z-index to indicate the layer(s) order in a stack (or where the elements touch)."
        },
        {
          "type": "list",
          "items": [
            "Learn about the basics ofdesign tokens.",
            "See the list ofall design tokensfor full descriptions and values for all tokens."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/grid-beta",
      "title": "Grid - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "The layout grid structure has three elements:"
        },
        {
          "type": "list",
          "items": [
            "Columnsdivide the page into equal vertical sections, and are used to organise content.",
            "Guttersare the gaps between the columns, and separate content in a consistent way.",
            "Marginsdefine the outer edges of the grid, and prevent content from spilling out over the viewable regions."
          ]
        },
        {
          "type": "p",
          "text": "This grid documentation is for design only. Engineering should refer to thepage layoutcomponent. There are two types of grid: fluid and fixed. Both grid types use breakpoints to determine whether the layout needs to change between viewport sizes. More guidance forapplying gridin your designs. The fluid grid stretches across the screen to fill all available space in the main content area. This means the columns and the content placed within them scale and resize to fill the available space. They are best used for information-dense pages, such as kanban boards, to maximise screen real estate. Hereâs how a fluid grid is applied in Jira: The fixed grid applies the ideal maximum width to page containers according to the elements being displayed. There is both a fixed-narrow and fixed-wide grid, so content can be displayed using the most appropriate width. Fixed-narrowgrids are best used for content-focused pages, such as blogs and articles, to limit line length and improve readability. Some internal elements, such as headers, may break out of the grid to span across the page. Hereâs how a fixed-narrow grid is applied in Confluence: Fixed-widegrids are best used for content-dense pages, such as data tables, to balance screen real estate and readability. Internal table columns do not need to align to the grid. Hereâs how a fixed-wide grid is applied in Atlas: Eachbreakpointis the threshold at which the websiteâs layout changes, to ensure optimal user experience. In responsive design, a breakpoint range determines the most appropriate number of columns for that viewport size, plus recommended widths for margins and gutters. Our grid aligns to the 6 Atlassian Design System breakpoints: Our grid has 12 columns foraligning content. Content should span across 3 or more columns, up to a maximum of 12. For flexibility, mix and match the number of columns used to unlock a variety of layouts across different breakpoints. Content does not need to span across all 12 columns. It can span a smaller set of columns, resulting in a layout with content centered on a 12 column grid. Layout regions are the building blocks for any web page. They are composed of elements and components that share similar functions. Atlassianâs layout grid starts below the top navigation, and provides structure to the main content. Use an aside to display supporting content on a screen, such as help panels or secondary tasks. The layout grid typically fills the full width of the viewport, but when the side navigation or aside is present, the grid should resize to fit the remaining area of the page. Some panels can be manually resized by users. Start with these standard sizes: Asides have two states: default and collapsed."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/grid-beta/applying-grid",
      "title": "Grid beta - Applying Grid - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Our new grid component has inbuilt side panels, including the side navigation and aside, which automatically resizes the grid to cover the main content area. To set up the grid:"
        },
        {
          "type": "list",
          "items": [
            "Determine gridtype",
            "Select gridbreakpoint",
            "ConfiguresideNavigationandaside",
            "Align content to grid"
          ]
        },
        {
          "type": "p",
          "text": "There are 2grid types:"
        },
        {
          "type": "list",
          "items": [
            "Fluidgrids fill the width of the screen",
            "Fixedgrids stretch to a max-width and then remain centered"
          ]
        },
        {
          "type": "p",
          "text": "Use fluid grids for information-dense pages, such as kanban boards, to maximise screen real estate. Donât use fluid grids for content-focused pages. Long line lengths impair readability. Use fixed grids for content-focused pages, such as blogs and articles, to improve readability. Donât use fixed grids for information-dense pages. Limiting screen space will truncate important content. There are 6grid breakpoints:"
        },
        {
          "type": "list",
          "items": [
            "XXS,XSandSfor small viewports from 320-1023px",
            "M,LandXLfor large viewports from 1024+px"
          ]
        },
        {
          "type": "p",
          "text": "Span only the main content container. Exclude the side navigation and asides. Donât span the entire screen width or include asides. The grid spacing is suitable for main content only. Set the grid breakpoint to the full viewport width. Donât set the breakpoint to the container width. The grid spacing is scaled for the full viewport width. Change the breakpoint using the component variant. Donât change the breakpoint by resizing the grid container. The linked grid styles will map incorrectly. Provide designs for at least 2 breakpoints, preferably more and for different devices. Donât provide designs for only 1 breakpoint. Engineers need layout guidance for other breakpoints too. There are 2 types of panels:"
        },
        {
          "type": "list",
          "items": [
            "Side navigation: generally on the left, with collapsed and default states",
            "Aside: generally on the right, with collapsed and default states where widths change at different breakpoints"
          ]
        },
        {
          "type": "p",
          "text": "Follow the standard aside widths that are defined in the grid component properties. Donât create custom aside sizes. This leads to inconsistent page layouts. The vast majority of content should align to the grid, but exceptions can be made based on context. Usespacing tokensandlayout primitivesto structure content that doesnât align to the grid. Use auto layout in Figma to align content, with appropriate spacing tokens. Donât manually align content or set custom (non-token) values. This is not scalable and creates room for error. Align large content elements, such as cards to the grid. Donât align small content elements, such as button groups, to the grid. Instead, use layout primitives. Align content across any number of columns required. Donât allow content to overflow into gutters and margins, as this does not align with the grid."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/iconography",
      "title": "Iconography - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Icons should be used to maximize comprehension and reduce cognitive load when you need to call attention to a particular action, command, or section. Our icons are designed with our brand personality baked in. You can view all design system icons in theicon explorer. Use icons infrequently âÂ if youâre questioning an iconâs use, it probably doesnât need to be used at all. As a general rule, icons should be used in combination with meaningful text to support users progressing through the product in an accessible manner. Use icons with meaningful text labels. Icons without labels can be unclear. Avoid using icons solely for decoration or visual interest, as it detracts from their intention elsewhere. Consider the surrounding context of icons too; if icons are cluttered and not spaced well, it can lead to visual noise and confusion. Use a single icon for clarity. Too many icons in UI create visual noise. Icons can represent a single concept such as + which always represents âaddâ, or be thematic in concept such as â which might represent \"favorite\", \"like\", \"star\" etc. Using an icon appropriately allows our users to create a connection to a concept, so donât over-extend what an icon represents. Use a single icon per concept. Multiple icon variations should not be used for the same concept. There are very few widely recognized icons, so whenever possible, use a label or supporting text to ensure the icon's meaning is understood. If an icon is used without a visible label, an aria-label must be used for the icon. However, don't use aria-labels if you are rendering the icon with a visible text label to prevent accessibility label duplication. Find out more about writing meaningful text in ouraccessibility guidelines. Combining unfamiliar icons with text could confuse users depending on how they recognize the supporting icon, so make sure the icon and text label are coupled. To help enhance usability further, ensure the icon color has at least aWeb Content Accessibility Guidelines (WCAG) 2.1 AA standard color contrast ratio. Always consider icons from a global perspective. Whenever possible, use an internationally recognized icon in place of a locally recognized icon that may only apply to a specific background or culture such as a local currency symbol, â¬ Â¥ Â£, rather than always using $. Our icons can be used across web, iOS, Android, and macOS to represent similar concepts. Some icons, however, are already established conventions on specific platforms. In these cases, follow the conventions for the operating system using the OS-specific guidance. You can search for icons by filename or by usage in ouricon explorer. There are three types of icons in our design system: Standard sized icons are used as visual representations of common actions and commands to provide additional context and enhance usability. These icons can be scaled up or down in size if necessary. Object icons are specifically used to represent an object specific to an Atlassian product, such as âbugâ in Jira or âpull requestâ in Bitbucket. These icons are different from standard icons and file type icons. Files type icons are often used in the same context as most other Object icons. There are common file types (txt, mp3, mov, etc), and third party integrations' file types (docx, ai, sketch, etc). Our icons have variations to work within a given context. There will be a line version, which can be accompanied by a filled version. Use the line version of our icon in most cases as they are visually balanced, so more than one can be used when close together. Often, a filled version can be used to represent an action or command that has been carried out, such as using a filled star when a post has been âfavoritedâ. You can use color to further reinforce this interaction and change. There are three icon sizes in our design system: Small icons are best used when space is limited. We use small icons in our components such as a chevron-down in the select component or a cross-circle-filled in populated text fields. Medium icons are used in the majority of our interface. These are our standard size. Large icons are used sparingly to emphasize a concept or when space is plentiful. Wherever itâs used, consider the fidelity of the icon in the space itâs being used. (If there's plenty of room, a spot illustration might be more appropriate). In general, consider the context of the icon when adjusting the size such as the size ofÂ other icons surrounding it and the balance of other UI elements. To see a full list of icon colors available, go to thedesign tokens list. AUI icons use different sizing and certain icons may not be available. See theAUI documentation on icons."
        },
        {
          "type": "list",
          "items": ["View all design system icons in ouricon explorer"]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/illustrations",
      "title": "Illustrations - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Updated guidance:"
        },
        {
          "type": "list",
          "items": [
            "Product:In-product illustration guidelines (Atlassians only)",
            "Website illustrations:Atlassian Brand Guidelines"
          ]
        },
        {
          "type": "p",
          "text": "The illustration libraries are inAtlassian Brandfolder. Illustration is a key element of the brand system. Our illustrations range from detailed hero images down to in-product spot images with a consistent narrative of practicality, optimism, and friendliness used throughout. This is accomplished through shape, color, softness, and curves to achieve an inviting, engaging experience. Illustrations can:"
        },
        {
          "type": "list",
          "items": [
            "make complex ideas more accessible",
            "represent our brand - personality, voice, and platform - in an efficient and clear way",
            "scale up or down depending on the context",
            "affect tone and speak directly to users depending on the job to be done and the user's emotional state",
            "help to tell stories and thoughtfully convey ideas - they should not be used as decoration or without consideration"
          ]
        },
        {
          "type": "p",
          "text": "We use illustration across marketing touchpoints to support a cohesive, clear, and consistent story from start to finish. It's almost always used to support copy, and should never distract or overshadow the key message. Illustration plays a more prominent role in marketing than in product in order to help tell stories, and is most commonly used in the following places:"
        },
        {
          "type": "list",
          "items": [
            "websites, landing pages, microsites, service sites",
            "presentations",
            "demand generation assets (banner ads, etc)",
            "email",
            "social media",
            "infographic",
            "swag"
          ]
        },
        {
          "type": "p",
          "text": "Consider the following principles for how we want to be perceived through illustrations. Our illustration style takes larger-than-life achievements and makes them human and relatable. Being bold means taking on massive goals, feeling empowered, and being confident that those goals are achievable. It's not about being loud, noisy, or over-the-top. It's about setting a goal and acknowledging the inherent complexity in getting things done. We use clean shapes, plenty of white space, and balanced color ratios to ensure that the scene never feels too chaotic. Our illustrations feature future-forward narratives that center around teams working together to improve the world around them. The Atlassian illustration style reflects our belief that a team is capable of tackling any task, no matter how big or complex. Stylistically, bright color and a sense of low-gravity lend a lightness and buoyancy to our storytelling, driving home the point that when we work together, anything is achievable. Though our illustration style is slightly fantastical, it should never feel impractical or naive. We reinforce the real-life nature of teamwork through perspective and depth. We add in 'wink' through slight tweaks to the dimension of people and things. We ensure that the illustration narrative is both inspiring and empowering, which means that we thoughtfully use metaphors (such as unicorns) when appropriate, as well as clear, literal representations of real-life concepts. Atlassian illustrations can be broken down into several categories: Hero illustrations are intended to tell more complex stories. This allows them to be more metaphorical and fantastical in nature. The viewer should feel a sense of teamwork, adventure, achievement, and optimism. In the majority of cases, a central, larger-than-life object should be surrounded by a team working to build, fix, and assemble. Hero illustrations contain more than three people and their complexity should vary depending on the intended size. Spot heroes are slightly simplified versions of heroes, visually and metaphorically. These assets are perfect when you need to pack a punch with limited space. Often they are a slightly more literal representation of a single concept. Despite simplification, they still contain a small team working on or around a larger-than-life subject. Spot illustrations are the simplest and most literal expression of a concept. Because they are often used in the product as an empty state, or in a composition with other spot illustrations, they are small and simple. They usually do not include any people but occasionally include some atmospheric background elements, depending on the design. Meeples are a category in and of themselves and are created at both high and low fidelities for optimum flexibility. They can be used on their own, but are often combined with other illustrations. When you talk about 'Bob', 'a customer', 'my team' or 'me', you need something more immediately relatable than low-fi pieces of a larger concept. For this reason, full-size meeples are more human and are designed to register as actual people versus concepts of people. When space is tight, or a configuration calls for complexity, use simplified meeples so that individuals and teams can be displayed at a lower fidelity. Sometimes, we need to depict individuals in environments that tell a story and set context. For this, you can use high-fi meeple scenes. These scenes set meeples in relatable environments, which are helpful when you are trying to show personal interactions. Use these basic graphic design principals when creating compositions that use illustrations. Use pre-made compositions for meeples and scenes. Use multiple illustrations and hack together illustrations. Show actions, progress, and relationships using dotted lines, arrows, and small text. Pile illustrations on top of one another to show actions and relationships. Use illustrations at the recommended size. Shrink illustrations down to icon size or increase beyond the prescribed size. Simplify your story and use plenty of white space around illustrations. Make images disproportionately large to the rest of the content or use the image as a background element."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/logos",
      "title": "Logos - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "In everything we do, we aim to bring focus and clarity so our logos and symbols are direct, clear, and impactful. To accomplish this, our logo designs adhere to the guidelines below. There are two ways to access our logos:"
        },
        {
          "type": "list",
          "items": [
            "Download our logos from thelogo library.",
            "Use ourlogo component."
          ]
        },
        {
          "type": "p",
          "text": "The Atlassian logo is available in three color schemes: blue, neutral, and white. The blue version works best on a white or light background. The white version should be used on dark backgrounds. The neutral version can be used when the hierarchy calls for the logo to recede, but should always be evaluated for adequate contrast. Each of our product logos are also available in three color schemes: blue, neutral, and white. The blue version works best on a white or light background. The white version should be used on dark backgrounds. The neutral version can be used when the hierarchy calls for the logo to recede, but should always be evaluated for adequate contrast. To ensure that logos are clearly visible, surround them with clear space that is free of type, graphics, and other elements that might cause visual clutter. Use the capital \"A\" of the Atlassian wordmark to define the minimum clearance around the logo. Use the x-height of the logo wordmark to determine minimum clearance around the logo. When using full logos in a horizontal row, bottom-align to the baseline of the text in the logotype. In a stacked vertical column, left-align the left-most ascenders in the logotype. In a horizontal row, center align logo symbols. To maintain the integrity of the Atlassian logo and to promote the consistency of the brand, please do not misuse it. Some logo crimes are listed below. Use unapproved color combinations. Use a drop shadow. Use the logo on top of complex backgrounds. Crop the logo. Outline the logo. Disproportionately scale the logo. Contained product logo icons offer more flexibility than full logos because they are removed from the wordmark and allow accompanying information to live alongside the logomark in a way that keeps the information visually separate from the logo. Contained logomarks should be used in the follow scenarios:"
        },
        {
          "type": "list",
          "items": [
            "when additional information must be appended to or live closely alongside the logo",
            "when many logos are used together in a grid"
          ]
        },
        {
          "type": "list",
          "items": [
            "when logos live within an environment where rendering the product name natively in its environment is more legible and user friendly (such as a product UI component)",
            "when environmental restrictions do not allow for proper clearance guidelines to be followed for full logos"
          ]
        },
        {
          "type": "list",
          "items": [
            "when logos live within an external environment that mandates a container (such as external marketplaces, mobile app icons, and so on)"
          ]
        },
        {
          "type": "p",
          "text": "Contained logomarks are available in blue, neutral, and white. Our standard color isÂ our brandblue, which is reflected across most Atlassian-owned properties. The blue, grey, and white logo colorsÂ don'tÂ hold any semantic meaning across Atlassian properties. The color used should be determined by the environment the logos live in and the intent that the designer has for them. Contained logomarks are intentionally available in a square format with no corner radius so that they can be adapted to any environmentâs requirements. The size of the contained logomark is flexible but it's critical thatÂ the mark and the container are scaled proportionally to one another. Our standard shape and size is 80Ã80px with 3px corner radius across most Atlassian-owned properties. However, shape and size should be determined by the environment the logos live in. For instance, Apple mobile apps will require a different corner radius than the Google Marketplace. Generally, you may use one third of the width or height of the contained mark to determine the appropriate amount of space around the container. Information can be aligned to any edge of the container. Information may be middle aligned with the icon when the copy does not exceed the height of the container. When the information is longer than the height of the container, it may be top-aligned or stacked below and center-aligned. A lockup is a combination of multiple logo components or a logo combined with text in order to signify a relationship or create additional context. Lockups should be used as a single asset and abide by all standard logo rules. Attribution lockups allow us to unify our product brands with the Atlassian wordmark and ensure that customers connect the dots between Atlassian and our land products (Confluence, Compass, Trello, Jira, and all Jira family products). Only use existing attribution lockups providedhereand do not deconstruct them or create new ones. Attribution lockups should be used for when Atlassian context is not readily set by the environment, like on advertisements or other top of funnel touch points like videos and white papers. Attribution lockups arenotnecessary on Atlassian-owned properties likewww.atlassian.comor in the product user interface. Use the Atlassian product strapline when you need to include multiple product names (specifically, Jira, Confluence, and Bitbucket) with the Atlassian logo. Always use centered versions of the product names under the logo, but do not alter it in any way. For best results, the logo strapline should never be scaled below 280px wide. Atlassian programs and properties use a logo and a Charlie Sans lockup. On a white background, the program name is rendered in neutral (N800) with the logo in primary blue (B400). On darker backgrounds, both program and logo are white."
        },
        {
          "type": "list",
          "items": [
            "Download our logos from thelogo library.",
            "Use ourlogo component."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/spacing",
      "title": "Spacing - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "The consistent and intentional use of a spacing system creates a more harmonious experience for the end user. A spacing system also lays a foundation for responsive design and customisable UI density in the future, which will enhance the overall quality and accessibility of our products. Our spacing system is built around a base unit of 8 pixels. This base unit determines the spacing scale and ensures visual consistency across products. Building off of the 8px base unit, the main foundation of our spacing system is the spacing scale. This scale is a limited set of space values that can be used to lay out UI elements in a consistent way. Each spacing value is a multiple of the base unit and ranges from 0px to 80px to allow for flexibility while still maintaining consistency across different layouts. The 8px base unit also forms the basis of our space token system, as the base unitspace.100. Every space token is a multiple of this base unit, the number suffix representing the percentage of the base unit. For example,space.200is 200% of the size of the base unit, therefore represents 16px. Each space token should be used in place of the raw pixel or REM values when adding space between components or objects on a page. Usage examples are detailed below. Our space token system also includesnegative valuesfromspace.negative.025tospace.negative.400(-2px to -32px) available in code. These can be useful for breaking out of a container's padding or for overlapping elements. Before reaching for negative tokens, see if you can use theBleed primitivewhich is designed specifically to handle negative whitespace. Different use cases require different ranges of spacing units to achieve the best outcomes. Our spacing scale can be broken into three different size ranges: Use the tokens fromspace.0tospace.100(0px to 8px) for small and compact pieces of UI."
        },
        {
          "type": "list",
          "items": [
            "Gap between small icons and text",
            "Container padding of small components (ie badges, icon buttons, table cells)",
            "Gap between repeating elements (ie button groups)",
            "Padding within input components",
            "Vertical spacing between elements in a card (ie a title and description, a description and actions)",
            "Gap between the trigger and elevated element (ie between dropdown button & menu)"
          ]
        },
        {
          "type": "p",
          "text": "Use the tokensspace.150tospace.300(12px to 24px) for larger and less dense pieces of UI."
        },
        {
          "type": "list",
          "items": [
            "Container padding of larger components (ie buttons)",
            "Space between avatar/large icon and content (ie section messages)",
            "Vertical spacing between elements in cards",
            "Spacing between items in less densely packed or larger components"
          ]
        },
        {
          "type": "p",
          "text": "Use the tokensspace.400tospace.1000(32px to 80px) for the largest pieces of UI and for layout elements."
        },
        {
          "type": "list",
          "items": [
            "The space between content on the page (ie spacing between top of page and header)",
            "Alignment within larger pieces of content (ie alignment of content in Flag)"
          ]
        },
        {
          "type": "p",
          "text": "A layout is composed of UI elements and components as well as the space between them. Applying these guidelines helps customers quickly understand the relationship between elements, allowing them to scan and digest page content with ease. Use these guidelines in combination with space tokens to create layouts that are consistent and easy to understand. Users expect elements to be grouped semantically, or grouped in such a way that it provides greater context around the information provided. Using consistent spacing around elements lends them a visual similarity that helps the user understand their semantic relationship. For example, a table or list of items should be spaced consistently to create the sense of a cohesive unit or collection. Group similar items together using similar spacing. Group similar items differently. The distance between elements creates semantic meaning, elements that are placed close to one another are assumed to be related. Use this principle to create meaning by placing more related objects closer together, and less related objects further apart. For example, place elements that are part of the same flow or user action closer together so users can understand their relation. Group related items close together so that users can scan the content more easily. Group related items far apart. Users look for order in visual information to reduce the mental effort required to scan and process data. Therefore, the ordering of elements on a page can be used to encourage users to follow a certain flow or journey. Hierarchy is used to rank elements and influence the order in which users view them. The sizing of different elements lends more importance to larger elements by drawing focus, and less to smaller-sized elements. Similarly, varying the amount of whitespace around an element can be used to group elements together or separate them to impart greater importance. Use scale and whitespace to rank elements Give every element the same visual importance Patterns of alternating elements and white space create visual rhythm, which influences way users scan a page and focus their attention. Using a pattern of similar spacing between elements (such as in a table or list) creates a predictable rhythm for the user to follow. This consistent rhythm reinforces the similarity in importance of each of these elements. Varying the spacing between and sizing of objects creates a more organic flow and guides the user through a page or experience naturally. Variation creates points of attention and contrast between objects on the page and improves scannability. While using a spacing system improves consistency, the visual harmony of a page may not be perfect the first time. The visual weight of an element affects the size and spacing that may be required to create balance on the page, and may deviate from standard spacing patterns. Optical adjustments should be used to correct these imbalances and maintain the pageâs flow. Optical adjustments require using the spacing scale units and visual intuition to make minor changes to the spacing between objects in order to create visual harmony. Adjust spacing to create visual balance Use standard spacing without considering its alignment with other elements"
        },
        {
          "type": "list",
          "items": [
            "Learn more aboutdesign tokens",
            "List of all design tokens"
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/spacing/primitives",
      "title": "Spacing - Layout primitives - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Primitive components are a new type of component that assist with layout and the visual placement of child elements. They act as building blocks to compose different parts of the user experience, from the smallest design decisions (for example the spacing around an icon) to more complex layout decisions with multiple primitives used in conjunction (for example how a page is structured). Primitives are designed to work hand in hand withdesign tokens, to provide opinionated solutions for common low-level design decisions, such ascolor choiceorspacing between elements. They make it easier to implement our design tokens and best practices. Space primitives components are implemented in code, but it is important for designers to understand how they may be used in their designs. There are currently three primitives available for use, and each is responsible for a different layout behaviour. A generic container with managed access to design tokens. Box is a flexible and fundamental building block for a UI, and can be the primary way to apply styling to its contents. In the example below, a box encapsulates the card components and is used to set both the margin spacing, as well as the background color styling. Itâs important to note that a box could also be used for each of the cards themselves to apply further spacing and specific styling. A layout container that lays out child elements horizontally (inline with each other). In the example below, an inline contains the card components and sets the horizontal spacing between them. A layout container that stacks child elements vertically. In the example below, a stack is used to vertically divide the heading from the card components, and a second stack is used to vertically divide the card components, each with different spacing. For designers using Figma, auto layout is the tool of choice for creating responsive layouts. Auto Layout works by applying vertical or horizontal layouts to Frames. These Frames can then be nested and have specific spacing applied (using thespace between itemscontrol in dimensions) in order to create more complex but flexible designs. Primitives behave in very similar way to frames using Figma auto layout:"
        },
        {
          "type": "list",
          "items": [
            "A Box can be thought of as a frame through which specific styling can be applied to the contents, and thehorizontal paddingandvertical paddingapplied around it.",
            "An Inline can be thought of as a frame withhorizontal space between itemsapplied.",
            "A Stack can be thought of as a frame withvertical space between itemsapplied."
          ]
        },
        {
          "type": "p",
          "text": "When working in Figma a designer is combining the concept of a box as a container with either an inline or stack to create layouts. In code, these layers are represented separately, with a box often being an outer container with an inline or stack nested inside (with potentially more nested primitives inside). Just as itâs very unlikely to use only a single Frame in your design, Primitives are designed to be used in conjunction with one another in order to fully represent more complex designs. Because Primitive components are not surfaced in Figma, designers will not be using these Primitives directly. However, itâs important for designers to understand how they work and how they might be used in code, as Primitives will increase parity between components in designs and code. The most useful way designers can help with the implementation of Primitives is using Figma Auto Layout in their designs thoughtfully, and ensuring that designs usespacetokens in their designs where possible."
        },
        {
          "type": "list",
          "items": [
            "Implementing Primitive components in code",
            "Use box for a generic container with access to design tokens",
            "Manage horizontal layout using an inline component",
            "Manage vertical layout using a stack component"
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/typography-beta",
      "title": "Typography (beta) - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "As we move towards our newmodernized typography system, we continue to support ourlegacy systemas well. These are both are documented below. All guidance applies to both systems, but examples are displayed using the modernized system. Follow these principles to create legible and visually balanced typography. Use in conjunction with the Atlassiancolor tokensandspace tokensin product experiences. When you need to express the Atlassian brand, such as in marketing, we use our custom brand font, Charlie Sans. Only authenticated users can download ourbrand fonts. For all in-product experiences, use the typography system fonts. This ensures UI is optimized, performs well and is frictionless as you move between Atlassian products regardless of platform. A font stack is an ordered list of fonts containing the primary font, and subsequent fallback fonts. Below is our product font stacks, we use sans serif fonts, except when representing code where we use monospaced fonts. Text styles and typography tokens are made up of specific font values, including font family, font size, and line height. Where text styles appear in design and Figma, typography tokens are used in code. Use heading, body and code text styles and tokens in your designs. Each style has optimized spacing values based on font size, and is designed to work with our other foundations such as spacing and color. These typographic decisions are built-in into typography tokens and will enable typography theming in the future. We also recommend using heading and text components in code to simplify implementation of typography tokens. Learn more aboutapplying typography tokens and text styles. Typography tokens userem unitsinstead of pixel values for font-size and line-heights. Font size is calculated dynamically by multiplying the rem unit with the browser default size of 16px (i.e. 1rem is equal to 16px). Unlike pixels which are absolute (or fixed), rem are relative units that adjust according to the root element (html) size. Using rem units allow users to adjust the size of text depending on their needs or browser size, improving the responsiveness and accessibility of designs. Use headings for page titles or subheadings to introduce content. Headings are sized to contrast with content, increase visual hierarchy, and help readers easily understand the structure of content. Headings come in a range of sizes, for use in different contexts:"
        },
        {
          "type": "list",
          "items": [
            "XXLandXLare suitable for brand and marketing content.",
            "XLandLare suitable for page titles in products such as a form title.",
            "Mcan be used in large components where space is not limited and perfectly balances with Body M, such as modals.",
            "SandXSare for titles in small components where space is limited, such as flags.",
            "XXSshould be used sparingly and is suitable matched with Body S, for example, in fine print."
          ]
        },
        {
          "type": "p",
          "text": "Please note: H100 and H300 styles have been deprecated and are no longer available. We recommend you update instances of H100 and H300 to thefont.heading.xxsmalltoken. Use body text for main content. They typically appear after headings or subheadings as detailed descriptions and messages, but also as standalone text in components. Body text includes additional paragraph spacing for readability and flow in blocks of text. Body text comes in three sizes, for use in different contexts:"
        },
        {
          "type": "list",
          "items": [
            "Body Lis the default size for long-form content. Use this size for a comfortable reading experience such as in blogs.",
            "Body M (Default)is the default size in components or where space is limited, for detailed or descriptive content such as primary descriptions in flags.",
            "Body Sshould be used sparingly and is for secondary level content such as fine print or semantic messaging."
          ]
        },
        {
          "type": "p",
          "text": "* See paragraph spacing below. Paragraph spacing is set in Figma text style libraries only. To represent paragraphs in code, use separate text components for each paragraph and manage paragraph spacing with thestack component. Font weight is applied through the choice of text style in Figma, or through font weight tokens in code. Three weights are available for body text:"
        },
        {
          "type": "list",
          "items": [
            "Regularweight is for generic paragraphs to contrast with headings, and medium text in components.",
            "Mediumweight is for alignment with iconography. Use this weight in most components and whenever text could be seen beside line icons.",
            "Boldweight is for unique cases where text needs to be differentiated or given more emphasis. Use this weight sparingly."
          ]
        },
        {
          "type": "p",
          "text": "The code text style is reserved for representing code in ourcode block component. Code can also appearinlinefollowing the style settings of the block of text it sits within. In this context, this token is relative to its container's font size. Assuming a container font size of 14 px (0.875 rem), this token will have a font size of 12.25 px. The line height is equal to the container's font size."
        }
      ]
    },
    {
      "url": "https://atlassian.design/foundations/typography-beta/applying-typography",
      "title": "Typography beta - Applying typography - Foundations - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Use text styles when designing in Figma, and typography tokens and components in code. Use theheading componentfor heading text, and thetext componentfor body text.To learn how to apply our typography styles in Figma, go to our Figma Typography Playground for step by step instructions and helpful tips. The following table outlines our Figma text styles, their corresponding typography tokens, and suggestions for when and where to apply them. ^ Modernized typography system only. Follow these guidelines when using tokens and text styles, to create a seamless and consistent user experience across platform experiences. Use the Atlassianspace tokensandcolor tokensin conjunction with typography to align to the design foundations. Typography tokens and components have been designed with accessibility considerations. Some people need to read text on different screen sizes or at different magnification levels. Coding your typographic experiences correctly helps assistive technology interpret the structure of your content. To ensure product experiences are accessible for all our users, ensure you do the following:"
        },
        {
          "type": "list",
          "items": [
            "Accommodate people who use assistive technologies and their reading preferences with responsive text, typography tokens use relative values (rem) to determine font size on different browser default sizes.",
            "Use text styles (in Figma) and typography tokens and components (in code) to ensure a legible font family, font size and visual hierarchy between text styles.",
            "Usetext color tokensto achieve minimum color contrast for legibility.",
            "Apply correct HTML tag hierarchy, to ensure assistive technologies interpret your experiences correctly.",
            "Follow established experience patterns for interactions using text."
          ]
        },
        {
          "type": "p",
          "text": "The general guidance for comfortable reading is to use a minimum font size of 16px for long-form text such as blogs. The smallest font size available in the Atlassian Design System typography tokens is 12px, avoid using except for fine print. Visit ouraccessibility documentationto understand more about accessible design. Use headings for page titles and subheadings to introduce content. They help readers scan and understand the structure of content. Write succinct and clear headings to summarise content on a page or section. Donât write overly long titles. Use shorter titles that can be viewed easily on all screen sizes. Use large headings to draw attention to content. Donât use heading sizes smaller than the body font size. Use headings equal or less than twice the body font size. Clearly differentiate heading sizes to create hierarchy. Donât use similar heading sizes for different heading levels. Use between 2-4 heading size difference between levels. Use body text for the main content. You can use body text after headings or subheadings, for example as detailed descriptions and messages, but it may also be used as standalone text in components. In Figma, paragraph spacing is set for body text styles only. To represent paragraphs in code, use separatetext componentsfor each paragraph and manage paragraph spacing with thestack component. Use body text for paragraphs of text such as descriptions or blogs. Donât use body text for headings. Thatâs what headings are for! Use body text in components such as buttons, inputs, lozenges and menus. Donât use heading text in components, instead use body text with a heavier font weight to create greater contrast. Use the text styles and typography tokens. Body text has optimized line height for reading comfortably. Donât adjust line heights to fit text, cramped text is more difficult to read. Use code text to represent code only, either inline or in code blocks. There are four font weights available in our system: regular, medium, semibold and bold. We selected these based on our fallback fonts to minimise the visual differences across operating systems. We recommend using the following default weights for our text styles:"
        },
        {
          "type": "list",
          "items": [
            "Body inregularweight for paragraphs.",
            "Body inmediumweight for use in components and alongside icons.",
            "Body inboldweight should be used in unique cases where text needs to be differentiated or given more emphasis. Use this weight sparingly."
          ]
        },
        {
          "type": "p",
          "text": "Semibold weight is also available but use this weight with caution. Our fallback fonts donât support this weight and will default to bold. Use bold weight in headings to contrast with regular weight body content. Donât use regular or bold weights when text is beside an icon. Icon stroke width is designed to align with medium weight text. Usecolor.linktokens for inline links, and seeLinkandLink buttonfor more guidance. Use design tokens to follow inline link styling and provide visual clues to identify links in static text. Donât show inline links in the same colour as surrounding text or ignore styling patterns for interactive text. Atlassian writing guidance specifies avoiding the use of all caps. For readability, accessibility and localisation reasons, avoid the use of all caps unless text is an acronym. However, the lozenge component will continue to use all caps for the foreseeable future. Use all caps for acronyms, such as issue IDs. Donât use all caps for full words. Never truncate text. If you do use truncated text, for example if you are displaying user generated content of an unknown length, make sure that there's another option for people to expand and read the text. Display content using the maximum character count allowed within components, especially if it is important information. Donât truncate content, if you must truncate make sure there is an option for people to expand and read the full text. Wide lines of body text are difficult to read. Readers may choose a wide layout but itâs good practice to design for the ideal line length. For the English language, optimal line length is between 60 and 80 characters per line including spacing, â¨or approximately 10-12 words. This can vary based on font, font size and how it will be displayed. For example, line lengths need to be shorter when reading text on smaller devices. Creating hierarchy means using different font weights and sizes to let people easily see what content is the most important. Our typography system allows visual hierarchy to be achieved in multiple ways. Using some or all of the below suggestions are ways to create extra levels of meaning and hierarchy to your work. Use text styles and font weights to draw attention to titles and important content. Use text size and color to differentiate between primary and secondary level content. Read more about writing style and content guidelines in ourcontent documentation. The Atlassian Design Systemâs focus is product UI, however our service sites use a mixture of both marketing and product typography. The appropriate typography can be assessed on a case-by-case basis depending on the following considerations:"
        },
        {
          "type": "list",
          "items": [
            "Atlassian messaging vs. user-generated or modified content",
            "editorial content vs. technical content",
            "brand marketing visual styles vs. product UI visual styles",
            "consistency across sites vs. one-off solutions"
          ]
        },
        {
          "type": "p",
          "text": "Please work directly with the Creative & Design teams when assessing typography for these types of properties. VisitAtlassian Brand documentationfor more assets and guidance (authenticated users only). For all new features, we recommend using Atlassian Design System and otherÂAtlaskit components. For existing code, you can continue to useÂAtlassian User Interface (AUI)."
        }
      ]
    },
    {
      "url": "https://atlassian.design/patterns",
      "title": "License - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/patterns/first-impressions",
      "title": "First impressions - Patterns - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Great first impressions can influence a person's decision to engage with, keep using, and recommend our products. These experiences should be contextual, focus on one to three key benefits, and make people feel supported, motivated, confident, and empowered. Three first impression scenarios that cover the most common user journeys:"
        },
        {
          "type": "list",
          "items": [
            "new product signup",
            "new experience",
            "new, updated, or removed features"
          ]
        },
        {
          "type": "p",
          "text": "All teams can use the first impression guidelines to drive people towards their \"aha!\" moment - when they know how something delivers value to them. Know your target audience and demonstrate the value proposition to them when they need it. Understand the user's goals, what they want to accomplish, and how the feature or change will benefit them. Think about what people were doing before encountering your first impression pattern and what they'll be doing next. First impression patterns should be dismissible, so we get out of people's way. Onboarding and change management should be built into the design and development cycles. It should not be an afterthought. Consider the whole user journey when creating a first impression. Define the priority and quantity of all push notifications the user will encounter based on their needs. Choose a first impression pattern to get started. Use this pattern to introduce an entire set of feature changes, which can include new functionality, look, or interaction points. This includesÂ medium or largeÂ experiences that a majority of people will encounter. For information on how we size first impressions, go touser journey sizes. Go to thenew experience pattern. Use this pattern to introduce existing users to a new or updated feature. This includesÂ changes that impact only some users, so would besmall or medium user journey sizes. Go to thenew or updated feature pattern."
        }
      ]
    },
    {
      "url": "https://atlassian.design/patterns/first-impressions/new-experience",
      "title": "First impressions - New experience - Patterns - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "A new experience can includeÂ medium or largeÂ experiences that most people will encounter. This user journey is considered amedium or large first impression. For small first impressions, like changes to an existing product experience, use thenew or updated feature patternÂ This pattern is for people who already use the product. Avoid using this pattern for new users. We should only show new users a new product first impression, so we don't overwhelm them with content about experiences they haven't seen before. Aim to make people feel supported, motivated, and empowered. Help existing users understand the value of the new feature set, and how it benefits them and their team. Focus on the top two to three benefits for the user and show these in context. Admins and end users may have different reasons to be excited about a new experience. Target the message to your audience:"
        },
        {
          "type": "list",
          "items": [
            "For admins, focus on configuration and control.",
            "For end users, focus on the feature set's benefits and how it empowers them.",
            "Don't show change management messaging to new users."
          ]
        },
        {
          "type": "p",
          "text": "Introducing a new experience consists of two basic parts:"
        },
        {
          "type": "list",
          "items": [
            "An appropriate entry point to notify the user of the new feature set.",
            "Educational components to communicate the top benefits of the feature set."
          ]
        },
        {
          "type": "p",
          "text": "Choose an appropriate place to notify people of the new experience, but don't take over their work. Entry points for new experiences should be dismissible. Some entry points to consider include:"
        },
        {
          "type": "list",
          "items": ["benefits modal", "spotlight"]
        },
        {
          "type": "p",
          "text": "If you can't decide on the best entry point for your new experience, run an early signal test with existing users. In this example, an admin gets a notification about a new feature set. They can either try out the experience or dismiss the notification. Use the spotlight component to highlight the top two to three benefits of the new experience in context. Here, the admin chooses to try out the new feature set and is shown in context where it lives in the product. They are shown two to three dismissible spotlights that showcase the top benefits."
        },
        {
          "type": "list",
          "items": [
            "All first impressions should complement rather than compete with each other. Know what other first impressions or notifications people might encounter, so you can prioritize the right one at the right time and minimize distraction.",
            "If your product supports in-app help, point out where people can find more information when they dismiss the tour.",
            "Make sure people are prepared for the change with an opt-in to opt-out strategy before forcing everyone into the new experience."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/patterns/first-impressions/new-or-updated-feature",
      "title": "First impressions - New or updated feature - Patterns - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "The new or updated feature can consist of small or mediumÂ changes. For information about sizing new features, seeuser journey sizes. For medium to large impressions, like an entirely new set of features, use thenew experiencepattern. This pattern is for people who already use the product. Avoid this pattern for new users. Only show new users a new product first impression so they aren't overwhelmed with content about features they haven't been introduced to. This pattern should help someone feel supported, motivated, and empowered. Help existing users understand the value of the feature, preferably in the context of a task. Focus on the top benefit and show them how to achieve it. Existing admins, power users, end users, and novice users may have different reasons to be excited about your new feature:"
        },
        {
          "type": "list",
          "items": [
            "For admins, focus on configuration and control.",
            "For power users, focus on shortcuts and improving the way they work.",
            "For end users and novice users, focus on the benefits for their teams and how it empowers them.",
            "Don't show change management messaging to new users."
          ]
        },
        {
          "type": "p",
          "text": "Introducing a new or changed feature consists of two basic parts:"
        },
        {
          "type": "list",
          "items": [
            "An appropriate entry point to notify the user.",
            "An educational component to communicate the top benefit of the feature."
          ]
        },
        {
          "type": "p",
          "text": "Choose an appropriate place to notify people of the new feature, but don't take over their work. Entry points for new feature announcements should be passive and temporary (they shouldn't live forever). Use the spotlight pulse to subtly highlight where your new feature is accessed. In the example below, the user navigates to their project and a spotlight highlights where the feature lives. Use the spotlight component to highlight the top benefit of the new feature in context. When people click the spotlight pulse, they see a short message summarizing the new feature. They are encouraged to try the new feature or learn more about it. For features that provide shortcuts for power users or otherwise improve the way they work, consider introducing a spotlight after recognizing a pattern of repeated behavior. We call these \"inflection points\". In this example, an admin moves an issue fromto dotoin progress. The admin then opens the issue and assigns it to someone else. The admin repeats this action two more times. At this point, we can recognize that the admin is repeating the action multiple times and suggest, using a spotlight, a way to automate this task. All first impressions should complement rather than compete with each other. Know what other first impressions or notifications your user might encounter, so you can prioritize the right one at the right time and minimize distraction."
        },
        {
          "type": "list",
          "items": [
            "Only highlight the feature and its top benefit in one place.",
            "If the user needs to navigate to other parts of the product, consider the first impression of anew experience.",
            "If your product supports in-app help, point out where people can find more information when they dismiss the educational component.",
            "Allow power users to uncover advanced features progressively rather than announcing changes they may not be interested in."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/patterns/first-impressions/user-journey-sizes",
      "title": "First impressions - User journey sizes - Patterns - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "We group first impressions by size to determine what type of impact they may have on the user's experience or the usability of the product. A change that impacts a small part of our products or only a subset of users. A change that significantly impacts how all or a majority of users interact with a part of our products. Ensure you have clearly defined the main one or two benefits of this new experience and communicate them to users. If you can validate these benefits through user testing, that's even better! A change that dramatically impacts how all users interact with and use our products. Large changes should be rolled out on a well-planned schedule, ideally with an opt-in and opt-out strategy. Ensure the customer impact is clearly understood and communicated before any change rolls out. Communicate the main two to three benefits of this new experience in context. If you can validate these benefits through user testing, that's even better! An impression that onlyÂnewÂ users encounter. Communicate the benefits and value our products can provide new users."
        }
      ]
    },
    {
      "url": "https://atlassian.design/patterns/forms",
      "title": "Forms - Patterns - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Forms are used to get information and guide people with minimal fuss. Designing forms well requires making decisions about structure, sequence, interface elements, field labels, help, and feedback."
        },
        {
          "type": "list",
          "items": [
            "Labels:Standard label alignment is left-aligned with the field underneath. For the placeholder text, use sentence case and left-align.",
            "Required field label:Mark required fields with an asterisk (*). If all fields in the form are mandatory, this isn't necessary.",
            "Disabled fields:Show disabled fields if users need to know what controls might be available to them.",
            "Field length:The length of the field should reflect the intended length of content. Available lengths are 75px, 150px, 250px, 350px, and 500px."
          ]
        },
        {
          "type": "list",
          "items": [
            "Autofocus the first field by default. This allows users to tab through elements in the form in a logical way.",
            "Never disable a submit button, even if all of the required fields aren't filled in. Instead, describe what needs to be done usingvalidation and error messages."
          ]
        },
        {
          "type": "p",
          "text": "Common form components includetext fields,Âcheckboxes,Âradio buttons,Âselects,Âdate pickers,Âtoggles, andÂbuttons."
        },
        {
          "type": "list",
          "items": [
            "Title:Describes the form. If the form is the main item on a page, use an h2 tag, otherwise use h3 and adjust the rest of the page hierarchy accordingly. Follow the title with a short description.",
            "Group headline:Describes a group of controls and fields within a form. These should be grouped to help users understand what is required of them in a logical way. Try to make the headline concise and informative, but, if you need to, you can add a short paragraph of text to explain the group.",
            "Buttons:Use a primary button for the main action, and a link button to cancel. The primary button should be left-aligned along with the left side of the form field. If additional actions are required, put the primary button first, then any standard buttons, then the link button. The only exception is a multi-step form where the 'Back' standard button sits at the very left, while the rest of the buttons are aligned to the left."
          ]
        },
        {
          "type": "p",
          "text": "Buttons are sorted by importance from right to left, with the most important button (primary) on the right. Exceptions to this are single-page forms, flags, cards and section messages where buttons are left aligned; with the primary button on the left. When users access a form, it can be daunting to be shown a large number of fields that need to be filled out. The threshold for when a form is consideredÂtoo longÂ depends on the audience and the context. There are various techniques for lessening the impact of long forms. Make sure people know their status at each step of a form. This approach can be used to spread form fields across more than one screen with aprogress tracker. When using this pattern, each screen should show fields that logically belong together. This pattern is also good for saving form progress along the way. A form can reveal more content as users go through the form and use its fields and controls. This technique can be used when it is not necessary to see all controls unless users have made specific decisions, for example, if they ticked a particular checkbox additional information would be revealed. Use validation and error messages to indicate when a form or field submission fails or requires additional information to be shown."
        },
        {
          "type": "list",
          "items": [
            "Unfocused text field",
            "Error message and icon",
            "Focused text field"
          ]
        },
        {
          "type": "p",
          "text": "When a user selects the text field and starts typing or changing content, the focus color changes to blue. When validating text fields in real-time, message icons will switch depending on the message type. For example, helper text changes into an error message when the content being input doesn't fit the criteria. Error and warning messages disappear when the criteria is met. Primary buttons are left adjusted inAUI forms."
        }
      ]
    },
    {
      "url": "https://atlassian.design/patterns/messages",
      "title": "Messages - Patterns - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Message types include authentication, information, confirmation, warnings, and error messages. Identify the type of content the message falls under in order to choose the relevant color andÂicon. Banners appear at the top of the screen and shift the content below it. They should only be used for critical system-level messaging (warnings and errors) about loss of data or functionality. Learn more aboutbanners.Â Inline dialogs consist of an icon and a message that's revealed when a user hovers over the icon. UseÂ inline dialogs to alert people to a required action or important information. Learn more aboutinline dialogs. Flags are used for confirmations, alerts, and acknowledgments that require minimal user interaction. These event-driven messages appear by overlaying content at the bottom left of the screen, emerging from the navigation sidebar. Learn more aboutflags.Â Section messages are used to alert the user of something that has happened in a specific section of the screen. They appear above the affected area (for example, Issue experience in Jira). Learn more aboutsection messages.Â Message types use colors and icons to help indicate content and urgency. The available message types are information, success, warning, danger (error), and discovery (new). Setting the right color and icon for a message ensures people understand the nature of the message at a glance, and that they take appropriate action. Make sure you use the right color role for your situation. For example, yellow typically implies warning, while green can imply success. See our color guideline forall color roles. The appearance of icons changes depending on the current state. This visual indicator makes it easier for people to interpret the message."
        },
        {
          "type": "list",
          "items": ["Resting", "Hover", "Selected", "Active", "Focus"]
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources",
      "title": "No Title",
      "content": []
    },
    {
      "url": "https://atlassian.design/resources/color-palette-resources",
      "title": "Color palettes - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "We are no longer maintaining these guidelines and recommend referring to ourColor palette guidelinefor the latest colors. Both RGB and CMYK palettes are available for Adobe products (.ase). We've also included an RGB palette for Sketch (.sketchpalette). Simply install theÂSketch Palette pluginÂ to use it. Confused about what color to use? Become a master of the dark (and light) arts of color by using ourÂcolor guidelines."
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/contact-us",
      "title": "Contact us - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Before you reach out, look for an answer in these places:"
        },
        {
          "type": "list",
          "items": [
            "Quick start guidance for designers, developers, and content designers:Getting started guides",
            "Guidance on colors, grid, and visual styles:Foundations",
            "Migration guides for tokens:Design tokens",
            "Documentation for UI elements (for example, buttons and text fields):Components",
            "Documentation and Figma libraries for Jira, Confluence, and other products:Atlassian platforms and product design systems and libraries(only accessible to Atlassians)."
          ]
        },
        {
          "type": "list",
          "items": [
            "Ask questions about Atlassian Design System:#help-design-system",
            "Join our design critique sessions to get feedback on your designs:Sign up for design system office hours"
          ]
        },
        {
          "type": "p",
          "text": "Search the forum for answers or post a question inAtlassian Developer Community forum. We are not able to accept large design or code contributions at the moment. Atlassians can submit bug reports through the channels on this page. Follow our progress towards acontribution model."
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/contribution",
      "title": "Contribution - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "At the moment, we're only accepting contributions from internal Atlassians. If you're an external maker and have some feedback, let us know in the feedback collector below, and we'll take it on board. Our design system is a library of content, design guides, code, and tools to help you make Atlassian product experiences. A design system is never complete. It depends on contributions from Atlassian product teams. Read this page to learn how you can contribute â weâd love your help! You can get involved in two ways â participation and contribution: We want open lines of communication between the design system and the products consuming it. You can:"
        },
        {
          "type": "list",
          "items": [
            "Ask a question in our Slack help channel, #help-design-system.",
            "Attend our fortnightly Design System sparring sessions to get more robust feedback from a systems lens."
          ]
        },
        {
          "type": "p",
          "text": "It is currently difficult to contribute to the design system â we understand and are working on improving this. We are currently accepting contributions through:"
        },
        {
          "type": "list",
          "items": [
            "Fixes, such as a bugs in the code, erroneous Figma library components, or confusing documentation sentence changes."
          ]
        },
        {
          "type": "p",
          "text": "At this time, we are unable to take these types of contributions:"
        },
        {
          "type": "list",
          "items": [
            "Small enhancements, such as adding a new icon to the existing icon library.Â This change doesnât break existing behavior and can be confined to minimize impact across the design system.",
            "Major enhancements, such as adding a new feature to a component, or altering the timeout on a Flag requires system-wide coordination. This impact can be seen across code, design, and guidelines.",
            "New components or patterns, such as data visualization."
          ]
        },
        {
          "type": "p",
          "text": "Considering a design system component or pattern takes time. We have to think about every product and its use case, multiple brands, API design, and guidelines that apply to everyone. Empowering you to ship value to your customers is a priority. To avoid being a bottleneck, weâd love to be involved in your product implementation through our participation channels. If you need to add something or believe something is missing, get in touch through our participation channels above so that we can offer support and connections."
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/figma-library",
      "title": "Figma tooling - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Atlassian Design System Figma libraries and tools to apply our foundational styles, design tokens, components, and other helpers. Our newest libraries match 1:1 with the React components developers use, simplifying handoff and implementation."
        },
        {
          "type": "list",
          "items": [
            "Anyone with a Figma account can use our communityFigma libraries.",
            "Atlassian employees need an account with an Atlassian email address to access our private libraries. To get access, seeFigma onboarding at Atlassian.",
            "Understand the basics ofdesign tokensbefore using them in Figma."
          ]
        },
        {
          "type": "p",
          "text": "Access our private design system Figma libraries for components, foundations, and styles."
        },
        {
          "type": "list",
          "items": [
            "Use the newest ADS components, styles, and paint styles with design tokens:Figma libraries (design tokens).",
            "Use the legacy ADS foundations and components:Figma libraries (without design tokens).",
            "Atlassian Design Tokens plugin: use this to apply design tokens, swap designs to dark mode, and migrate old Atlassian colors to tokens: Atlassian design tokens Figma plugin.",
            "Communicate the functionality, hierarchy, and behavior of elements in designs:Accessibility annotations Figma library."
          ]
        },
        {
          "type": "p",
          "text": "Our newest public Figma libraries use design tokens to apply our new color and spacing systems. Use the ADS Foundations and ADS Components libraries together to apply our foundations, components, and design tokens."
        },
        {
          "type": "list",
          "items": [
            "Cloud apps or anyone using our new design tokens system, use our ADS Foundations and ADS Components libraries labelled fordesign tokens support.Use ourAtlassian design tokens Figma pluginwith these libraries to help with applying design tokens and dark mode previews.",
            "Use ourAtlassian design tokens Figma pluginwith these libraries to help with applying design tokens and dark mode previews.",
            "Data Center apps or anyone using the old colors (B100, B200), use the libraries without design tokens."
          ]
        },
        {
          "type": "p",
          "text": "To access these libraries, seefigma.com/@atlassian."
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/fonts",
      "title": "Fonts - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Our font downloads have moved togo/fonts(only accessible to Atlassian employees). To better understand which fonts you should be using in each context, please read theÂtypography guideline. "
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/logo-library",
      "title": "Logo library - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Before using these logos it's good practice to become familiar with thelogo guidelines. Each download includes approved formats and color options."
        },
        {
          "type": "list",
          "items": ["Read ourlogo guidelines.", "Use ourlogo component."]
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/presentation-kit",
      "title": "Presentation kit - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Our presentation kits have moved togo/presentation-palace(only accessible to Atlassian employees)."
        }
      ]
    },
    {
      "url": "https://atlassian.design/resources/templates",
      "title": "Templates - Resources - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Our posters and templates have moved togo/brand-assets(only accessible to Atlassian employees)."
        }
      ]
    },
    {
      "url": "https://atlassian.design/tokens",
      "title": "Overview - Resources - Atlassian Design System",
      "content": []
    },
    {
      "url": "https://atlassian.design/tokens/design-tokens",
      "title": "Design tokens - Tokens - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Design tokens are the new way to apply visual foundations in Atlassian product experiences. Weâre rolling out tokens to standardize colors, elevations, spacing, and other styles in Atlassian products. Design tokens are name and value pairings that represent small, repeatable design decisions. A token can be a color, font style, unit of white space, or even a motion animation designed for a specific need. For example, instead of choosing one of many shades of green for an icon, we can apply a design token that is consistent with all similar usages across our products:color.icon.success. A theme is a collection of token values designed to achieve a certain look or style. Themes are how we switch color schemes and styles everywhere using a single set of tokens. Light mode, dark mode, and high-contrast mode are all examples of theming. Non-color themes are also possible: think cozy/comfortable/compact views, reduced motion, or custom typography styles."
        },
        {
          "type": "list",
          "items": [
            "Features like global theming (dark mode), responsive design, and user customization are possible with tokens.",
            "Design tokens simplify the design and development by streamlining decision making and handover between crafts.",
            "As Atlassian's visual language evolves, changes can be made once across the system and products. No more finding and replacing hard-coded values everywhere.",
            "We have automated tooling to help designers and developers start using tokens faster.",
            "Tokens are how we'll implement our newest visual foundations. This will deliver visual consistency and other improvements to Atlassian UI."
          ]
        },
        {
          "type": "p",
          "text": "Knowing how to read token names will help you find the right token faster when working in designs and in code. A design tokenâs name describes how it should be used, and each part communicates one piece of its usage."
        },
        {
          "type": "list",
          "items": [
            "Foundation:The type of visual design attribute or foundational style, such as color, elevation, or space.",
            "Property:The UI element the token is being applied to, such as a border, background, shadow, or other property.",
            "Modifier:Additional details about the tokenâs purpose, such as its color role, emphasis, or interaction state. Not every token has a modifier. For example,color.textis our default body text color."
          ]
        },
        {
          "type": "p",
          "text": "Note that token names might look different in different environments and tools: Find all of our available design tokens and their usage descriptions inall tokens. Search and filter the token list, or use our token picker for extra help. Choose tokens based on meaning where applicable, not specific values. Use design tokens with names and descriptions that fit your specific situation. Don't use a token just because the colors appear to match. This can break the experience in other themes. Check our foundations forcolor,elevation, andspacingfor additional usage guidance. Use these examples to get a better understanding of how different tokens work. Hereâs an example of color design tokens in use: the default text color and the background color for a \"danger\" button on hover. There are dedicated color tokens for text, links, icons, backgrounds, borders, blankets, charts, and skeleton loaders. For more on color token usage, see ourcolor foundation. Elevation tokens apply to the perceived surface level and shadow. For more on how and when to apply elevations, see ourelevation foundation. Opacity tokens apply transparency to an element. Useopacity.disabledfor interactive images that are disabled (such as disabled avatar), andopacity.loadingto content sitting underneath a loading spinner. Space tokens reduce decision making and allow for consistent spacing between elements in a page layout. These tokens are designed to be use for horizontal and vertical spacing, in a variety of contexts. For more on how our spacing system, and how to use space in your designs, see ourspacing foundation. To visually align typography across Atlassian products, typography tokens include font values, including font family, font size, font weights, and line heights for all text styles. For more on how to start working with typography tokens, see ourtypography foundation."
        },
        {
          "type": "list",
          "items": [
            "Learn how toMigrate to tokens",
            "Use tokens in designs",
            "Use tokens in code",
            "For additional component examples and code samples, seecomponents examples."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/tokens/migrate-to-tokens",
      "title": "Migrate to tokens - Tokens - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Read this guide to learn how to migrate an Atlassian product or app to tokens, and whatâs changing for designers and developers."
        },
        {
          "type": "list",
          "items": ["Make sure you understand the basics ofdesign tokens."]
        },
        {
          "type": "p",
          "text": "Teams will apply and test tokens across an experience before releasing new colors (dark mode) or other tokens publicly. Use our Figma libraries to apply updated colors, design tokens, and themed components to your designs. We also have a Figma plugin to help you migrate design styles to tokens and generate dark-mode previews. As migration continues, you'll also help test and review changes in your product with ourChrome extension (Atlassians only). Get set up touse tokens in designs. To use and apply tokens in code:"
        },
        {
          "type": "list",
          "items": [
            "Set up themingin your application",
            "Update any design system components to the latest versions (these already have tokens built-in).",
            "Replace any remaining colors or other style values with the new tokens (our codemod speeds this up). See instructions inuse tokens in code."
          ]
        },
        {
          "type": "p",
          "text": "Conversion in code generally looks like this:"
        },
        {
          "type": "code",
          "code": "// CSS in JS+import { token } from '@atlaskit/tokens';import { B400 } from '@atlaskit/theme/colors';export default () => <div css={{-  color: B400,+  color: token('color.background.selected.bold, B400),}} />"
        },
        {
          "type": "code",
          "code": "// CSS variables, Sass, Less.bg-surface {background: var(--ds-surface-raised, #eeeeee);}"
        },
        {
          "type": "p",
          "text": "Notice that youâll use an old value as a fallback to preserve the current experience for end users during testing, see about using fallbacks inuse tokens in code. Before any Atlassian product launches dark mode publicly, weâll provide support and updates in our developer community so that apps can prepare. When you run thecodemod, it goes into every single color in the target files and suggests tokens based on context of the surrounding code. This is what it looks like after running the codemod."
        },
        {
          "type": "code",
          "code": "export const DangerMessage = style.div`-  background-color: ${colors.R50};+  background-color: ${token('color.background.danger', colors.R50)};:hover {-    background-color: ${colors.R60};+    background-color: ${token('color.background.danger.hovered', colors.R60)};}:active {-    background-color: ${colors.R80};+    background-color: ${token('color.background.danger.pressed', colors.R80)};}`"
        },
        {
          "type": "p",
          "text": "UseÂ@atlaskit/codemod-cliÂ to run the codemod cli"
        },
        {
          "type": "code",
          "code": "# For CSS in JSnpx @atlaskit/codemod-cli --parser tsx --extensions ts,tsx,js <relative-path># For vanilla CSS, SASS, Lessnpx @atlaskit/codemod-cli --extensions css,scss,less <relative-path>"
        },
        {
          "type": "p",
          "text": "The CLI will show a list of components and versions. SelectÂ@atlaskit/codemod-cli: theme-to-design-tokensÂ (for CSS in JS) or@atlaskit/codemod-cli: css-to-design-tokens(for vanilla CSS) and your code will be migrated. The codemod only provides token suggestions, so manual review is required after running the codemod. To view progress and toggle between themes in a product during migration, use ourChrome extension (Atlassians only). You can also pin the extension to your browser's toolbar for easy access from the Extension popup."
        },
        {
          "type": "list",
          "items": [
            "Use tokens in design",
            "Use tokens in code",
            "Learn our newcolor,elevation, and other foundation guidelines",
            "Search for tokens in theall tokens list"
          ]
        },
        {
          "type": "list",
          "items": [
            "Atlassians can reach out in slack forhelp with tokens migration.",
            "Other developers who need help with tokens can post in the publicdeveloper community.",
            "For general help with the Atlassian Design System,contact us."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/tokens/use-tokens-in-code",
      "title": "Use tokens in code - Tokens - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "This page explains how to set up and usedesign tokens and themesin code."
        },
        {
          "type": "list",
          "items": [
            "Make sure youâreset up to use the Atlassian Design System. In particular, make sure tokens is installed as a dependency and use our linter tooling to stay up to date.",
            "Weâre in the process of rolling out tokens internally (and sometimes externally). Use fallbacks for colors to maintain the current experience until your product is ready for a public release."
          ]
        },
        {
          "type": "p",
          "text": "For themes to work properly for users, theming must be set up in two places: the Atlassian product application and in any Marketplace apps extending that product experience. Use thesetGlobalThememethod to switch themes globally at runtime in an Atlassian product or stand-alone application."
        },
        {
          "type": "code",
          "code": "// Automatic theme switchingsetGlobalTheme({light: \"light\", dark: \"legacy-dark\", colorMode: 'auto'})// The above is using setGlobalThemeâs default values, so this also workssetGlobalTheme({})"
        },
        {
          "type": "p",
          "text": "Make sure theming is set up by inspecting your app HTML. You should see something like this:"
        },
        {
          "type": "code",
          "code": "<html data-theme=\"light:light dark:dark spacing:spacing\" data-color-mode=\"light\">"
        },
        {
          "type": "p",
          "text": "Pay special attention to thedata-color-mode=\"dark\"attribute, and also note thedata-theme=\"dark:dark light:light\"attribute. These reflect the current theme state. They also match CSS selectors within the theme files so the appropriate CSS variables can be activated in response to theme changes. For Connect and Forge apps, see the following dedicated resources:"
        },
        {
          "type": "list",
          "items": ["Theming Connect apps", "Theming Forge apps"]
        },
        {
          "type": "p",
          "text": "If your application is using SSR (server-side rendering) ensure themes appear at the right time using ourSSR theming utilities. You can access individual tokens using the CSS custom properties mounted to the page, however, it's best to use thetoken()method. This ensures you have proper prefixes, type checking, and linting so you'll know if a token ever changes, is deleted, or is used incorrectly. The token function takes a dot-separated token name and returns a valid CSS custom property for the corresponding token. This method will warn you if an unknown token is provided."
        },
        {
          "type": "code",
          "code": "import { token } from '@atlaskit/tokens';token('color.background.neutral');  // var(--ds-background-neutral)token('space.200');                 // var(--ds-space-200)"
        },
        {
          "type": "p",
          "text": "If you're migrating a lot of values to tokens,use our codemod. Migrating an experience to tokens is done piece-by-piece. While this work is in progress, you must hide the new appearance from users, generally behind a feature flag or user setting. This will prevent users from seeing unfinished and inconsistent colors and themes. To ensure our experiences remain consistent for users until we are ready to launch, we provide a fallback argument to theÂtoken()Â method. This is based on the matching feature from CSS custom properties. When the CSS custom property is not available at runtime (when the theme CSS is not present in your app), the fallback value will render instead. For colors, the fallback color should be the color visible in your app today. Generally these are imported from the old color paletteÂ@atlaskit/theme/colors."
        },
        {
          "type": "code",
          "code": "import { N0 } from '@atlaskit/theme/colors';import { token } from '@atlaskit/tokens';token('color.background.neutral', N0);  // var(--ds-background-neutral, #FFFFFF)token('space.200', '16px');             // var(--ds-space-200, 16px)"
        },
        {
          "type": "p",
          "text": "We also have aÂ Babel pluginÂ to automate setting some fallback values. Our Babel plugin to optimizes the runtime performance of tokens. It replaces any calls to thetoken()function in@atlaskit/tokenswith the CSS value the function would return:"
        },
        {
          "type": "code",
          "code": "// Original code-import { token } from '@atlaskit/tokens';import { N0 } from '@atlaskit/theme/colors';-token('test-token', N0);// Babel plugin outputimport { N0 } from \"@atlaskit/theme/colors\";+\"var(--test-token, \".concat(N0).concat(\")\");"
        },
        {
          "type": "p",
          "text": "If thereâs no fallback, the plugin can optionally find the tokenâs value from the default Atlassian light theme, and sets it as the fallback. This can be enabled using the plugin optionshouldUseAutoFallback. Add the plugin to your babel configuration:"
        },
        {
          "type": "code",
          "code": "{\"plugins\": [\"@atlaskit/tokens/babel-plugin\"]}"
        },
        {
          "type": "p",
          "text": "As our color system is applied to new products and applications, changes to our tokens will be released regularly. To stay up to date, install our linting support tools:"
        },
        {
          "type": "list",
          "items": [
            "For CSS in JS applications, useESlint.",
            "For CSS (vanilla), Less, Sass, useStylelint."
          ]
        },
        {
          "type": "p",
          "text": "These will warn you if youâre using deprecated tokens, and will assist in updating your app to the latest tokens."
        },
        {
          "type": "code",
          "code": "'@atlaskit/design-system/ensure-design-token-usage': ['error',{domains: ['color', 'spacing'],shouldEnforceFallbacks: true}],'@atlaskit/design-system/no-unsafe-design-token-usage': ['error', { shouldEnforceFallbacks: true }],'@atlaskit/design-system/no-deprecated-design-token-usage': 'warn'"
        },
        {
          "type": "list",
          "items": [
            "Search the list ofall design tokensfor full descriptions and token values.",
            "See design tokencode examples.",
            "Browse ourtoken API reference and changelog.",
            "Use theimage componentto theme images."
          ]
        },
        {
          "type": "list",
          "items": [
            "Atlassians canget help with tokens in slack.",
            "Partners and other developers who need help with tokens can post in thedeveloper community.",
            "For general help with the Atlassian Design system,contact us."
          ]
        }
      ]
    },
    {
      "url": "https://atlassian.design/tokens/use-tokens-in-design",
      "title": "Use tokens in design - Tokens - Atlassian Design System",
      "content": [
        {
          "type": "p",
          "text": "Understand how to use design tokens when applying our foundations in your designs."
        },
        {
          "type": "list",
          "items": ["Make sure you understand the basics ofdesign tokens."]
        },
        {
          "type": "p",
          "text": "1. Get access to our Figma libraries with design tokens built-in as styles and in components.Access figma libraries. 2. Install and use theAtlassian Design Tokens Figma pluginto simplify finding and applying Atlassian design tokens in your designs. 3. (Atlassian employees only) Use the Figma plugin convert old design files to use design tokens, and to convert your designs to dark mode. View new colors and styles in your product during migration using theChrome plugin (Atlassians only). New colors and other values wonât be visible until each product officially releases their changes when after testing is complete. The chrome plugin allows you to view the latest tokens behind the scenes during testing."
        },
        {
          "type": "list",
          "items": [
            "Search all of our available design tokens and their descriptions inall tokens.",
            "For extra help choosing the right token, use ourToken picker.",
            "Review new usage guidance in our color, elevation, and spacingfoundations.",
            "Check out ourdesign tokens onboarding video resources (for Atlassians only)."
          ]
        },
        {
          "type": "list",
          "items": [
            "Atlassians canget help with tokens in slack.",
            "For general help with the Atlassian Design system,contact us."
          ]
        }
      ]
    }
  ]
}
