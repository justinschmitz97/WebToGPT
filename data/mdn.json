[{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept", "title": "HTML attribute: accept - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: accept Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. accept attribute takes value comma-separated list one file types, unique file type specifiers, describing file types allow. Try Overview accept property attribute file <input> type. supported <form> element, removed favor file. given file type may identified one manner, useful provide thorough set type specifiers need files specific type, use wild card denote type format acceptable. instance, number ways Microsoft Word files identified, site accepts Word files might use <input> like this: <input type=\"file\" id=\"docpicker\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" /> Whereas accepting media file, may want include format media type: <input type=\"file\" id=\"soundFile\" accept=\"audio/*\" /> <input type=\"file\" id=\"videoFile\" accept=\"video/*\" /> <input type=\"file\" id=\"imageFile\" accept=\"image/*\" /> accept attribute validate types selected files; provides hints browsers guide users towards selecting correct file types. still possible (in cases) users toggle option file chooser makes possible override select file wish, choose incorrect file types. this, make sure expected requirement validated server-side. Examples set file input type, native file picker opens enable selecting files correct file type. operating systems lighten files match criteria selectable. <p> <label for=\"soundFile\">Select audio file:</label> <input type=\"file\" id=\"soundFile\" accept=\"audio/*\" /> </p> <p> <label for=\"videoFile\">Select video file:</label> <input type=\"file\" id=\"videoFile\" accept=\"video/*\" /> </p> <p> <label for=\"imageFile\">Select images:</label> <input type=\"file\" id=\"imageFile\" accept=\"image/*\" multiple /> </p> Note last example allows select multiple images. See multiple attribute information. Unique file type specifiers unique file type specifier string describes type file may selected user <input> element type file . unique file type specifier may take one following forms: - valid case-insensitive filename extension, starting period (\".\") character. example: .jpg ,.pdf , or.doc . - valid MIME type string, extensions. - string audio/* meaning \"any audio file\". - string video/* meaning \"any video file\". - string image/* meaning \"any image file\". accept attribute takes value string containing one unique file type specifiers, separated commas. example, file picker needs content presented image, including standard image formats PDF files, might look like this: <input type=\"file\" accept=\"image/*,.pdf\" /> Using file inputs basic example <form method=\"post\" enctype=\"multipart/form-data\"> <div> <label for=\"file\">Choose file upload</label> <input type=\"file\" id=\"file\" name=\"file\" multiple /> </div> <div> <button>Submit</button> </div> </form> produces following output: Note: find example GitHub \u2014 see source code, also see running live. Regardless user's device operating system, file input provides button opens file picker dialog allows user choose file. Including multiple attribute, shown above, specifies multiple files chosen once. user choose multiple files file picker way chosen platform allows (e.g. holding Shift Control, clicking). want user choose single file per <input> , omit multiple attribute. Limiting accepted file types Often want user able pick arbitrary type file; instead, often want select files specific type types. example, file input lets users upload profile picture, probably want select web-compatible image formats, JPEG PNG. Acceptable file types specified accept attribute, takes comma-separated list allowed file extensions MIME types. examples: accept=\"image/png\" oraccept=\".png\" \u2014 Accepts PNG files.accept=\"image/png, image/jpeg\" oraccept=\".png, .jpg, .jpeg\" \u2014 Accept PNG JPEG files.accept=\"image/*\" \u2014 Accept file animage/* MIME type. (Many mobile devices also let user take picture camera used.)accept=\".doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" \u2014 accept anything smells like MS Word document. Let's look complete example: <form method=\"post\" enctype=\"multipart/form-data\"> <div> <label for=\"profile_pic\">Choose file upload</label> <input type=\"file\" id=\"profile_pic\" name=\"profile_pic\" accept=\".jpg, .jpeg, .png\" /> </div> <div> <button>Submit</button> </div> </form> Specifications | Specification | |---| | HTML Standard # attr-input-accept | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete", "title": "HTML attribute: autocomplete - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: autocomplete HTML autocomplete attribute lets web developers specify permission user agent provide automated assistance filling form field values, well guidance browser type information expected field. available <input> elements take text numeric value input, <textarea> elements, <select> elements, <form> elements. Try Description autocomplete attribute provides hint user agent specifying to, indeed whether to, prefill form control. attribute value either keyword , ordered list space-separated tokens. <input autocomplete=\"off\" /> <input autocomplete=\"on\" /> <input autocomplete=\"shipping street-address\" /> <input autocomplete=\"section-user1 billing postal-code\" /> <input> , <select> <textarea> element autocomplete attribute, browser use autocomplete attribute element's owning form. owning form either <form> matching id specified form attribute element (if present) or, commonly, <form> element nested in. Note: order provide autocompletion, user-agents might require <input> /<select> /<textarea> elements to: - name and/orid attribute - descendants <form> element - owned form submit button list tokens used one form control, user-agent autocomplete occurrences autocomplete value data value. tokens may used potentially different expected values, zip-code token form contains shipping billing addresses. Including multiple different tokens space-separated list causes associated form controls given unique autocomplete values: case, autocomplete=\"shipping zip-code\" autocomplete=\"billing zip-code\" . autocomplete values may need re-used multiple times. example, form may contain multiple shipping addresses therefore multiple occurrences \"shipping zip-code\" still expecting different values. make autocomplete value unique cases, first token space-separated list tokens section-* token, token's first eight characters always string \"section-\", followed alphanumeric string. form fields given section-* token alphanumeric string belong named group. including autocomplete attribute hidden input elements (<input type=\"hidden\"> ), value must ordered list space-separated tokens; keywords allowed. source suggested values generally browser; typically values come past values entered user, may also come pre-configured values. instance, browser might let user save name, address, phone number, email addresses autocomplete purposes. browser may also offer ability save encrypted credit card information, autocompletion following authentication procedure. Note: autocomplete attribute also controls whether Firefox \u2014 unlike browsers \u2014 persist dynamic disabled state (if applicable) dynamic checkedness <input> element, <textarea> element, entire <form> across page loads. persistence feature enabled default. Setting value autocomplete attribute disables feature. works even autocomplete attribute would normally apply virtue type . See Firefox bug 654072. Values attribute value either keyword , space-separated <token-list> describes meaning autocompletion value. - browser permitted automatically enter select value field. possible document application provides autocomplete feature, security concerns require field's value automatically entered. Note: modern browsers, setting autocomplete to\"off\" prevent password manager asking user would like save username password information, automatically filling values site's login form. See Managing autofill login fields. - browser allowed automatically complete input. guidance provided type data expected field, browser may use judgement. <token-list> - ordered set space-separated tokens consisting autofill detail tokens preceded optional sectioning either billing shipping grouping tokens. Phone numbers, email addresses, messaging protocol tokens preceded token identifying type recipient. See WHATWG Standard detailed information. Token list tokens <token-list> options include, order: Named groups create named group form fields, optional section-* token used. present, token must first token space-separated list tokens. section-* - Defines name group form controls. token whose first eight characters string \"section-\", case-insensitive, followed additional characters. form controls start token belong named group. Grouping identifier optional shipping billing grouping identifier shipping - field identified subsequent tokens part shipping address contact information billing - field identified subsequent tokens part billing address contact information Detail tokens space-separated detail token list includes either recipient type digital contact information, order, space-separated token list tokens. Recipient type tokens identify type recipient include: home - contact type identified subsequent tokens contacting recipient residence. work - contact type identified subsequent tokens contacting recipient work. mobile - contact type identified subsequent tokens contacting recipient regardless location. fax - recipient identified subsequent tokens fax machine. page - recipient identified subsequent tokens pager beeper. Digital contact tokens token group tokens telephone numbers number's component parts, phone extensions, email addresses, instant messaging protocols. tel - full telephone number, including country code. need break phone number components, use values fields: tel-country-code - country code, \"1\" United States, Canada, areas North America parts Caribbean. tel-national - entire phone number without country code component, including country-internal prefix. phone number \"1-855-555-6502\", field's value would \"855-555-6502\". tel-area-code - area code, country-internal prefix applied appropriate. tel-local - phone number without country area code. split two parts, phone numbers exchange number number within exchange. phone number \"555-6502\", use tel-local-prefix \"555\" andtel-local-suffix \"6502\". tel-extension - telephone extension code within phone number, room suite number hotel office extension company. email - email address. impp - URL instant messaging protocol endpoint, xmpp:username@example.net . tokens form field phone number, email address, instant messaging protocol, space-separated list tokens preceded contact type: name - field expects value person's full name. Using name rather breaking name components generally preferred avoids dealing wide diversity human names structured; however, use followingautocomplete values need break name components:honorific-prefix - prefix title, \"Mrs.\", \"Mr.\", \"Miss\", \"Ms.\", \"Dr.\", \"Mlle.\". given-name - given (or \"first\") name. additional-name - middle name. family-name - family (or \"last\") name. honorific-suffix - suffix, \"Jr.\", \"B.Sc.\", \"PhD.\", \"MBASW\", \"IV\". nickname - nickname handle. username - username account name. new-password - new password. creating new account changing passwords, used \"Enter new password\" \"Confirm new password\" field, opposed general \"Enter current password\" field might present. may used browser avoid accidentally filling existing password offer assistance creating secure password. current-password - user's current password. one-time-code - one-time password (OTP) verifying user identity used additional factor sign-in flow. commonly code received via out-of-channel mechanism, SMS, email, authenticator application. organization-title - job title, title person within organization, \"Senior Technical Writer\", \"President\", \"Assistant Troop Leader\". organization - company organization name, \"Acme Widget Company\" \"Girl Scouts America\". street-address - street address. multiple lines text, fully identify location address within second administrative level (typically city town), include city name, ZIP postal code, country name. address-line1 ,address-line2 ,address-line3 - individual line street address. present street-address present. address-level4 - finest-grained administrative level, addresses four levels. address-level3 - third administrative level, addresses least three administrative levels. address-level2 - second administrative level, addresses least two them. countries two administrative levels, would typically city, town, village, locality address located. address-level1 - first administrative level address. typically province address located. United States, would state. Switzerland, canton. United Kingdom, county. country - country territory code. country-name - country territory name. postal-code - postal code (in United States, ZIP code). cc-name - full name printed associated payment instrument credit card. Using full name field preferred, typically, breaking name pieces. cc-given-name - given (first) name given payment instrument like credit card. cc-additional-name - middle name given payment instrument credit card. cc-family-name - family name, given credit card. cc-number - credit card number number identifying payment method, account number. cc-exp - payment method expiration date, typically form \"MM/YY\" \"MM/YYYY\". cc-exp-month - month payment method expires. cc-exp-year - year payment method expires. cc-csc - security code payment instrument; credit cards, 3-digit verification number back card. cc-type - type payment instrument (such \"Visa\" \"Master Card\"). transaction-currency - currency transaction take place. transaction-amount - amount, given currency specified transaction-currency , transaction, payment form. language - preferred language, given valid BCP 47 language tag. bday - birth date, full date. bday-day - day month birth date. bday-month - month year birth date. bday-year - year birth date. sex - gender identity (such \"Female\", \"Fa'afafine\", \"Hijra\", \"Male\", \"Nonbinary\"), freeform text without newlines. url - URL, home page company website address appropriate given context fields form. photo - URL image representing person, company, contact information given fields form. Web authorization token <input> <textarea> , webauthn token included last indicate user agent show public key credentials user interacting control. webauthn Experimental- Passkeys generated Web Authentication API, requested conditional navigator.credentials.get() call (i.e., one includesmediation: 'conditional' ). included, last token space-separated token list. See Sign passkey form autofill details. Examples <div> <label for=\"cc-number\">Enter credit card number</label> <input name=\"cc-number\" id=\"cc-number\" autocomplete=\"off\" /> </div> Administrative levels addresses four administrative level fields (address-level1 address-level4 ) describe address terms increasing levels precision within country address located. country system administrative levels, may arrange levels different orders addresses written. address-level1 always represents broadest administrative division; least-specific portion address short country name. Form layout flexibility Given different countries write address different ways, field different places within address, even different sets numbers fields entirely, helpful if, possible, site able switch layout expected users presenting address entry form, given country address located within. Variations way administrative level used vary country country. examples; meant exhaustive list. United States typical home address within United States looks like this: 432 Anywhere St Exampleville CA 95555 United States, least-specific portion address state, case \"CA\" (the official US Postal Service shorthand \"California\"). Thus address-level1 state, \"CA\" case. second-least specific portion address city town name, address-level2 \"Exampleville\" example address. United States addresses use levels 3 up. United Kingdom Address input forms UK contain one two address levels one, two three address lines, depending address. complete address would look like so: 103 Frogmarch Street Upper-Wapping Winchelsea Whereshire TN99 8ZZ address levels are: address-level1 : county \u2014 \"Whereshire\" case.address-level2 : post town \u2014 \"Winchelsea\" case.address-line2 : locality \u2014 \"Upper-Wapping\" case.address-line1 : house/street particulars \u2014 \"103 Frogmarch Street\". postcode separate. Note actually use postcode address-line1 successfully deliver mail UK, mandatory items, usually people tend provide details. China China use many three administrative levels: province, city, district. 6 digit postal code always needed supplied placed separately label clarity. example: \u5317\u4eac\u5e02\u4e1c\u57ce\u533a\u5efa\u56fd\u95e8\u5317\u5927\u8857 8 \u53f7\u534e\u6da6\u5927\u53a6 17 \u5c42 1708 \u5355\u5143 \u90ae\u7f16\uff1a100005 Japan address Japan typically written one line, order least-specific more-specific portions (in reverse order United States). two three administrative levels address. Additional line used show building names room numbers. postal code separate. example: \u3012 381-0000 \u9577\u91ce\u770c\u9577\u91ce\u5e02\u67d0\u753a 123 \"\u3012\" following seven digits shows postal code. address-level1 used prefectures Tokyo Metropolis; \"\u9577\u91ce\u770c\" (Nagano Prefecture) case. address-level2 typically used cities, counties, towns villages; \"\u9577\u91ce\u5e02\" (Nagano City) case. \"\u67d0\u753a 123\" address-line1 consists area name lot number. Specifications | Specification | |---| | HTML Standard # attr-form-autocomplete | | HTML Standard # attr-fe-autocomplete | Browser compatibility html.elements.form.autocomplete BCD tables load browser html.elements.input.autocomplete BCD tables load browser html.elements.select.autocomplete BCD tables load browser html.elements.textarea.autocomplete BCD tables load browser See also - <input> element - <select> element - <textarea> element - <form> element - HTML forms - global attributes"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture", "title": "HTML attribute: capture - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: capture Limited availability feature Baseline work widely-used browsers. capture attribute specifies that, optionally, new file captured, device used capture new media type defined accept attribute. Values include user environment . capture attribute supported file input type. capture attribute takes value string specifies camera use capture image video data, accept attribute indicates input one types. | Value | Description | |---|---| user | user-facing camera and/or microphone used. | environment | outward-facing camera and/or microphone used | Note: Capture previously Boolean attribute which, present, requested device's media capture device(s) camera microphone used instead requesting file input. Try Examples set file input type, operating systems microphones cameras display user interface allowing selection existing file creating new one. <p> <label for=\"soundFile\">What voice sound like?:</label> <input type=\"file\" id=\"soundFile\" capture=\"user\" accept=\"audio/*\" /> </p> <p> <label for=\"videoFile\">Upload video:</label> <input type=\"file\" id=\"videoFile\" capture=\"environment\" accept=\"video/*\" /> </p> <p> <label for=\"imageFile\">Upload photo yourself:</label> <input type=\"file\" id=\"imageFile\" capture=\"user\" accept=\"image/*\" /> </p> Note work better mobile devices; device desktop computer, likely get typical file picker. Specifications | Specification | |---| | HTML Media Capture # dfn-capture | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin", "title": "HTML attribute: crossorigin - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: crossorigin crossorigin attribute, valid <audio> , <img> , <link> , <script> , <video> elements, provides support CORS, defining element handles cross-origin requests, thereby enabling configuration CORS requests element's fetched data. Depending element, attribute CORS settings attribute. crossorigin content attribute media elements CORS settings attribute. attributes enumerated, following possible values: anonymous - Request uses CORS headers credentials flag set 'same-origin' . exchange user credentials via cookies, client-side TLS certificates HTTP authentication, unless destination origin. use-credentials - Request uses CORS headers, credentials flag set 'include' user credentials always included. \"\" - Setting attribute name empty value, like crossorigin orcrossorigin=\"\" , asanonymous . invalid keyword empty string handled anonymous keyword. default (that is, attribute specified), CORS used all. user agent ask permission full access resource case cross-origin request, certain limitations applied based type element concerned: | Element | Restrictions | img , audio , video | resource placed <canvas> , element marked tainted. | script | Access error logging via window.onerror limited. | link | Request appropriate crossorigin header may discarded. | Note: crossorigin attribute supported rel=\"icon\" Chromium-based browsers. See open Chromium issue. Example: crossorigin <script> element use following <script> element tell browser execute https://example.com/example-framework.js script without sending user-credentials. <script src=\"https://example.com/example-framework.js\" crossorigin=\"anonymous\"></script> Example: Web manifest credentials use-credentials value must used fetching manifest requires credentials, even file origin. <link rel=\"manifest\" href=\"/app.webmanifest\" crossorigin=\"use-credentials\" /> Specifications | Specification | |---| | HTML Standard # cors-settings-attributes | Browser compatibility html.elements.audio.crossorigin BCD tables load browser html.elements.img.crossorigin BCD tables load browser html.elements.link.crossorigin BCD tables load browser html.elements.script.crossorigin BCD tables load browser html.elements.video.crossorigin BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/dirname", "title": "HTML attribute: dirname - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: dirname dirname attribute used <textarea> element several <input> types describes directionality element's text content form submission. browser uses attribute's value determine whether text user entered left-to-right right-to-left oriented. used, element's text directionality value included form submission data along dirname attribute's value name field. Usage notes dirname attribute used <textarea> element, <input> element hidden, text, search, tel, url, email, password, submit, reset button type. format submitted data {dirname_value}={direction} {dirname_value} value dirname attribute {direction} directionality text. example, user enters \"Hello\" element attributes name=\"comment\" dirname=\"comment-direction\" , URL-encoded form submission data GET requests comment=Hello&comment-direction=ltr . directionality one following: rtl - text entered user right-to-left writing direction. ltr - text entered user left-to-right writing direction. text directionality specified, user agent use directionality parent element containing form, specified, default directionality user agent. Examples Textarea element directionality example, dir=\"auto\" attribute textarea element allows text directionality determined automatically based text entered user: <form method=\"get\" action=\"https://www.example.com/submit\"> <textarea name=\"comment\" dir=\"auto\" dirname=\"comment-direction\">\u0633\u064a\u0628</textarea> <button type=\"submit\">Send greetings</button> </form> user submits form, user agent includes two fields, one called comment value \"\u0633\u064a\u0628\", one called comment-direction value \"rtl\". URL-encoded submission body looks like this: https://www.example.com/submit?comment=%D8%B3%D9%8A%D8%A8&comment-direction=rtl Input element directionality example, dir=\"auto\" attribute input element allows text directionality determined automatically based text entered user: <form method=\"get\" action=\"https://www.example.com/submit\"> <input type=\"text\" name=\"comment-input\" dir=\"auto\" dirname=\"comment-direction\" value=\"Hello\" /> <button type=\"submit\">Send greetings</button> </form> user submits form, user agent includes two fields, one called comment-input value \"Hello\", one called comment-direction value \"ltr\": https://www.example.com/submit?comment-input=Hello&comment-direction=ltr Inheriting directionality following <input> <textarea> elements dir attribute, inherit explicit directionality parent element, rtl : <div dir=\"rtl\"> <form method=\"get\" action=\"https://www.example.com/submit\"> <input type=\"text\" name=\"user\" dirname=\"user-direction\" value=\"LTR Username\" /> <textarea name=\"comment\" dirname=\"comment-direction\">LTR Comment</textarea> <button type=\"submit\">Post Comment</button> </form> </div> URL-encoded submission body looks like this: https://www.example.com/submit?user=LTR+Username&user-direction=rtl&comment=LTR+Comment&comment-direction=rtl Specifications | Specification | |---| | HTML Standard # attr-fe-dirname | Browser compatibility html.elements.textarea.dirname BCD tables load browser html.elements.input.dirname BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled", "title": "HTML attribute: disabled - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: disabled Boolean disabled attribute, present, makes element mutable, focusable, even submitted form. user neither edit focus control, form control descendants. Try Overview disabled attribute specified form control, element form control descendants participate constraint validation. Often browsers grey controls receive browsing events, like mouse clicks focus-related ones. disabled attribute supported <button> , <fieldset> , <optgroup> , <option> , <select> , <textarea> <input> . Boolean disabled attribute indicates user cannot interact control descendant controls. attribute specified, control inherits setting containing element, example fieldset ; containing element disabled attribute set, control attribute, control enabled. declared <optgroup> , select still interactive (unless otherwise disabled), none items option group selectable. Note: <fieldset> disabled, descendant form controls disabled, exception form controls within <legend> . supporting element disabled attribute applied, :disabled pseudo-class also applies it. Conversely, elements support disabled attribute attribute set match :enabled pseudo-class. Boolean attribute prevents user interacting button. attribute set, button still disabled containing element, example <fieldset> ; containing element disabled attribute set, button enabled. Firefox will, unlike browsers, persist dynamic disabled state <button> across page loads. Use autocomplete attribute control feature. Attribute interactions difference disabled readonly read-only controls still function still focusable, whereas disabled controls receive focus submitted form generally function controls enabled. disabled field cannot value changed, required effect inputs disabled attribute also specified. Additionally, since elements become immutable, attributes, pattern , effect, control enabled. Note: required attribute permitted inputs disabled attribute specified. Usability Browsers display disabled form controls greyed disabled form controls immutable, receive focus browsing events, like mouse clicks focus-related ones, submitted form. present supporting elements, :disabled pseudo class match. attribute included, :enabled pseudo class match. element support disabled attribute, attribute effect, including leading matched :disabled :enabled pseudo classes. Constraint validation element disabled , element's value receive focus cannot updated user, participate constraint validation. Examples form controls disabled, many browsers display lighter, greyed-out color default. examples disabled checkbox, radio button, <option> <optgroup> , well form controls disabled via disabled attribute set ancestor element. <fieldset> <option> disabled, <select> not. could disable entire <select> adding attribute element rather descendants. <fieldset> <legend>Checkboxes</legend> <p> <label> <input type=\"checkbox\" name=\"ch-box\" value=\"regular\" /> Regular </label> </p> <p> <label> <input type=\"checkbox\" name=\"ch-box\" value=\"disabled\" disabled /> disabled </label> </p> </fieldset> <fieldset> <legend>Radio buttons</legend> <p> <label> <input type=\"radio\" name=\"radio\" value=\"regular\" /> Regular </label> </p> <p> <label> <input type=\"radio\" name=\"radio\" value=\"disabled\" disabled /> disabled </label> </p> </fieldset> <p> <label >Select option: <select> <optgroup label=\"Group 1\"> <option>Option 1.1</option> </optgroup> <optgroup label=\"Group 2\"> <option>Option 2.1</option> <option disabled>Option 2.2</option> <option>Option 2.3</option> </optgroup> <optgroup label=\"Group 3\" disabled> <option>Disabled 3.1</option> <option>Disabled 3.2</option> <option>Disabled 3.3</option> </optgroup> </select> </label> </p> <fieldset disabled> <legend>Disabled fieldset</legend> <p> <label> Name: <input type=\"radio\" name=\"radio\" value=\"regular\" /> Regular </label> </p> <p> <label>Number: <input type=\"number\" /></label> </p> </fieldset> Specifications | Specification | |---| | HTML Standard # attr-fe-disabled | | HTML Standard # attr-optgroup-disabled | | HTML Standard # attr-option-disabled | Browser compatibility html.elements.button.disabled BCD tables load browser html.elements.fieldset.disabled BCD tables load browser html.elements.input.disabled BCD tables load browser html.elements.optgroup.disabled BCD tables load browser html.elements.option.disabled BCD tables load browser html.elements.select.disabled BCD tables load browser html.elements.textarea.disabled BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/elementtiming", "title": "HTML attribute: elementtiming - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: elementtiming elementtiming attribute used indicate element flagged tracking PerformanceObserver objects using \"element\" type. details, see PerformanceElementTiming interface. attribute may applied <img> , <image> elements inside <svg> , poster images <video> elements, elements background-image , elements containing text nodes, <p> . DOM, attribute reflected Element.elementTiming . Usage value given elementtiming becomes identifier observed element. html <img alt=\"alt\" src=\"img.jpg\" elementtiming=\"label element\" /> Good contenders elements might want observe are: - main image article. - blog post title - Images carousel shopping site. - poster image main video page. Examples html <img alt=\"Alt main blog post image\" src=\"my-massive-image.jpg\" elementtiming=\"Main image\" /> <p elementtiming=\"important-text\">Some important information.</p>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/for", "title": "HTML attribute: for - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: attribute allowed attribute <label> <output> . used <label> element indicates form element label describes. used <output> element allows explicit relationship elements represent values used output. Try Usage used attribute <label> , attribute value id form element relates to. html <label for=\"username\">Your name</label> <input type=\"text\" id=\"username\" /> used attribute <output> , attribute value space separated list id values elements used create output. html <input type=\"range\" id=\"b\" name=\"b\" value=\"50\" /> + <input type=\"number\" id=\"a\" name=\"a\" value=\"10\" /> = <output name=\"result\" for=\"a b\">60</output> Examples Specifications | Specification | |---| | HTML Standard # attr-label-for | | HTML Standard # attr-output-for | Browser compatibility html.elements.label.for BCD tables load browser html.elements.output.for BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max", "title": "HTML attribute: max - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: max max attribute defines maximum value acceptable valid input containing attribute. value element greater this, element fails validation. value must greater equal value min attribute. max attribute present specified invalid, max value applied. max attribute valid non-empty value greater maximum allowed max attribute, constraint validation prevent form submission. max attribute valid numeric input types, including date, month, week, time, datetime-local, number range types, <progress> <meter> elements. number specifies positive value form control considered valid. value exceeds max value allowed, validityState.rangeOverflow true, control matched :out-of-range :invalid pseudo-classes. Syntax | Input type | Syntax | Example | |---|---|---| | date | yyyy-mm-dd | <input type=\"date\" max=\"2019-12-25\" step=\"1\"> | | month | yyyy-mm | <input type=\"month\" max=\"2019-12\" step=\"12\"> | | week | yyyy-W## | <input type=\"week\" max=\"2019-W23\" step=\"\"> | | time | HH:mm | <input type=\"time\" max=\"17:00\" step=\"900\"> | | datetime-local | yyyy-mm-ddTHH:mm | <input type=\"datetime-local\" max=\"2019-12-25T23:59\"> | | number | <number> | <input type=\"number\" min=\"0\" step=\"5\" max=\"100\"> | | range | <number> | <input type=\"range\" min=\"60\" step=\"5\" max=\"100\"> | Note: data entered user adhere maximum value set, value considered invalid constraint validation match :invalid :out-of-range pseudo-classes. See Client-side validation rangeOverflow information. <progress> element, max attribute describes much work task indicated progress element requires. present, must value greater zero valid floating point number. <meter> element, max attribute defines upper numeric bound measured range. must greater minimum value (min attribute), specified. cases, omitted, value defaults 1. | Input type | Syntax | Example | |---|---|---| <progress> | <number> | <progress id=\"file\" max=\"100\" value=\"70\"> 70% </progress> | <meter> | <number> | <meter id=\"fuel\" min=\"0\" max=\"100\" low=\"33\" high=\"66\" optimum=\"80\" value=\"40\"> 40/100</meter> | Accessibility concerns Provide instructions help users understand complete form use individual form controls. Indicate required optional input, data formats, relevant information. using max attribute, ensure maximum requirement understood user. Providing instructions within <label> may sufficient. providing instructions outside labels, allows flexible positioning design, consider using aria-labelledby aria-describedby . Specifications | Specification | |---| | HTML Standard # attr-input-max | | HTML Standard # attr-meter-max | | HTML Standard # attr-progress-max | Browser compatibility html.elements.input.max BCD tables load browser html.elements.meter.max BCD tables load browser html.elements.progress.max BCD tables load browser See also step min - meter attributes: low ,high ,optimum - Constraint validation - Form validation validityState.rangeOverflow :out-of-range <input> - date, month, week, time, datetime-local, number range types, <meter>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength", "title": "HTML attribute: maxlength - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: maxlength maxlength attribute defines maximum string length user enter <input> <textarea> . attribute must integer value 0 higher. length measured UTF-16 code units, (for scripts) equivalent number characters. maxlength specified, invalid value specified, input maximum length. maxlength value must greater equal value minlength , present valid. input fail constraint validation length text value field greater maxlength UTF-16 code units long. Constraint validation applied value changed user. Constraint validation browser generally prevent user entering text maxlength attribute allows, length longer maxlength allows, read-only tooLong property ValidityState object true. Try Examples <input type=\"password\" maxlength=\"4\" /> Specifications | Specification | |---| | HTML Standard # attr-input-maxlength | | HTML Standard # attr-textarea-maxlength | Browser compatibility html.elements.input.maxlength BCD tables load browser html.elements.textarea.maxlength BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min", "title": "HTML attribute: min - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: min min attribute defines minimum value acceptable valid input containing attribute. value element less this, element fails validation. value must less equal value max attribute. input types default minimum. input default minimum value specified min can't converted valid number (or minimum value set), input minimum value. valid input types including: date, month, week, time, datetime-local, number range types, <meter> element. Syntax | Input type | Syntax | Example | |---|---|---| | date | yyyy-mm-dd | <input type=\"date\" min=\"2019-12-25\" step=\"1\"> | | month | yyyy-mm | <input type=\"month\" min=\"2019-12\" step=\"12\"> | | week | yyyy-W## | <input type=\"week\" min=\"2019-W23\" step=\"\"> | | time | HH:mm | <input type=\"time\" min=\"09:00\" step=\"900\"> | | datetime-local | yyyy-mm-ddTHH:mm | <input type=\"datetime-local\" min=\"2019-12-25T19:30\"> | | number | <number> | <input type=\"number\" min=\"0\" step=\"5\" max=\"100\"> | | range | <number> | <input type=\"range\" min=\"60\" step=\"5\" max=\"100\"> | Note: data entered user adhere min value set, value considered invalid constraint validation match :invalid :out-of-range pseudo-classes. See Client-side validation rangeUnderflow information. <meter> element, min attribute defines lower numeric bound measured range. must less maximum value (max attribute), specified. cases, omitted, value defaults 1. Impact step value min step define valid values, even step attribute included, step defaults 0 . add big red border around invalid inputs: input:invalid { border: solid red 3px; } define input minimum value 7.2, omitting step attribute, wherein defaults 1. <input id=\"myNumber\" name=\"myNumber\" type=\"number\" min=\"7.2\" value=\"8\" /> step defaults 1, valid values include 7.2 , 8.2 , 9.2 , on. value 8 valid. included invalid value, supporting browsers show value invalid. explicitly included, step defaults 1 number range , 1 unit type (second, week, month, day) date/time input types. Accessibility concerns Provide instructions help users understand complete form use individual form controls. Indicate required optional input, data formats, relevant information. using min attribute, ensure minimum requirement understood user. Providing instructions within <label> may sufficient. providing instructions outside labels, allows flexible positioning design, consider using aria-labelledby aria-describedby . Specifications | Specification | |---| | HTML Standard # attr-input-min | | HTML Standard # attr-meter-max | Browser compatibility html.elements.input.min BCD tables load browser html.elements.meter.min BCD tables load browser See also step max - meter attributes: low ,high ,optimum - Constraint validation - Form validation validityState.rangeUnderflow :out-of-range <input> - date, month, week, time, datetime-local, number range types, <meter>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength", "title": "HTML attribute: minlength - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: minlength minlength attribute defines minimum string length user enter <input> <textarea> . attribute must integer value 0 higher. length measured UTF-16 code units, (for scripts) equivalent number characters. minlength specified, invalid value specified, input minimum length. value must less equal value maxlength, otherwise value never valid, impossible meet criteria. input fail constraint validation length text value field less minlength UTF-16 code units long, validityState.tooShort returning true . Constraint validation applied value changed user. submission fails, browsers display error message indicating minimum length required current length. minlength imply required ; input violates minlength constraint user input value. input required , empty string submitted even minlength set. Try Examples adding minlength=\"5\" , value must either empty five characters longer valid. <label for=\"fruit\">Enter fruit name least 5 letters long</label> <input type=\"text\" minlength=\"5\" id=\"fruit\" /> use pseudoclasses style element based whether value valid. value valid long either null (empty) five characters long. Lime invalid, lemon valid. input { border: 2px solid currentcolor; } input:invalid { border: 2px dashed red; } input:invalid:focus { background-image: linear-gradient(pink, lightgreen); } Specifications | Specification | |---| | HTML Standard # attr-input-minlength | | HTML Standard # attr-textarea-minlength | Browser compatibility html.elements.input.minlength BCD tables load browser html.elements.textarea.minlength BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple", "title": "HTML attribute: multiple - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: multiple Boolean multiple attribute, set, means form control accepts one values. attribute valid email file input types <select> . manner user opts multiple values depends form control. Try Overview Depending type, form control may different appearance multiple attribute set. file input type, native messaging browser provides differs. Firefox, file input reads \"No files selected\" attribute present \"No file selected\" not. browsers display scrolling list box <select> control multiple attribute set single line dropdown attribute omitted. email input displays whether multiple attribute included, match :invalid pseudo-class one comma-separated email address included attribute present. multiple set email input type, user include zero (if also required ), one comma-separated email addresses. <input type=\"email\" multiple name=\"emails\" id=\"emails\" /> multiple attribute specified, value list properly-formed comma-separated email addresses. trailing leading whitespace removed address list. multiple set file input type, user select one files. user choose multiple files file picker way chosen platform allows (e.g. holding Shift Control, clicking). <input type=\"file\" multiple name=\"uploads\" id=\"uploads\" /> attribute omitted, user select single file per <input> . multiple attribute <select> element represents control selecting zero options list options. Otherwise, <select> element represents control selecting single <option> list options. <select multiple name=\"dwarfs\" id=\"dwarfs\"> <option>Grumpy</option> <option>Happy</option> <option>Sleepy</option> <option>Bashful</option> <option>Sneezy</option> <option>Dopey</option> <option>Doc</option> </select> multiple specified, browsers show scrolling list box instead single line dropdown. Accessibility concerns Provide instructions help users understand complete form use individual form controls. Indicate required optional input, data formats, relevant information. using multiple attribute, inform user multiple values allowed provide directions provide multiple values, \"separate email addresses comma.\" Setting size=\"1\" multiple select make appear single select browsers, expand focus, harming usability. that. change appearance select, even don't, make sure inform user one option selected another method. Examples email input <label for=\"emails\">Who want email?</label> <input type=\"email\" multiple name=\"emails\" id=\"emails\" list=\"dwarf-emails\" required size=\"64\" /> <datalist id=\"dwarf-emails\"> <option value=\"grumpy@woodworkers.com\">Grumpy</option> <option value=\"happy@woodworkers.com\">Happy</option> <option value=\"sleepy@woodworkers.com\">Sleepy</option> <option value=\"bashful@woodworkers.com\">Bashful</option> <option value=\"sneezy@woodworkers.com\">Sneezy</option> <option value=\"dopey@woodworkers.com\">Dopey</option> <option value=\"doc@woodworkers.com\">Doc</option> </datalist> multiple attribute specified, value list properly-formed comma-separated email addresses. trailing leading whitespace removed address list. required attribute present, least one email address required. browsers support appearance list options associated <datalist> subsequent email addresses multiple present. Others not. file input multiple set file input type, user select one files: <form method=\"post\" enctype=\"multipart/form-data\"> <p> <label for=\"uploads\"> Choose images want upload: </label> <input type=\"file\" id=\"uploads\" name=\"uploads\" accept=\".jpg, .jpeg, .png, .svg, .gif\" multiple /> </p> <p> <label for=\"text\">Pick text file upload: </label> <input type=\"file\" id=\"text\" name=\"text\" accept=\".txt\" /> </p> <p> <input type=\"submit\" value=\"Submit\" /> </p> </form> Note difference appearance example multiple set file input without. form submitted, used method=\"get\" selected file's name would added URL parameters ?uploads=img1.jpg&uploads=img2.svg . However, since submitting multipart form data, must use post. See <form> element sending form data information. select multiple attribute <select> element represents control selecting zero options list options. Otherwise, <select> element represents control selecting single <option> list options. control generally different appearance based presence multiple attribute, browsers displaying scrolling list box instead single line dropdown attribute present. <form method=\"get\" action=\"#\"> <p> <label for=\"dwarfs\">Select dwarf woodsman like:</label> <select multiple name=\"dwarfs\" id=\"dwarfs\"> <option>grumpy@woodworkers.com</option> <option>happy@woodworkers.com</option> <option>sleepy@woodworkers.com</option> <option>bashful@woodworkers.com</option> <option>sneezy@woodworkers.com</option> <option>dopey@woodworkers.com</option> <option>doc@woodworkers.com</option> </select> </p> <p> <label for=\"favoriteOnly\">Select favorite:</label> <select name=\"favoriteOnly\" id=\"favoriteOnly\"> <option>grumpy@woodworkers.com</option> <option>happy@woodworkers.com</option> <option>sleepy@woodworkers.com</option> <option>bashful@woodworkers.com</option> <option>sneezy@woodworkers.com</option> <option>dopey@woodworkers.com</option> <option>doc@woodworkers.com</option> </select> </p> <p> <input type=\"submit\" value=\"Submit\" /> </p> </form> Note difference appearance two form controls. /* uncomment CSS make multiple height single */ /* select[multiple] { height: 1.5em; vertical-align: top; } select[multiple]:focus, select[multiple]:active { height: auto; } */ ways select multiple options <select> element multiple attribute. Depending operating system, mouse users hold Ctrl, Command, Shift keys click multiple options select/deselect them. Keyboard users select multiple contiguous items focusing <select> element, selecting item top bottom range want select using cursor keys go options. selection non-contiguous well-supported: items able selected deselected pressing Space, support varies browsers. Specifications | Specification | |---| | HTML Standard # attr-input-multiple | | HTML Standard # attr-select-multiple | Browser compatibility html.elements.input.multiple BCD tables load browser html.elements.select.multiple BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern", "title": "HTML attribute: pattern - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: pattern Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. pattern attribute specifies regular expression form control's value match. non-null value conform constraints set pattern value, ValidityState object's read-only patternMismatch property true. Try Overview pattern attribute attribute text, tel, email, url, password, search input types. pattern attribute, specified, regular expression input's value must match value pass constraint validation. must valid JavaScript regular expression, used RegExp type, documented guide regular expressions. pattern's regular expression compiled 'v' flag. makes regular expression unicode-aware, also changes character classes interpreted. allows character class set intersection subtraction operations, addition ] \\ , following characters must escaped using \\ backslash represent literal characters: ( , ) , [ , { , } , / , - , | . mid-2023, 'u' flag specified instead; updating older code, document outlines differences. pattern's regular expression must match entire input's value , rather matching substring - ^(?: implied start pattern )$ end. forward slashes specified around pattern text. regular expression applied attribute value absent, empty string, invalid. input types supporting pattern attribute, notably email url input types, expected value syntaxes must matched. pattern attribute present, value match expected syntax value type, ValidityState object's read-only typeMismatch property true. Constraint validation input's value empty string value match entire regular expression, constraint violation reported ValidityState object's patternMismatch property true . Note: pattern attribute specified value, value implicitly empty string. Thus, non-empty input value result constraint violation. Usability accessibility considerations including pattern , provide description pattern visible text near control. Additionally, include title attribute gives description pattern. User agents may use title contents constraint validation tell user pattern matched. browsers show tooltip title contents, improving usability sighted users. Additionally, assistive technology may read title aloud control gains focus, relied upon accessibility. relying title attribute visual display text content discouraged, many user agents expose attribute accessible manner. Although browsers show tooltip element title hovered, leaves keyboard-only touch-only users. one several reasons must include information informing users fill control match requirements. title used browsers populate error messaging, browsers sometimes also show title text hover, therefore shows non-error situations, careful word titles error occurred. Examples Matching phone number Given following: <p> <label> Enter phone number format (123) - 456 - 7890 (<input name=\"tel1\" type=\"tel\" pattern=\"[0-9]{3}\" placeholder=\"###\" aria-label=\"3-digit area code\" size=\"2\" />) - <input name=\"tel2\" type=\"tel\" pattern=\"[0-9]{3}\" placeholder=\"###\" aria-label=\"3-digit prefix\" size=\"2\" /> - <input name=\"tel3\" type=\"tel\" pattern=\"[0-9]{4}\" placeholder=\"####\" aria-label=\"4-digit number\" size=\"3\" /> </label> </p> 3 sections north American phone number implicit label encompassing three components phone number, expecting 3-digits, 3-digits 4-digits respectively, defined pattern attribute set each. values long short, contain characters digits, patternMismatch true. true , element matches :invalid CSS pseudo-classes. input:invalid { border: red solid 3px; } used minlength maxlength attributes instead, may seen validityState.tooLong validityState.tooShort true. Specifying pattern use pattern attribute specify regular expression inputted value must match order considered valid (see Validating regular expression crash course using regular expressions validate inputs). example restricts value 4-8 characters requires contain lower-case letters. <form> <div> <label for=\"uname\">Choose username: </label> <input type=\"text\" id=\"uname\" name=\"name\" required size=\"45\" pattern=\"[a-z]{4,8}\" title=\"4 8 lowercase letters\" /> <span class=\"validity\"></span> <p>Usernames must lowercase 4-8 characters length.</p> </div> <div> <button>Submit</button> </div> </form> renders like so: Specifications | Specification | |---| | HTML Standard # attr-input-pattern | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder", "title": "HTML attribute: placeholder - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: placeholder placeholder attribute defines text displayed form control control value. placeholder text provide brief hint user expected type data entered control. Effective placeholder text includes word short phrase hints expected data type, explanation prompt. placeholder must used instead <label> . placeholder visible value form control null, using placeholder instead <label> prompt harms usability accessibility. placeholder attribute supported following input types: text , search , url , tel , email , password . also supported element. example shows <textarea> placeholder attribute use explain expected format input field. Note: Except elements, <textarea> placeholder attribute can't include line feeds (LF) carriage returns (CR). either included value, placeholder text clipped. Accessibility concerns Placeholders used show example type data entered form; never replacement <label> element; harms accessibility user experience. <label> text visually programmatically associated corresponding form control. Screen readers announce placeholder content default, announce label content; label informs assistive technology users data entered control. Labels also improve user experience users pointing devices: user clicks, touches, taps <label> , focus moved label's associated form control. Placeholders relied upon replacement label even relying assistive technology. Placeholder text displayed lower color contrast default form control text. design, want users confused placeholder text versus filled-in form field. However, lack contrast cause issues low-vision users. Additionally, placeholder text disappears form fields users start entering text. placeholder text contains instructional information examples disappear, confusing users cognitive issues make form inaccessible placeholder contained label. Example HTML <form action=\"/en-US/docs/Web/HTML/Attributes/placeholder\"> <label for=\"name\">Enter name:</label> <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"e.g. Mike Shinoda\" /> <button type=\"submit\">Submit</button> </form> Result Specifications | Specification | |---| | HTML Standard # attr-input-placeholder | | HTML Standard # attr-textarea-placeholder | Browser compatibility html.elements.input.placeholder BCD tables load browser html.elements.textarea.placeholder BCD tables load browser See also - HTML title - CSS :placeholder-shown pseudo-class selector - CSS ::placeholder pseudo-element selector"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly", "title": "HTML attribute: readonly - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: readonly Boolean readonly attribute, present, makes element mutable, meaning user edit control. Try Overview readonly attribute specified input element, user edit input, element participate constraint validation. readonly attribute supported text , search , url , tel , email , password , date , month , week , time , datetime-local , number <input> types <textarea> form control elements. present input types elements, :read-only pseudo class match. attribute included, :read-write pseudo class match. attribute supported relevant <select> input types already mutable, checkbox radio cannot, definition, start value, file input type. range color , default values. also supported hidden expected user fill form hidden. supported button types, including image . Note: text controls made read-only, since controls (such checkboxes buttons) useful distinction read-only disabled, readonly attribute apply. input readonly attribute, :read-only pseudo-class also applies it. Conversely, inputs support readonly attribute attribute set match :read-write pseudo-class. Attribute interactions difference disabled readonly read-only controls still function still focusable, whereas disabled controls receive focus submitted form generally function controls enabled. read-only field cannot value changed user interaction, required effect inputs readonly attribute also specified. way modify dynamically value readonly attribute script. Note: required attribute permitted inputs readonly attribute specified. Usability Browsers display readonly attribute. Constraint validation element read-only, element's value updated user, participate constraint validation. Example HTML <div class=\"group\"> <input type=\"text\" value=\"Some value\" readonly=\"readonly\" id=\"text\" /> <label for=\"text\">Text box</label> </div> <div class=\"group\"> <input type=\"date\" value=\"2020-01-01\" readonly=\"readonly\" id=\"date\" /> <label for=\"date\">Date</label> </div> <div class=\"group\"> <input type=\"email\" value=\"Some value\" readonly=\"readonly\" id=\"email\" /> <label for=\"email\">Email</label> </div> <div class=\"group\"> <input type=\"password\" value=\"Some value\" readonly=\"readonly\" id=\"pwd\" /> <label for=\"pwd\">Password</label> </div> <div class=\"group\"> <textarea readonly=\"readonly\" id=\"ta\">Some value</textarea> <label for=\"ta\">Message</label> </div> Result Specifications | Specification | |---| | HTML Standard # attr-input-readonly | | HTML Standard # attr-textarea-readonly | Browser compatibility html.elements.input.readonly BCD tables load browser html.elements.textarea.readonly BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel", "title": "HTML attribute: rel - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: rel rel attribute defines relationship linked resource current document. Valid <link> , <a> , <area> , <form> , supported values depend element attribute found. type relationships given value rel attribute, which, present, must value unordered set unique space-separated keywords. Differently class name, express semantics, rel attribute must express tokens semantically valid machines humans. current registries possible values rel attribute IANA link relation registry, HTML Living Standard, freely-editable existing-rel-values page microformats wiki, suggested Living Standard. rel attribute present one three sources used HTML validators (such W3C Markup Validation Service) generate warning. following table lists important existing keywords. Every keyword within space-separated value unique within value. rel value | Description | <link> | <a> <area> | <form> | |---|---|---|---|---| alternate | Alternate representations current document. | Link | Link | allowed | author | Author current document article. | Link | Link | allowed | bookmark | Permalink nearest ancestor section. | allowed | Link | allowed | canonical | Preferred URL current document. | Link | allowed | allowed | dns-prefetch | Tells browser preemptively perform DNS resolution target resource's origin. | External Resource | allowed | allowed | external | referenced document part site current document. | allowed | Annotation | Annotation | expect | Allows page render-blocked essential parts document parsed render consistently. | Link | allowed | allowed | help | Link context-sensitive help. | Link | Link | Link | icon | icon representing current document. | External Resource | allowed | allowed | license | Indicates main content current document covered copyright license described referenced document. | Link | Link | Link | manifest | Web app manifest. | Link | allowed | allowed | | Indicates current document represents person owns linked content. | Link | Link | allowed | modulepreload | Tells browser preemptively fetch script store document's module map later evaluation. Optionally, module's dependencies fetched well. | External Resource | allowed | allowed | next | Indicates current document part series next document series referenced document. | Link | Link | Link | nofollow | Indicates current document's original author publisher endorse referenced document. | allowed | Annotation | Annotation | noopener | Creates top-level browsing context auxiliary browsing context hyperlink would create either those, begin (i.e., appropriate target attribute value). | allowed | Annotation | Annotation | noreferrer | Referer header included. Additionally, effect noopener . | allowed | Annotation | Annotation | opener | Creates auxiliary browsing context hyperlink would otherwise create top-level browsing context auxiliary browsing context (i.e., \"_blank\" target attribute value). | allowed | Annotation | Annotation | pingback | Gives address pingback server handles pingbacks current document. | External Resource | allowed | allowed | preconnect | Specifies user agent preemptively connect target resource's origin. | External Resource | allowed | allowed | prefetch | Specifies user agent preemptively fetch cache target resource likely required followup navigation. | External Resource | allowed | allowed | preload | Specifies user agent must preemptively fetch cache target resource current navigation according potential destination given attribute (and priority associated corresponding destination). | External Resource | allowed | allowed | prerender | Specifies user agent preemptively fetch target resource process way helps deliver faster response future. | External Resource | allowed | allowed | prev | Indicates current document part series previous document series referenced document. | Link | Link | Link | privacy-policy | Gives link information data collection usage practices apply current document. | Link | Link | allowed | search | Gives link resource used search current document related pages. | Link | Link | Link | stylesheet | Imports style sheet. | External Resource | allowed | allowed | tag | Gives tag (identified given address) applies current document. | allowed | Link | allowed | terms-of-service | Link agreement, terms service, document's provider users wish use document. | Link | Link | allowed | rel attribute relevant <link> , <a> , <area> , <form> elements, values relevant subset elements. Like HTML keyword attribute values, values case-insensitive. rel attribute default value. attribute omitted none values attribute supported, document particular relationship destination resource hyperlink two. case, <link> <form> , rel attribute absent, keywords, one space-separated keywords above, element create links. <a> <area> still created links, without defined relationship. Values alternate - Indicates alternate representation current document. Valid <link> ,<a> , and<area> , meaning depends values attributes.- stylesheet keyword a<link> , creates alternate stylesheet.html<!-- persistent style sheet --> <link rel=\"stylesheet\" href=\"default.css\" /> <!-- alternate style sheets --> <link rel=\"alternate stylesheet\" href=\"highcontrast.css\" title=\"High contrast\" /> - hreflang attribute differs document language, indicates translation. - type attribute value of\"application/rss+xml\" or\"application/atom+xml\" , creates hyperlink referencing syndication feed.html<link rel=\"alternate\" type=\"application/atom+xml\" href=\"posts.xml\" title=\"Blog\" /> - Otherwise, creates hyperlink referencing alternate representation current document, whose nature given hreflang andtype attributes.- hreflang given alongsidealternate , value ofhreflang different current document's language, indicates referenced document translation. - type given alongsidealternate , indicates referenced document alternative format (such PDF). - hreflang andtype attributes may given alongsidealternate . html<link rel=\"alternate\" href=\"/fr/html/print\" hreflang=\"fr\" type=\"text/html\" media=\"print\" title=\"French HTML (for printing)\" /> <link rel=\"alternate\" href=\"/fr/pdf\" hreflang=\"fr\" type=\"application/pdf\" title=\"French PDF\" /> - - - Indicates referenced document provides information author current document article. Relevant <link> ,<a> , and<area> elements.With <a> and<area> , indicates linked document (ormailto: ) provides information author nearest<article> ancestor one, otherwise entire document.With <link> , represents author entire document.Note: historical reasons, obsolete attribute value rev=\"made\" treated asrel=\"author\" . bookmark - Relevant rel attribute value the<a> and<area> elements. Gives permalink nearest ancestor<article> element, one. ancestor<article> element, gives permalink section linking element closely associated with. canonical - Valid <link> , defines preferred URL current document, helps search engines reduce duplicate content. dns-prefetch - Relevant <link> element the<body> and<head> , tells browser preemptively perform DNS resolution target resource's origin. Useful resources user likely need, helps reduce latency thereby improves performance user access resources browser preemptively performed DNS resolution origin specified resource. See dns-prefetch described resource hints. external - Relevant <form> ,<a> , and<area> , indicates referenced document part current site. used attribute selectors style external links way indicates user leaving current site. expect Experimental- Allows page render-blocked essential parts document parsed render consistently. Note render-blocking occurs supplemented blocking=\"render\" attribute.Note: See Stabilizing page state make cross-document transitions consistent information use. help - Relevant <form> ,<link> ,<a> , and<area> , thehelp keyword indicates linked content provides context-sensitive help, providing information parent element defining hyperlink, children. used within<link> , help whole document. included with<a> and<area> supported, defaultcursor behelp instead ofpointer . icon - Valid <link> , linked resource represents icon, resource representing page user interface, current document.The common use icon value favicon:html<link rel=\"icon\" href=\"favicon.ico\" /> multiple <link rel=\"icon\"> s, browser uses theirmedia ,type , andsizes attributes select appropriate icon. several icons equally appropriate, last one used. appropriate icon later found inappropriate, example uses unsupported format, browser proceeds next-most appropriate, on.Note: crossorigin attribute supported forrel=\"icon\" Chromium-based browsers. See open Chromium issue.Note: Apple's iOS use link type, sizes attribute, like others mobile browsers do, select webpage icon Web Clip start-up placeholder. Instead uses non-standardapple-touch-icon andapple-touch-startup-image respectively.Note: shortcut link type often seen beforeicon , link type non-conforming, ignored web authors must use anymore. license - Valid <a> ,<area> ,<form> ,<link> elements, thelicense value indicates hyperlink leads document describing licensing information; main content current document covered copyright license described referenced document. inside the<head> element, standard distinguish hyperlink applying specific part document document whole. data page indicate this.html<link rel=\"license\" href=\"#license\" /> Note: Although recognized, synonym copyright incorrect must avoided. manifest - Web app manifest. Requires use CORS protocol cross-origin fetching. modulepreload - Useful improved performance, relevant <link> anywhere document, settingrel=\"modulepreload\" tells browser preemptively fetch script (and dependencies) store document's module map later evaluation.modulepreload links ensure network fetching done module ready (but evaluated) module map necessarily needed. See alsomodulepreload . next - Relevant <form> ,<link> ,<a> , and<area> , thenext values indicates current document part series, next document series referenced document. included a<link> , browsers may assume document fetched next, treat resource hint. nofollow - Relevant <form> ,<a> , and<area> , thenofollow keyword tells search engine spiders ignore link relationship. nofollow relationship may indicate current document's owner endorse referenced document. often included Search Engine Optimizers pretending link farms spam pages. noopener - Relevant <form> ,<a> , and<area> , creates top-level browsing context auxiliary browsing context hyperlink would create either begin (i.e., appropriatetarget attribute value). words, makes link behave ifwindow.opener null andtarget=\"_parent\" set.This opposite opener . noreferrer - Relevant <form> ,<a> , and<area> , including value makes referrer unknown (noReferer header included), creates top-level browsing context ifnoopener also set. opener - Creates auxiliary browsing context hyperlink would otherwise create top-level browsing context auxiliary browsing context (i.e., \"_blank\" astarget attribute value). Effectively, opposite noopener. pingback - Gives address pingback server handles pingbacks current document. See Pingback specification. preconnect - Provides hint browser suggesting open connection linked website advance, without disclosing private information downloading content, link followed linked content fetched quickly. prefetch - Specifies user agent preemptively fetch cache target resource likely required followup navigation. See prefetch information. preload - Specifies user agent must preemptively fetch cache target resource current navigation according potential destination given attribute (and priority associated corresponding destination). See page thepreload value. prerender Deprecated Non-standard- Specifies user agent preemptively fetch target resource process way helps deliver faster response future, example fetching subresources performing rendering. prev - Similar next keyword, relevant to<form> ,<link> ,<a> , and<area> , theprev values indicates current document part series, link references previous document series referenced document.Note: synonym previous incorrect used. privacy-policy - Valid <a> ,<area> , and<link> elements, theprivacy-policy value indicates referenced document Privacy Policy describes data collection usage practices current document. search - Relevant <form> ,<link> ,<a> , and<area> elements, thesearch keywords indicates hyperlink references document whose interface specially designed searching current document, site, related resources, providing link resource used search.If type attribute set toapplication/opensearchdescription+xml resource OpenSearch plugin easily added interface Firefox. stylesheet - Valid <link> element, imports external resource used stylesheet. Thetype attribute needed atext/css stylesheet, default value. stylesheet typetext/css best declare type.While attribute defines link stylesheet, interaction attributes key terms within rel value impact whether stylesheet downloaded and/or used. used alternate keyword, defines alternative style sheet. case, include non-emptytitle .The external stylesheet used even downloaded media match value media attribute.Requires use CORS protocol cross-origin fetching. tag - Valid <a> , and<area> elements, gives tag (identified given address) applies current document. tag value denotes link refers document describing tag applying document located. link type meant tags within tag cloud, tags apply group pages, whereas thetag value therel attribute single document. terms-of-service - Valid <a> ,<area> , and<link> elements, theterms-of-service value indicates referenced document Terms Service describes agreements current document's provider users wish use document provided. Non-standard values apple-touch-icon - Specifies icon web application iOS device. Specifications | Specification | |---| | HTML Standard # linkTypes | | HTML Standard # attr-hyperlink-rel | | HTML Standard # attr-form-rel | Browser compatibility html.elements.link.rel BCD tables load browser html.elements.a.rel BCD tables load browser html.elements.area.rel BCD tables load browser html.elements.form.rel BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required", "title": "HTML attribute: required - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: required Boolean required attribute, present, indicates user must specify value input owning form submitted. required attribute supported text , search , url , tel , email , password , date , month , week , time , datetime-local , number , checkbox , radio , file , <input> types along <select> <textarea> form control elements. present input types elements, :required pseudo class match. attribute included, :optional pseudo class match. attribute supported on, relevant to, range color input types, default values. Type color defaults #000000 . Type range defaults midpoint min max \u2014 min max defaulting 0 100 respectively browsers declared. required also supported hidden input type \u2014 users cannot expected fill hidden form field. Finally, required supported button input types, including image. case named group radio buttons, single radio button group required attribute, radio button group must checked, although one attribute applied. improve code maintenance, recommended either include required attribute every same-named radio button group, else none. case named group checkbox input types, checkboxes required attribute required. Note: Setting aria-required=\"true\" tells screen reader element (any element) required, bearing optionality element. Attribute interactions read-only field cannot changed, required effect inputs readonly attribute also specified. Usability including required attribute, provide visible indication near control informing user <input> , <select> <textarea> required. addition, target required form controls :required pseudo-class, styling way indicate required. improves usability sighted users. Assistive technology inform user form control mandatory based required attribute, adding aria-required=\"true\" hurt, case browser / screen reader combination support required yet. Constraint validation element required element's value empty string, element suffering valueMissing element match :invalid pseudo class. Accessibility concerns Provide indication users informing form control required. Ensure messaging multi-faceted, text, color, markings, attribute, users understand requirements whether color blindness, cognitive differences, using screen reader. Example HTML <form> <div class=\"group\"> <input type=\"text\" /> <label>Normal</label> </div> <div class=\"group\"> <input type=\"text\" required /> <label>Required</label> </div> <input type=\"submit\" /> </form> Result Specifications | Specification | |---| | HTML Standard # attr-input-required | | HTML Standard # attr-select-required | | HTML Standard # attr-textarea-required | Browser compatibility html.elements.input.required BCD tables load browser html.elements.select.required BCD tables load browser html.elements.textarea.required BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size", "title": "HTML attribute: size - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: size size attribute defines width <input> height <select> element. input element, defines number characters user agent allows user see editing value. select element, defines number options shown user. must valid non-negative integer greater zero. size specified, invalid value specified, input size declared, form control default width based user agent. CSS targets element properties impacting width, CSS takes precedence. size attribute impact constraint validation. Try Examples adding size input types, width input controlled. Adding size select changes height, defining many options visible closed state. <label for=\"fruit\">Enter fruit</label> <input type=\"text\" size=\"15\" id=\"fruit\" /> <label for=\"vegetable\">Enter vegetable</label> <input type=\"text\" id=\"vegetable\" /> <select name=\"fruits\" size=\"5\"> <option>banana</option> <option>cherry</option> <option>strawberry</option> <option>durian</option> <option>blueberry</option> </select> <select name=\"vegetables\" size=\"5\"> <option>carrot</option> <option>cucumber</option> <option>cauliflower</option> <option>celery</option> <option>collard greens</option> </select> Specifications | Specification | |---| | HTML Standard # attr-select-size | | HTML Standard # attr-input-size | Browser compatibility html.elements.select.size BCD tables load browser html.elements.input.size BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step", "title": "HTML attribute: step - HTML: HyperText Markup Language | MDN", "text": "HTML attribute: step Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. step attribute number specifies granularity value must adhere keyword . valid numeric input types, including date, month, week, time, datetime-local, number range types. step sets stepping interval clicking spinner buttons, moving slider left right range, validating different date types. explicitly included, step defaults 1 number range , 1 unit type (minute, week, month, day) date/time input types. value must positive number - integer float \u2014 special value , means stepping implied value allowed (barring constraints, min max ). default stepping value number inputs 1, allowing integers entered, unless stepping base integer. default stepping value time 60 seconds, 900 equal 15 minutes. Syntax | Input type | Value | Example | |---|---|---| | date | 1 (day) | <input type=\"date\" min=\"2019-12-25\" step=\"1\"> | | month | 1 (month) | <input type=\"month\" min=\"2019-12\" step=\"12\"> | | week | 1 (week) | <input type=\"week\" min=\"2019-W23\" step=\"2\"> | | time | 60 (seconds) | <input type=\"time\" min=\"09:00\" step=\"900\"> | | datetime-local | 60 (seconds) | <input type=\"datetime-local\" min=\"2019-12-25T19:30\" step=\"900\"> | | number | 1 | <input type=\"number\" min=\"0\" step=\"0.1\" max=\"10\"> | | range | 1 | <input type=\"range\" min=\"0\" step=\"2\" max=\"10\"> | explicitly set, valid values number , date/time input types, range input types equal basis stepping - min value increments step value, max value, specified. following example results even integer, 10 greater, valid: <input type=\"number\" min=\"10\" step=\"2\" /> step omitted, integer valid floats like 4.2 valid step defaults 1. 4.2 valid: - either step would set toany , 0.1, 0.2, - min value would number ending .2, 0.2, 1.2, -5.2. Examples min impact step value min defines valid values, even step attribute included. step defaults 1 number input type. example, add big red border around invalid inputs: input:invalid { border: solid red 3px; } define input minimum value 1.2 step value 2: <input id=\"myNumber\" name=\"myNumber\" type=\"number\" step=\"2\" min=\"1.2\" /> Valid values include 1.2, 3.2, 5.2, 7.2, 9.2, 11.2, on. floats odd-numbered integer part decimal part .2 valid. number spinner, present, generates valid float values 1.2 greater, increments 2. Note: data entered user adhere stepping configuration, value considered invalid constraint validation match :invalid :out-of-range pseudoclasses. See Client-side validation stepMismatch information. Accessibility concerns Provide instructions help users understand complete form use individual form controls. Indicate required optional input, data formats, relevant information. using min attribute, ensure minimum requirement understood user. Providing instructions within <label> may sufficient. providing instructions outside labels, allows flexible positioning design, consider using aria-labelledby aria-describedby . Specifications | Specification | |---| | HTML Standard # attr-input-step | Browser compatibility BCD tables load browser See also max min - Constraint validation - Form validation validityState.stepMismatch :out-of-range <input> - date, month, week, time, datetime-local, number range types, <meter>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements", "title": "<h1>\u2013<h6>: The HTML Section Heading elements - HTML: HyperText Markup Language | MDN", "text": "<h1>\u2013<h6>: HTML Section Heading elements <h1> <h6> HTML elements represent six levels section headings. <h1> highest section level <h6> lowest. default, heading elements create block-level box layout, starting new line taking full width available containing block. Try Attributes elements include global attributes. Usage notes Avoid using multiple <h1> elements one page using multiple <h1> elements one page allowed HTML standard (as long nested), considered best practice. page generally single <h1> element describes content page (similar document's <title> element). Note: Nesting multiple <h1> elements nested sectioning elements allowed older versions HTML standard. However, never considered best practice non-conforming. Read Document Outline Algorithm. Prefer using one <h1> per page nest headings without skipping levels. Accessibility Navigation common navigation technique users screen reading software quickly jump heading heading order determine content page. this, important skip one heading levels. may create confusion, person navigating way may left wondering missing heading is. this: <h1>Heading level 1</h1> <h3>Heading level 3</h3> <h4>Heading level 4</h4> Prefer this: <h1>Heading level 1</h1> <h2>Heading level 2</h2> <h3>Heading level 3</h3> Nesting Headings may nested subsections reflect organization content page. screen readers also generate ordered list headings page, help person quickly determine content hierarchy navigate different headings. Given following page structure: <h1>Beetles</h1> <h2>Etymology</h2> <h2>Distribution Diversity</h2> <h2>Evolution</h2> <h3>Late Paleozoic</h3> <h3>Jurassic</h3> <h3>Cretaceous</h3> <h3>Cenozoic</h3> <h2>External Morphology</h2> <h3>Head</h3> <h4>Mouthparts</h4> <h3>Thorax</h3> <h4>Prothorax</h4> <h4>Pterothorax</h4> <h3>Legs</h3> <h3>Wings</h3> <h3>Abdomen</h3> Screen readers would generate list like this: - h1 Beetles- h2 Etymology - h2 Distribution Diversity - h2 Evolutionh3 Late Paleozoich3 Jurassich3 Cretaceoush3 Cenozoic - h2 External Morphology- h3 Headh4 Mouthparts - h3 Thoraxh4 Prothoraxh4 Pterothorax - h3 Legs - h3 Wings - h3 Abdomen - - headings nested, heading levels may \"skipped\" closing subsection. - Headings \u2022 Page Structure \u2022 WAI Web Accessibility Tutorials - MDN Understanding WCAG, Guideline 1.3 explanations - Understanding Success Criterion 1.3.1 | W3C Understanding WCAG 2.0 - MDN Understanding WCAG, Guideline 2.4 explanations - Understanding Success Criterion 2.4.1 | W3C Understanding WCAG 2.0 - Understanding Success Criterion 2.4.6 | W3C Understanding WCAG 2.0 - Understanding Success Criterion 2.4.10 | W3C Understanding WCAG 2.0 Labeling section content Another common navigation technique users screen reading software generate list sectioning content use determine page's layout. Sectioning content labeled using combination aria-labelledby id attributes, label concisely describing purpose section. technique useful situations one sectioning element page. Sectioning content examples <header> <nav aria-labelledby=\"primary-navigation\"> <h2 id=\"primary-navigation\">Primary navigation</h2> <!-- navigation items --> </nav> </header> <!-- page content --> <footer> <nav aria-labelledby=\"footer-navigation\"> <h2 id=\"footer-navigation\">Footer navigation</h2> <!-- navigation items --> </nav> </footer> example, screen reading technology would announce two <nav> sections, one called \"Primary navigation\" one called \"Footer navigation\". labels provided, person using screen reading software may investigate nav element's contents determine purpose. Examples headings following code shows heading levels, use. <h1>Heading level 1</h1> <h2>Heading level 2</h2> <h3>Heading level 3</h3> <h4>Heading level 4</h4> <h5>Heading level 5</h5> <h6>Heading level 6</h6> Example page following code shows headings content them. <h1>Heading elements</h1> <h2>Summary</h2> <p>Some text here\u2026</p> <h2>Examples</h2> <h3>Example 1</h3> <p>Some text here\u2026</p> <h3>Example 2</h3> <p>Some text here\u2026</p> <h2>See also</h2> <p>Some text here\u2026</p> Technical summary | Content categories | Flow content, heading content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | heading | | Permitted ARIA roles | tab , presentation none | | DOM interface | HTMLHeadingElement | Specifications | Specification | |---| | HTML Standard # the-h1,-h2,-h3,-h4,-h5,-and-h6-elements | Browser compatibility html.elements.h1 BCD tables load browser html.elements.h2 BCD tables load browser html.elements.h3 BCD tables load browser html.elements.h4 BCD tables load browser html.elements.h5 BCD tables load browser html.elements.h6 BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a", "title": "<a>: The Anchor element - HTML: HyperText Markup Language | MDN", "text": "<a>: Anchor element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <a> HTML element (or anchor element), href attribute, creates hyperlink web pages, files, email addresses, locations page, anything else URL address. Content within <a> indicate link's destination. href attribute present, pressing enter key focused <a> element activate it. Try Attributes element's attributes include global attributes. attributionsrc Experimental- Specifies want browser send Attribution-Reporting-Eligible header. server-side used trigger sending anAttribution-Reporting-Register-Source header response, register navigation-based attribution source.The browser stores source data associated navigation-based attribution source (as provided Attribution-Reporting-Register-Source response header) user clicks link. See Attribution Reporting API details.There two versions attribute set: - Boolean, i.e. attributionsrc name. specifies want theAttribution-Reporting-Eligible header sent server thehref attribute points to. fine handling attribution source registration server. - Value containing one URLs, example: htmlattributionsrc=\"https://a.example/register-source https://b.example/register-source\" useful cases requested resource server control, want handle registering attribution source different server. case, specify one URLs value attributionsrc . resource request occurs, theAttribution-Reporting-Eligible header sent URL(s) specified inattributionsrc addition resource origin. URLs respond theAttribution-Reporting-Register-Source complete registration.Note: Specifying multiple URLs means multiple attribution sources registered feature. might example different campaigns trying measure success of, involve generating different reports different data. <a> elements cannot used attribution triggers, sources. - download - Causes browser treat linked URL download. used without filename value:- Without value, browser suggest filename/extension, generated various sources: - Content-Disposition HTTP header - final segment URL path - media type (from Content-Type header, start adata: URL, orBlob.type ablob: URL) - - filename : defining value suggests filename./ and\\ characters converted underscores (_ ). Filesystems may forbid characters filenames, browsers adjust suggested name necessary. Note: - download works same-origin URLs, theblob: anddata: schemes. - browsers treat downloads varies browser, user settings, factors. user may prompted download starts, file may saved automatically, may open automatically, either external application browser itself. - Content-Disposition header different information thedownload attribute, resulting behavior may differ:- header specifies filename , takes priority filename specified thedownload attribute. - header specifies disposition inline , Chrome Firefox prioritize attribute treat download. Old Firefox versions (before 82) prioritize header display content inline. - header specifies - href - URL hyperlink points to. Links restricted HTTP-based URLs \u2014 use URL scheme supported browsers: - Telephone numbers tel: URLs - Email addresses mailto: URLs - SMS text messages sms: URLs - Executable code javascript: URLs - web browsers may support URL schemes, websites registerProtocolHandler() Moreover URL features locate specific parts resource, including: - Sections page document fragments - Specific text portions text fragments - Pieces media files media fragments - Telephone numbers hreflang - Hints human language linked URL. built-in functionality. Allowed values global lang attribute. ping - space-separated list URLs. link followed, browser send POST requests bodyPING URLs. Typically tracking. referrerpolicy - much referrer send following link. no-referrer : TheReferer header sent.no-referrer-when-downgrade : TheReferer header sent origins without TLS (HTTPS).origin : sent referrer limited origin referring page: scheme, host, port.origin-when-cross-origin : referrer sent origins limited scheme, host, port. Navigations origin still include path.same-origin : referrer sent origin, cross-origin requests contain referrer information.strict-origin : send origin document referrer protocol security level stays (HTTPS\u2192HTTPS), send less secure destination (HTTPS\u2192HTTP).strict-origin-when-cross-origin (default): Send full URL performing same-origin request, send origin protocol security level stays (HTTPS\u2192HTTPS), send header less secure destination (HTTPS\u2192HTTP).unsafe-url : referrer include origin path (but fragment, password, username). value unsafe, leaks origins paths TLS-protected resources insecure origins. rel - relationship linked URL space-separated link types. target - display linked URL, name browsing context (a tab, window, <iframe> ). following keywords special meanings load URL:_self : current browsing context. (Default)_blank : Usually new tab, users configure browsers open new window instead._parent : parent browsing context current one. parent, behaves as_self ._top : topmost browsing context. specific, means \"highest\" context that's ancestor current one. ancestors, behaves as_self ._unfencedTop : Allows embedded fenced frames navigate top-level frame (i.e. traversing beyond root fenced frame, unlike reserved destinations). Note navigation still succeed used outside fenced frame context, act like reserved keyword. Note: Setting target=\"_blank\" on<a> elements implicitly provides samerel behavior settingrel=\"noopener\" setwindow.opener . type - Hints linked URL's format MIME type. built-in functionality. Deprecated attributes charset Deprecated- Hinted character encoding linked URL. Note: attribute deprecated used authors. Use HTTP Content-Type header linked URL. coords Deprecated- Used shape attribute. comma-separated list coordinates. name Deprecated- required define possible target location page. HTML 4.01, id andname could used on<a> , long identical values.Note: Use global attribute id instead. rev Deprecated- Specified reverse link; opposite rel attribute. Deprecated confusing. shape Deprecated- shape hyperlink's region image map. Note: Use <area> element image maps instead. Accessibility Strong link text content inside link indicate link goes, even context. Inaccessible, weak link text sadly common mistake link words \"click here\" \"here\": <p>Learn products <a href=\"/products\">here</a>.</p> Result Strong link text Luckily, easy fix, actually shorter inaccessible version! <p>Learn <a href=\"/products\">about products</a>.</p> Result Assistive software shortcuts list links page. However, strong link text benefits users \u2014 \"list links\" shortcut emulates sighted users quickly scan pages. onclick events Anchor elements often abused fake buttons setting href # javascript:void(0) prevent page refreshing, listening click events. bogus href values cause unexpected behavior copying/dragging links, opening links new tab/window, bookmarking, JavaScript loading, errors, disabled. also convey incorrect semantics assistive technologies, like screen readers. Use <button> instead. general, use hyperlink navigation real URL. External links linking non-HTML resources Links open new tab/window via target=\"_blank\" , links point download file indicate happen link followed. People experiencing low vision conditions, navigating aid screen reading technology, cognitive concerns may confused new tab, window, application opens unexpectedly. Older screen-reading software may even announce behavior. Link opens new tab/window <a target=\"_blank\" href=\"https://www.wikipedia.org\"> Wikipedia (opens new tab) </a> Result Link non-HTML resource icon used signify link behavior, make sure alt attribute describe purpose. case icon missing, alt attribute's content still convey link's behavior. <p> <a href=\"https://www.wikipedia.org/\" target=\"_blank\"> Wikipedia <img src=\"new-tab.svg\" width=\"14\" alt=\"(Opens new tab)\" /> </a> <br /> <a href=\"2017-annual-report.ppt\"> 2017 annual report <img src=\"powerpoint.svg\" width=\"14\" alt=\"(PowerPoint file)\" /> </a> </p> <p> <a href=\"https://www.wikipedia.org/\" target=\"_blank\"> Wikipedia <img src=\"missing-icon.svg\" width=\"14\" alt=\"(Opens new tab)\" /> </a> <br /> <a href=\"2017-annual-report.ppt\"> 2017 annual report <img src=\"missing-icon.svg\" width=\"14\" alt=\"(PowerPoint file)\" /> </a> </p> Result Skip links skip link link placed early possible <body> content points beginning page's main content. Usually, CSS hides skip link offscreen focused. <body> <a href=\"#content\" class=\"skip-link\">Skip main content</a> <header>\u2026</header> <!-- skip link jumps --> <main id=\"content\"></main> </body> .skip-link { position: absolute; top: -3em; background: #fff; } .skip-link:focus { top: 0; } Result Skip links let keyboard users bypass content repeated throughout multiple pages, header navigation. Skip links especially useful people navigate aid assistive technology switch control, voice command, mouth sticks/head wands, act moving repetitive links laborious. Size proximity Size Interactive elements, like links, provide area large enough easy activate them. helps variety people, including motor control issues using imprecise inputs touchscreen. minimum size 44\u00d744 CSS pixels recommended. Text-only links prose content exempt requirement, still good idea make sure enough text hyperlinked easily activated. - Understanding Success Criterion 2.5.5: Target Size - Target Size 2.5.5 - Quick test: Large touch targets Proximity Interactive elements, like links, placed close visual proximity space separating them. Spacing helps people motor control issues, may otherwise accidentally activate wrong interactive content. Spacing may created using CSS properties like margin . Examples Linking absolute URL HTML <a href=\"https://www.mozilla.com\">Mozilla</a> Result Linking relative URLs HTML <a href=\"//example.com\">Scheme-relative URL</a> <a href=\"/en-US/docs/Web/HTML\">Origin-relative URL</a> <a href=\"p\">Directory-relative URL</a> <a href=\"./p\">Directory-relative URL</a> <a href=\"../p\">Parent-directory-relative URL</a> Result Linking element page <!-- <a> element links section --> <p><a href=\"#Section_further_down\">Jump heading below</a></p> <!-- Heading link --> <h2 id=\"Section_further_down\">Section down</h2> Result Note: use href=\"#top\" empty fragment (href=\"#\" ) link top current page, defined HTML specification. Linking email address create links open user's email program let send new message, use mailto: scheme: <a href=\"mailto:nowhere@mozilla.org\">Send email nowhere</a> Result details mailto: URLs, including subject body, see Email links RFC 6068. Linking telephone numbers <a href=\"tel:+49.157.0156\">+49 157 0156</a> <a href=\"tel:+1(800)555-0123\">(800) 555-0123</a> Result tel: link behavior varies device capabilities: - Cellular devices autodial number. - operating systems programs make calls, like Skype FaceTime. - Websites make phone calls registerProtocolHandler , asweb.skype.com . - behaviors include saving number contacts, sending number another device. See RFC 3966 syntax, additional features, details tel: URL scheme. Using download attribute save <canvas> PNG save <canvas> element's contents image, create link href canvas data data: URL created JavaScript download attribute provides file name downloaded PNG file: Example painting app save link HTML <p> Paint holding mouse button moving it. <a href=\"\" download=\"my_painting.png\">Download painting</a> </p> <canvas width=\"300\" height=\"300\"></canvas> CSS html { font-family: sans-serif; } canvas { background: #fff; border: 1px dashed; } { display: inline-block; background: #69c; color: #fff; padding: 5px 10px; } JavaScript const canvas = document.querySelector(\"canvas\"); const c = canvas.getContext(\"2d\"); c.fillStyle = \"hotpink\"; let isDrawing; function draw(x, y) { (isDrawing) { c.beginPath(); c.arc(x, y, 10, 0, Math.PI * 2); c.closePath(); c.fill(); } } canvas.addEventListener(\"mousemove\", (event) => draw(event.offsetX, event.offsetY), ); canvas.addEventListener(\"mousedown\", () => (isDrawing = true)); canvas.addEventListener(\"mouseup\", () => (isDrawing = false)); document .querySelector(\"a\") .addEventListener( \"click\", (event) => (event.target.href = canvas.toDataURL()), ); Result Security privacy <a> elements consequences users' security privacy. See Referer header: privacy security concerns information. Using target=\"_blank\" without rel=\"noreferrer\" rel=\"noopener\" makes website vulnerable window.opener API exploitation attacks, although note that, newer browser versions setting target=\"_blank\" implicitly provides protection setting rel=\"noopener\" . See browser compatibility details. Technical summary | Content categories | Flow content, phrasing content, interactive content, palpable content. | |---|---| | Permitted content | Transparent, except descendant may interactive content <a> element, descendant may specified tabindex attribute. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content, <a> elements. | | Implicit ARIA role | link href attribute present, otherwise generic | | Permitted ARIA roles | | | DOM interface | HTMLAnchorElement | Specifications | Specification | |---| | HTML Standard # the-a-element | Browser compatibility BCD tables load browser See also <link> similar to<a> , metadata hyperlinks invisible users.:link CSS pseudo-class match<a> elements URL inhref attribute yet visited user.:visited CSS pseudo-class match<a> elements URL inhref attribute visited user past.:any-link CSS pseudo-class match<a> elements withhref attribute.- Text fragments user-agent instructions added URLs allow content authors link specific text page, without IDs required."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr", "title": "<abbr>: The Abbreviation element - HTML: HyperText Markup Language | MDN", "text": "<abbr>: Abbreviation element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <abbr> HTML element represents abbreviation acronym. including abbreviation acronym, provide full expansion term plain text first use, along <abbr> mark abbreviation. informs user abbreviation acronym means. optional title attribute provide expansion abbreviation acronym full expansion present. provides hint user agents announce/display content informing users abbreviation means. present, title must contain full description nothing else. Try Attributes element supports global attributes. title attribute specific semantic meaning used <abbr> element; must contain full human-readable description expansion abbreviation. text often presented browsers tooltip mouse cursor hovered element. <abbr> element use independent others; providing title one automatically attach expansion text others content text. Usage notes Typical use cases certainly required abbreviations marked using <abbr> . are, though, cases helpful so: - abbreviation used want provide expansion definition outside flow document's content, use <abbr> appropriatetitle . - define abbreviation may unfamiliar reader, present term using <abbr> inline text providing definition. Include atitle attribute inline expansion definition available. - abbreviation's presence text needs semantically noted, <abbr> element useful. used, turn, styling scripting purposes. - use <abbr> concert with<dfn> establish definitions terms abbreviations acronyms. See example Defining abbreviation below. Grammar considerations languages grammatical number (that is, languages number items affects grammar sentence), use grammatical number title attribute inside <abbr> element. especially important languages two numbers, Arabic, also relevant English. Default styling purpose element purely convenience author browsers display inline (display: inline ) default, though default styling varies one browser another: browsers add dotted underline content element. Others add dotted underline converting contents small caps. Others may style differently <span> element. control styling, use text-decoration font-variant . Accessibility Spelling acronym abbreviation full first time used page beneficial helping people understand it, especially content technical industry jargon. include title expanding abbreviation acronym text possible. difference announced word phrase displayed screen, especially technical jargon reader may familiar with, jarring. <p> JavaScript Object Notation (<abbr>JSON</abbr>) lightweight data-interchange format. </p> especially helpful people unfamiliar terminology concepts discussed content, people new language, people cognitive concerns. Examples Marking abbreviation semantically mark abbreviation without providing expansion description, use <abbr> without attributes, seen example. HTML <p>Using <abbr>HTML</abbr> fun easy!</p> Result Styling abbreviations use CSS set custom style used abbreviations, seen basic example. HTML <p>Using <abbr>CSS</abbr>, style abbreviations!</p> CSS abbr { font-variant: all-small-caps; } Result Providing expansion Adding title attribute lets provide expansion definition abbreviation acronym. HTML <p>Ashok's joke made <abbr title=\"Laugh Loud\">LOL</abbr> big time.</p> Result Defining abbreviation use <abbr> tandem <dfn> formally define abbreviation, shown here. HTML <p> <dfn id=\"html\"><abbr title=\"HyperText Markup Language\">HTML</abbr> </dfn> markup language used create semantics structure web page. </p> <p> <dfn id=\"spec\">Specification</dfn> (<abbr>spec</abbr>) document outlines detail technology API intended function accessed. </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content | |---|---| | Permitted content | Phrasing content | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM Interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-abbr-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym", "title": "<acronym> - HTML: HyperText Markup Language | MDN", "text": "<acronym> Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <acronym> HTML element allows authors clearly indicate sequence characters compose acronym abbreviation word. Warning: use element. Use <abbr> element instead. Attributes element global attributes, common elements. DOM Interface element implements HTMLElement interface. Examples <p> <acronym title=\"World Wide Web\">WWW</acronym> component Internet. </p> Result Default styling Though purpose tag purely convenience author, default styling varies one browser another: - Opera, Firefox, Chrome, others add dotted underline content element. - browsers add dotted underline, also put small caps; avoid styling, adding something like font-variant: none CSS takes care case. therefore recommended web authors either explicitly style element, accept cross-browser variation. Specifications | Specification | |---| | HTML Standard # acronym | Browser compatibility BCD tables load browser See also - <abbr> HTML element"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address", "title": "<address>: The Contact Address element - HTML: HyperText Markup Language | MDN", "text": "<address>: Contact Address element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <address> HTML element indicates enclosed HTML provides contact information person people, organization. Try contact information provided <address> element's contents take whatever form appropriate context, may include type contact information needed, physical address, URL, email address, phone number, social media handle, geographic coordinates, forth. <address> element include name person, people, organization contact information refers. <address> used variety contexts, providing business's contact information page header, indicating author article including <address> element within <article> . Attributes element includes global attributes. Usage notes - <address> element used represent contact information nearest<article> or<body> element ancestor. - element contain information contact information, like publication date (which belongs <time> element). - Typically <address> element placed inside the<footer> element current section, any. Examples example demonstrates use <address> demarcate contact information article's author. <address> contact author <a href=\"http://www.example.com/contact\">www.example.com</a>.<br /> see bugs, please <a href=\"mailto:webmaster@example.com\">contact webmaster</a>.<br /> may also want visit us:<br /> Mozilla Foundation<br /> 331 E Evelyn Ave<br /> Mountain View, CA 94041<br /> USA </address> Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Flow content, nested <address> element, heading content (<hgroup> , h1, h2, h3, h4, h5, h6), sectioning content (<article> , <aside> , <section> , <nav> ), <header> <footer> element. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content, always excluding <address> elements (according logical principle symmetry, <address> tag, parent, nested <address> element, <address> content <address> tag parent). | | Implicit ARIA role | group | | Permitted ARIA roles | | | DOM interface | HTMLElement Prior Gecko 2.0 (Firefox 4), Gecko implemented element using HTMLSpanElement interface | Specifications | Specification | |---| | HTML Standard # the-address-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area", "title": "<area>: The Image Map Area element - HTML: HyperText Markup Language | MDN", "text": "<area>: Image Map Area element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <area> HTML element defines area inside image map predefined clickable areas. image map allows geometric areas image associated hypertext links. element used within <map> element. Try Attributes element's attributes include global attributes. alt - text string alternative display browsers display images. text phrased presents user kind choice image would offer displayed without alternative text. attribute required href attribute used. coords - coords attribute details coordinates theshape attribute size, shape, placement an<area> . attribute must used ifshape set todefault .rect : value isx1,y1,x2,y2 . value specifies coordinates top-left bottom-right corner rectangle. example, in<area shape=\"rect\" coords=\"0,0,253,27\" href=\"#\" target=\"_blank\" alt=\"Mozilla\"> coordinates are0,0 and253,27 , indicating top-left bottom-right corners rectangle, respectively.circle : value isx,y,radius . Value specifies coordinates circle center radius. example:<area shape=\"circle\" coords=\"130,136,60\" href=\"#\" target=\"_blank\" alt=\"MDN\"> poly : value isx1,y1,x2,y2,..,xn,yn . Value specifies coordinates edges polygon. first last coordinate pairs same, browser add last coordinate pair close polygon values numbers CSS pixels. download - attribute, present, indicates linked resource intended downloaded rather displayed browser. See <a> full description thedownload attribute. href - hyperlink target area. value valid URL. attribute may omitted; so, <area> element represent hyperlink. ping - Contains space-separated list URLs which, hyperlink followed, POST requests bodyPING sent browser (in background). Typically used tracking. referrerpolicy - string indicating referrer use fetching resource: no-referrer : TheReferer header sent.no-referrer-when-downgrade : TheReferer header sent origins without TLS (HTTPS).origin : sent referrer limited origin referring page: scheme, host, port.origin-when-cross-origin : referrer sent origins limited scheme, host, port. Navigations origin still include path.same-origin : referrer sent origin, cross-origin requests contain referrer information.strict-origin : send origin document referrer protocol security level stays (HTTPS\u2192HTTPS), send less secure destination (HTTPS\u2192HTTP).strict-origin-when-cross-origin (default): Send full URL performing same-origin request, send origin protocol security level stays (HTTPS\u2192HTTPS), send header less secure destination (HTTPS\u2192HTTP).unsafe-url : referrer include origin path (but fragment, password, username). value unsafe, leaks origins paths TLS-protected resources insecure origins. rel - anchors containing href attribute, attribute specifies relationship target object link object. value space-separated list link types. values semantics registered authority might meaning document author. default relationship, given, void. Use attribute thehref attribute present. shape - shape associated hot spot. specifications HTML defines values rect , defines rectangular region;circle , defines circular region;poly , defines polygon; anddefault , indicates entire region beyond defined shapes. target - keyword author-defined name browsing context display linked resource. following keywords special meanings: _self (default): Show resource current browsing context._blank : Show resource new, unnamed browsing context._parent : Show resource parent browsing context current one, current page inside frame. parent, acts as_self ._top : Show resource topmost browsing context (the browsing context ancestor current one parent). parent, acts as_self . Use attribute href attribute present.Note: Setting target=\"_blank\" on<area> elements implicitly provides samerel behavior settingrel=\"noopener\" setwindow.opener . See browser compatibility support status. Examples <map name=\"primary\"> <area shape=\"circle\" coords=\"75,75,75\" href=\"left.html\" alt=\"Click go Left\" /> <area shape=\"circle\" coords=\"275,75,75\" href=\"right.html\" alt=\"Click go Right\" /> </map> <img usemap=\"#primary\" src=\"https://dummyimage.com/350x150\" alt=\"350 x 150 pic\" /> Result Technical summary | Content categories | Flow content, phrasing content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | element accepts phrasing content. <area> element must ancestor <map> , need direct parent. | | Implicit ARIA role | link href attribute present, otherwise generic | | Permitted ARIA roles | role permitted | | DOM interface | HTMLAreaElement | Specifications | Specification | |---| | HTML Standard # the-area-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article", "title": "<article>: The Article Contents element - HTML: HyperText Markup Language | MDN", "text": "<article>: Article Contents element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <article> HTML element represents self-contained composition document, page, application, site, intended independently distributable reusable (e.g., syndication). Examples include: forum post, magazine newspaper article, blog entry, product card, user-submitted comment, interactive widget gadget, independent item content. Try given document multiple articles it; example, blog shows text article one another reader scrolls, post would contained <article> element, possibly one <section> within. Attributes element includes global attributes. Usage notes - <article> identified, typically including heading (<h1> -<h6> element) child the<article> element. - <article> element nested, inner element represents article related outer element. example, comments blog post be<article> elements nested the<article> representing blog post. - Author information <article> element provided the<address> element, apply nested<article> elements. - publication date time <article> element described using thedatetime attribute a<time> element. Examples <article class=\"film_review\"> <h2>Jurassic Park</h2> <section class=\"main_review\"> <h3>Review</h3> <p>Dinos great!</p> </section> <section class=\"user_reviews\"> <h3>User reviews</h3> <article class=\"user_review\"> <h4>Too scary!</h4> <p>Way scary me.</p> <footer> <p> Posted <time datetime=\"2015-05-16 19:00\">May 16</time> Lisa. </p> </footer> </article> <article class=\"user_review\"> <h4>Love dinos!</h4> <p>I agree, dinos favorite.</p> <footer> <p> Posted <time datetime=\"2015-05-17 19:00\">May 17</time> Tom. </p> </footer> </article> </section> <footer> <p> Posted <time datetime=\"2015-05-15 19:00\">May 15</time> Staff. </p> </footer> </article> Result Technical summary | Content categories | Flow content, sectioning content, palpable content | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. Note <article> element must descendant <address> element. | | Implicit ARIA role | article | | Permitted ARIA roles | application , document , feed , main , none , presentation , region | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-article-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside", "title": "<aside>: The Aside element - HTML: HyperText Markup Language | MDN", "text": "<aside>: Aside element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <aside> HTML element represents portion document whose content indirectly related document's main content. Asides frequently presented sidebars call-out boxes. Try Attributes element includes global attributes. Usage notes - use <aside> element tag parenthesized text, kind text considered part main flow. Examples Using <aside> example uses <aside> mark paragraph article. paragraph indirectly related main article content: html <article> <p> Disney movie <cite>The Little Mermaid</cite> first released theatres 1989. </p> <aside> <p>The movie earned $87 million initial release.</p> </aside> <p>More info movie\u2026</p> </article> Result Technical summary | Content categories | Flow content, sectioning content, palpable content. | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. Note <aside> element must descendant <address> element. | | Implicit ARIA role | complementary | | Permitted ARIA roles | feed , none , note , presentation , region , search | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-aside-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio", "title": "<audio>: The Embed Audio element - HTML: HyperText Markup Language | MDN", "text": "<audio>: Embed Audio element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <audio> HTML element used embed sound content documents. may contain one audio sources, represented using src attribute <source> element: browser choose suitable one. also destination streamed media, using MediaStream . Try example shows basic usage <audio> element. similar manner <img> element, include path media want embed inside src attribute; include attributes specify information whether want autoplay loop, whether want show browser's default audio controls, etc. content inside opening closing <audio></audio> tags shown fallback browsers support element. Attributes element's attributes include global attributes. autoplay - Boolean attribute: specified, audio automatically begin playback soon so, without waiting entire audio file finish downloading. Note: Sites automatically play audio (or videos audio track) unpleasant experience users, avoided possible. must offer autoplay functionality, make opt-in (requiring user specifically enable it). However, useful creating media elements whose source set later time, user control. See autoplay guide additional information properly use autoplay. controls - attribute present, browser offer controls allow user control audio playback, including volume, seeking, pause/resume playback. controlslist - controlslist attribute, specified, helps browser select controls show theaudio element whenever browser shows set controls (that is, thecontrols attribute specified).The allowed values nodownload ,nofullscreen andnoremoteplayback . crossorigin - enumerated attribute indicates whether use CORS fetch related audio file. CORS-enabled resources reused <canvas> element without tainted. allowed values are:anonymous - Sends cross-origin request without credential. words, sends Origin: HTTP header without cookie, X.509 certificate, performing HTTP Basic authentication. server give credentials origin site (by setting theAccess-Control-Allow-Origin: HTTP header), resource tainted, usage restricted. use-credentials - Sends cross-origin request credential. words, sends Origin: HTTP header cookie, certificate, performing HTTP Basic authentication. server give credentials origin site (throughAccess-Control-Allow-Credentials: HTTP header), resource tainted usage restricted. present, resource fetched without CORS request (i.e. without sending Origin: HTTP header), preventing non-tainted use in<canvas> elements. invalid, handled enumerated keyword anonymous used. See CORS settings attributes additional information. disableremoteplayback - Boolean attribute used disable capability remote playback devices attached using wired (HDMI, DVI, etc.) wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc.). See proposed specification information. Safari, use x-webkit-airplay=\"deny\" fallback. loop - Boolean attribute: specified, audio player automatically seek back start upon reaching end audio. muted - Boolean attribute indicates whether audio initially silenced. default value false . preload - enumerated attribute intended provide hint browser author thinks lead best user experience. may one following values: none : Indicates audio preloaded.metadata : Indicates audio metadata (e.g. length) fetched.auto : Indicates whole audio file downloaded, even user expected use it.- empty string: synonym auto value. default value different browser. spec advises set metadata .Note: - autoplay attribute precedence overpreload . Ifautoplay specified, browser would obviously need start downloading audio playback. - browser forced specification follow value attribute; mere hint. src - URL audio embed. subject HTTP access controls. optional; may instead use <source> element within audio block specify audio embed. Events | Event name | Fired | |---|---| audioprocess | input buffer ScriptProcessorNode ready processed. | canplay | browser play media, estimates enough data loaded play media end without stop buffering content. | canplaythrough | browser estimates play media end without stopping content buffering. | complete | rendering OfflineAudioContext terminated. | durationchange | duration attribute updated. | emptied | media become empty; example, event sent media already loaded (or partially loaded), HTMLMediaElement.load method called reload it. | ended | Playback stopped end media reached. | loadeddata | first frame media finished loading. | loadedmetadata | metadata loaded. | loadstart | Fired browser started load resource. | pause | Playback paused. | play | Playback begun. | playing | Playback ready start paused delayed due lack data. | ratechange | playback rate changed. | seeked | seek operation completed. | seeking | seek operation began. | stalled | user agent trying fetch media data, data unexpectedly forthcoming. | suspend | Media data loading suspended. | timeupdate | time indicated currentTime attribute updated. | volumechange | volume changed. | waiting | Playback stopped temporary lack data | Usage notes Browsers support file types audio codecs; provide multiple sources inside nested <source> elements, browser use first one understands: <audio controls> <source src=\"myAudio.mp3\" type=\"audio/mpeg\" /> <source src=\"myAudio.ogg\" type=\"audio/ogg\" /> <p> Download <a href=\"myAudio.mp3\" download=\"myAudio.mp3\">MP3</a> <a href=\"myAudio.ogg\" download=\"myAudio.ogg\">OGG</a> audio. </p> </audio> audio source set valid URL, including HTTP(S) URLs Data URLs. using HTTP(S) URLs, aware browser's caching behavior affect often file requested server. Data URLs embed audio data directly HTML, useful small audio files recommended larger files increases HTML file size. also use Web Audio API directly generate manipulate audio streams JavaScript code rather streaming pre-existing audio files. set srcObject JavaScript MediaStream object. commonly used live audio streams real-time audio processing. const audioElement = document.querySelector(\"audio\"); navigator.mediaDevices .getUserMedia({ audio: true }) .then((stream) => { audioElement.srcObject = stream; }) .catch((error) => { console.error(\"Error accessing microphone\", error); }); Note MediaStream sources limitations: seekable support limited set codecs. offer substantive thorough guide media file types audio codecs used within them. Also available guide codecs supported video. usage notes: - specify controls attribute, audio player include browser's default controls. can, however, create custom controls using JavaScript theHTMLMediaElement API. - allow precise control audio content, HTMLMediaElement fire many different events. also provides way monitor audio's fetching process watch errors detect enough available begin play manipulate it. <audio> elements can't subtitles captions associated way that<video> elements can. See WebVTT Audio Ian Devlin useful information workarounds.- test fallback content browsers support element, replace <audio> non-existing element like<notanaudio> . good general source information using HTML <audio> HTML video audio beginner's tutorial. Styling CSS <audio> element intrinsic visual output unless controls attribute specified, case browser's default controls shown. default controls display value inline default, often good idea set value block improve control positioning layout, unless want sit within text block similar. style default controls properties affect block single unit, example give border border-radius , padding , margin , etc. can't however style individual components inside audio player (e.g. change button size icons, change font, etc.), controls different across different browsers. get consistent look feel across browsers, need create custom controls; marked styled whatever way want, JavaScript used along HTMLMediaElement API wire functionality. Video player styling basics provides useful styling techniques \u2014 written context <video> , much equally applicable <audio> . Detecting addition removal tracks detect tracks added removed <audio> element using addtrack removetrack events. However, events sent directly <audio> element itself. Instead, they're sent track list object within <audio> element's HTMLMediaElement corresponds type track added element: HTMLMediaElement.audioTracks - AudioTrackList containing media element's audio tracks. add listener foraddtrack object alerted new audio tracks added element. HTMLMediaElement.videoTracks - Add addtrack listener thisVideoTrackList object informed video tracks added element. HTMLMediaElement.textTracks - Add addtrack event listener thisTextTrackList notified new text tracks added element. Note: Even though <audio> element, still video text track lists, fact used present video, although user interface implications odd. example, detect audio tracks added removed <audio> element, use code like this: const elem = document.querySelector(\"audio\"); elem.audioTrackList.onaddtrack = (event) => { trackEditor.addTrack(event.track); }; elem.audioTrackList.onremovetrack = (event) => { trackEditor.removeTrack(event.track); }; code watches audio tracks added removed element, calls hypothetical function track editor register remove track editor's list available tracks. also use addEventListener() listen addtrack removetrack events. Accessibility Audio spoken dialog provide captions transcripts accurately describe content. Captions, specified using WebVTT, allow people hearing impaired understand audio recording's content recording played, transcripts allow people need additional time able review recording's content pace format comfortable them. automatic captioning services used, important review generated content ensure accurately represents source audio. <audio> element directly support WebVTT. find library framework provides capability you, write code display captions yourself. One option play audio using <video> element, support WebVTT. addition spoken dialog, subtitles transcripts also identify music sound effects communicate important information. includes emotion tone. example, WebVTT below, note use square brackets provide tone emotional insight viewer; help establish mood otherwise provided using music, nonverbal sounds crucial sound effects, forth. 1 00:00:00 --> 00:00:45 [Energetic techno music] 2 00:00:46 --> 00:00:51 Welcome Time Keeper's podcast! episode we're discussing Swisswatch wrist switchwatch? 16 00:00:52 --> 00:01:02 [Laughing] Sorry! mean, wristwatch Swiss wristwatch? Also good practice provide content (such direct download link) fallback viewers use browser <audio> element supported: <audio controls> <source src=\"myAudio.mp3\" type=\"audio/mpeg\" /> <source src=\"myAudio.ogg\" type=\"audio/ogg\" /> <p> Download <a href=\"myAudio.mp3\">MP3</a> <a href=\"myAudio.ogg\" download=\"myAudio.ogg\">OGG</a> audio. </p> </audio> Examples Basic usage following example shows basic usage <audio> element play OGG file. autoplay due autoplay attribute\u2014if page permission so\u2014and also includes fallback content. <!-- Basic audio playback --> <audio src=\"AudioTest.ogg\" autoplay> <a href=\"AudioTest.ogg\" download=\"AudioTest.ogg\">Download OGG audio</a>. </audio> details autoplay works, get permission use autoplay, appropriate use autoplay, see autoplay guide. <audio> element <source> element example specifies audio track embed using src attribute nested <source> element rather directly <audio> element. always useful include file's MIME type inside type attribute, browser able instantly tell play file, waste time not. <audio controls> <source src=\"foo.wav\" type=\"audio/wav\" /> <a href=\"foo.wav\" download=\"foo.wav\">Download WAV audio</a>. </audio> <audio> multiple <source> elements example includes multiple <source> elements. browser tries load first source element (Opus) able play it; falls back second (Vorbis) finally back MP3: <audio controls> <source src=\"foo.opus\" type=\"audio/ogg; codecs=opus\" /> <source src=\"foo.ogg\" type=\"audio/ogg; codecs=vorbis\" /> <source src=\"foo.mp3\" type=\"audio/mpeg\" /> </audio> Technical summary | Content categories | Flow content, phrasing content, embedded content. controls attribute: interactive content palpable content. | |---|---| | Permitted content | element src attribute: zero <track> elements followed transparent content contains <audio> <video> media elements.Else: zero <source> elements followed zero <track> elements followed transparent content contains <audio> <video> media elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | application | | DOM interface | HTMLAudioElement | Specifications | Specification | |---| | HTML Standard # the-audio-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b", "title": "<b>: The Bring Attention To element - HTML: HyperText Markup Language | MDN", "text": "<b>: Bring Attention element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <b> HTML element used draw reader's attention element's contents, otherwise granted special importance. formerly known Boldface element, browsers still draw text boldface. However, use <b> styling text granting importance. wish create boldface text, use CSS font-weight property. wish indicate element special importance, use <strong> element. Try Attributes element includes global attributes. Usage notes - Use <b> cases like keywords summary, product names review, spans text whose typical presentation would boldfaced (but including special importance). - confuse <b> element the<strong> ,<em> , or<mark> elements. The<strong> element represents text certain importance,<em> puts emphasis text the<mark> element represents text certain relevance. The<b> element convey special semantic information; use others fit. - Similarly, mark titles headings using <b> element. purpose, use h1 h6 tags. Further, stylesheets change default style elements, result necessarily displayed bold. - good practice use class attribute the<b> element order convey additional semantic information needed (for example<b class=\"lead\"> first sentence paragraph). makes easier manage multiple use cases of<b> stylistic needs change, without need change uses HTML. - Historically, <b> element meant make text boldface. Styling information deprecated since HTML4, meaning the<b> element changed. - semantic purpose using <b> element, use CSSfont-weight property value\"bold\" instead order make text bold. Examples html <p> article describes several <b class=\"keywords\">text-level</b> elements. explains usage <b class=\"keywords\">HTML</b> document. </p> Keywords displayed default style <b>element, likely bold.</b> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-b-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base", "title": "<base>: The Document Base URL element - HTML: HyperText Markup Language | MDN", "text": "<base>: Document Base URL element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <base> HTML element specifies base URL use relative URLs document. one <base> element document. document's used base URL accessed scripts Node.baseURI . document <base> elements, baseURI defaults location.href . Attributes element's attributes include global attributes. Warning: <base> element must href attribute, target attribute, both. least one attributes specified, <base> element must come elements attribute values URLs, <link> 's href attribute. href - base URL used throughout document relative URLs. Absolute relative URLs allowed. data: andjavascript: URLs allowed. target - keyword author-defined name default browsing context show results navigation <a> ,<area> , or<form> elements without explicittarget attributes. following keywords special meanings:_self (default): Show result current browsing context._blank : Show result new, unnamed browsing context._parent : Show result parent browsing context current one, current page inside frame. parent, acts as_self ._top : Show result topmost browsing context (the browsing context ancestor current one parent). parent, acts as_self . Usage notes Multiple <base> elements multiple <base> elements used, first href first target obeyed \u2014 others ignored. In-page anchors Links pointing fragment document \u2014 e.g. <a href=\"#some-id\"> \u2014 resolved <base> , triggering HTTP request base URL fragment attached. example, given <base href=\"https://example.com/\"> link: <a href=\"#anchor\">To anchor</a> . link points https://example.com/#anchor . target may contain ASCII newline, tab, < target attribute contains ASCII newline, tab, < character, value reset _blank . prevent dangling markup injection attacks, script-less attack unclosed target attribute injected page text follows captured browser reaches character closes attribute. Open Graph Open Graph tags acknowledge <base> , always full absolute URLs. example: <meta property=\"og:image\" content=\"https://example.com/thumbnail.jpg\" /> Examples <base href=\"https://www.example.com/\" /> <base target=\"_blank\" /> <base target=\"_top\" href=\"https://example.com/\" /> Technical summary | Content categories | Metadata content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | <head> contain another <base> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLBaseElement | Specifications | Specification | |---| | HTML Standard # the-base-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi", "title": "<bdi>: The Bidirectional Isolate element - HTML: HyperText Markup Language | MDN", "text": "<bdi>: Bidirectional Isolate element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since January 2020. <bdi> HTML element tells browser's bidirectional algorithm treat text contains isolation surrounding text. particularly useful website dynamically inserts text know directionality text inserted. Try Bidirectional text text may contain sequences characters arranged left-to-right (LTR) sequences characters arranged right-to-left (RTL), Arabic quotation embedded English string. Browsers implement Unicode Bidirectional Algorithm handle this. algorithm, characters given implicit directionality: example, Latin characters treated LTR Arabic characters treated RTL. characters (such spaces punctuation) treated neutral assigned directionality based surrounding characters. Usually, bidirectional algorithm right thing without author provide special markup but, occasionally, algorithm needs help. That's <bdi> comes in. <bdi> element used wrap span text instructs bidirectional algorithm treat text isolation surroundings. works two ways: - directionality text embedded <bdi> influence directionality surrounding text. - directionality text embedded <bdi> influenced directionality surrounding text. example, consider text like: EMBEDDED-TEXT - 1st place EMBEDDED-TEXT LTR, works fine. EMBEDDED-TEXT RTL, - 1 treated RTL text (because consists neutral weak characters). result garbled: 1 - EMBEDDED-TEXTst place know directionality EMBEDDED-TEXT advance, fix problem wrapping EMBEDDED-TEXT <span> dir attribute set known directionality. know directionality - example, EMBEDDED-TEXT read database entered user - use <bdi> prevent directionality EMBEDDED-TEXT affecting surroundings. Though visual effect achieved using CSS rule unicode-bidi: isolate <span> another text-formatting element, HTML authors use approach semantic browsers allowed ignore CSS styling. Embedding characters <span dir=\"auto\"> effect using <bdi> , semantics less clear. Attributes Like HTML elements, element supports global attributes, except dir attribute behaves differently normal: defaults auto , meaning value never inherited parent element. means unless specify value either rtl ltr dir , user agent determine correct directionality use based contents <bdi> . Examples bdi LTR example lists winners competition using <span> elements only. names contain LTR text results look fine: <ul> <li><span class=\"name\">Henrietta Boffin</span> - 1st place</li> <li><span class=\"name\">Jerry Cruncher</span> - 2nd place</li> </ul> bdi RTL text example lists winners competition using <span> elements only, one winners name consisting RTL text. case - 1 , consists characters neutral weak directionality, adopt directionality RTL text, result garbled: <ul> <li><span class=\"name\">\u0627\u064e\u0644\u0623\u064e\u0639\u0652\u0634\u064e\u0649</span> - 1st place</li> <li><span class=\"name\">Jerry Cruncher</span> - 2nd place</li> </ul> Using bdi LTR RTL text example lists winners competition using <bdi> elements. elements instruct browser treat name isolation embedding context, example output properly ordered: <ul> <li><bdi class=\"name\">\u0627\u064e\u0644\u0623\u064e\u0639\u0652\u0634\u064e\u0649</bdi> - 1st place</li> <li><bdi class=\"name\">Jerry Cruncher</bdi> - 2nd place</li> </ul> Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-bdi-element | Browser compatibility BCD tables load browser See also - Inline markup bidirectional text HTML - Unicode Bidirectional Algorithm basics - Localization - Related HTML element: <bdo> - Related CSS properties: direction ,unicode-bidi"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo", "title": "<bdo>: The Bidirectional Text Override element - HTML: HyperText Markup Language | MDN", "text": "<bdo>: Bidirectional Text Override element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <bdo> HTML element overrides current directionality text, text within rendered different direction. Try text's characters drawn starting point given direction; individual characters' orientation affected (so characters get drawn backward, example). Attributes element's attributes include global attributes. dir - direction text rendered element's contents. Possible values are: ltr : Indicates text go left-to-right direction.rtl : Indicates text go right-to-left direction. Examples <!-- Switch text direction --> <p>This text go left right.</p> <p><bdo dir=\"rtl\">This text go right left.</bdo></p> Result Notes HTML 4 specification specify events element; added XHTML. likely oversight. Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements HTMLSpanElement interface element. | Specifications | Specification | |---| | HTML Standard # the-bdo-element | Browser compatibility BCD tables load browser See also - Related HTML element: <bdi>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big", "title": "<big>: The Bigger Text element - HTML: HyperText Markup Language | MDN", "text": "<big>: Bigger Text element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <big> HTML deprecated element renders enclosed text font size one level larger surrounding text (medium becomes large , example). size capped browser's maximum permitted font size. Warning: element removed specification used anymore. Use CSS font-size property adjust font size. Attributes element attributes global attributes, common elements. Examples see examples showing use <big> followed example showing accomplish results using modern CSS syntax instead. Using big example uses obsolete <big> element increase size text. HTML <p> first sentence. <big>This whole sentence bigger letters.</big> </p> Result Using CSS font-size example uses CSS font-size property increase font size one level. CSS .bigger { font-size: larger; } HTML <p> first sentence. <span class=\"bigger\">This whole sentence bigger letters.</span> </p> Result DOM interface element implements HTMLElement interface. Specifications | Specification | |---| | HTML Standard # big | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote", "title": "<blockquote>: The Block Quotation element - HTML: HyperText Markup Language | MDN", "text": "<blockquote>: Block Quotation element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <blockquote> HTML element indicates enclosed text extended quotation. Usually, rendered visually indentation (see Notes change it). URL source quotation may given using cite attribute, text representation source given using <cite> element. Try Attributes element's attributes include global attributes. cite - URL designates source document message information quoted. attribute intended point information explaining context reference quote. Usage notes According specification, attribution quotation, any, must placed outside <blockquote> element. change indentation applied quoted text, use CSS margin-left and/or margin-right properties, margin shorthand property. include shorter quotes inline rather separate block, use <q> (Quotation) element. Examples example demonstrates use <blockquote> element quote passage RFC 1149, Standard Transmission IP Datagrams Avian Carriers. <blockquote cite=\"https://datatracker.ietf.org/doc/html/rfc1149\"> <p> Avian carriers provide high delay, low throughput, low altitude service. connection topology limited single point-to-point path carrier, used standard carriers, many carriers used without significant interference other, outside early spring. 3D ether space available carriers, contrast 1D ether used IEEE802.3. carriers intrinsic collision avoidance system, increases availability. </p> </blockquote> Result Technical summary | Content categories | Flow content, sectioning root, palpable content. | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | blockquote | | Permitted ARIA roles | | | DOM interface | HTMLQuoteElement | Specifications | Specification | |---| | HTML Standard # the-blockquote-element | Browser compatibility BCD tables load browser See also - <q> element inline quotations. - <cite> element source citations. - blockquote element via heydonworks.com (2024)"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body", "title": "<body>: The Document Body element - HTML: HyperText Markup Language | MDN", "text": "<body>: Document Body element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <body> HTML element represents content HTML document. one <body> element document. Attributes element includes global attributes, event attributes, deprecated attributes: Event attributes Note: event attribute names linked equivalent Window interface event. listen events using addEventListener() instead adding oneventname attribute <body> element. onafterprint - Function call user printed document. onbeforeprint - Function call user requests printing document. onbeforeunload - Function call document unloaded. onblur - Function call document loses focus. onerror - Function call document fails load properly. onfocus - Function call document receives focus. onhashchange - Function call fragment identifier part (starting hash ( '#' ) character) document's current address changed. onlanguagechange - Function call preferred languages changed. onload - Function call document finished loading. onmessage - Function call document received message. onmessageerror - Function call document received message cannot deserialized. onoffline - Function call network communication failed. ononline - Function call network communication restored. onpageswap - Function call navigate across documents, previous document unload. onpagehide - Function call browser hides current page process presenting different page session's history. onpagereveal - Function call document first rendered, either loading fresh document network activating document. onpageshow - Function call browser displays window's document due navigation. onpopstate - Function call user navigated session history. onresize - Function call document resized. onrejectionhandled - Function call JavaScript Promise handled late. onstorage - Function call storage area changed. onunhandledrejection - Function call JavaScript Promise rejection handler rejected. onunload - Function call document going away. Deprecated attributes Warning: use deprecated attributes; opt CSS alternatives listed deprecated attribute instead. alink Deprecated- Color text hyperlinks selected. Use CSS color property conjunction the:active and:focus pseudo-classes instead. background Deprecated- URI image use background. Use CSS background-image property instead. bgcolor Deprecated- Background color document. Use CSS background-color property instead. bottommargin Deprecated- margin bottom body. Use CSS margin-bottom property (or logicalmargin-block-end property) instead. leftmargin Deprecated- margin left body. Use CSS margin-left property (or logicalmargin-inline-start property) instead. link Deprecated- Color text unvisited hypertext links. Use CSS color property conjunction the:link pseudo-class instead. rightmargin Deprecated- margin right body. Use CSS margin-right property logicalmargin-inline-end property) instead. text Deprecated- Foreground color text. Use CSS color property instead. topmargin Deprecated- margin top body. Use CSS margin-top property (or logicalmargin-block-start property) instead. vlink Deprecated- Color text visited hypertext links. Use CSS color property conjunction the:visited pseudo-class instead. Examples <html lang=\"en\"> <head> <title>Document title</title> </head> <body> <p> <code><body></code> HTML element represents content HTML document. one <code><body></code> element document. </p> </body> </html> Result Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content. | | Tag omission | start tag may omitted first thing inside space character, comment, <script> element <style> element. end tag may omitted <body> element contents start tag, immediately followed comment. | | Permitted parents | must second element <html> element. | | Implicit ARIA role | generic | | Permitted ARIA roles | role permitted | | DOM interface | HTMLBodyElement | Specifications | Specification | |---| | HTML Standard # the-body-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br", "title": "<br>: The Line Break element - HTML: HyperText Markup Language | MDN", "text": "<br>: Line Break element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <br> HTML element produces line break text (carriage-return). useful writing poem address, division lines significant. Try see example, <br> element included point want text break. text <br> begins start next line text block. Attributes element's attributes include global attributes. Deprecated attributes clear Deprecated- Indicates begin next line break. Styling CSS <br> element single, well-defined purpose \u2014 create line break block text. such, dimensions visual output own, little style it. set margin <br> elements increase spacing lines text block, bad practice \u2014 use line-height property designed purpose. Accessibility Creating separate paragraphs text using <br> bad practice, problematic people navigate aid screen reading technology. Screen readers may announce presence element, content contained within <br> s. confusing frustrating experience person using screen reader. Use <p> elements, use CSS properties like margin control spacing. Examples Basic br following example use <br> elements create line breaks different lines postal address: Mozilla<br /> 331 E. Evelyn Avenue<br /> Mountain View, CA<br /> 94041<br /> USA<br /> Result Technical summary | Content categories | Flow content, phrasing content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. XHTML documents, write element <br /> . | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | none , presentation | | DOM interface | HTMLBRElement | Specifications | Specification | |---| | HTML Standard # the-br-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button", "title": "<button>: The Button element - HTML: HyperText Markup Language | MDN", "text": "<button>: Button element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <button> HTML element interactive element activated user mouse, keyboard, finger, voice command, assistive technology. activated, performs action, submitting form opening dialog. default, HTML buttons presented style resembling platform user agent runs on, change buttons' appearance CSS. Try Attributes element's attributes include global attributes. autofocus - Boolean attribute specifies button input focus page loads. one element document attribute. command Experimental- Specifies action performed element controlled control <button> , specified via thecommandfor attribute. possible values are:\"show-modal\" - button show <dialog> modal. dialog already modal, action taken. \"close\" - button close <dialog> element. dialog already closed, action taken. \"show-popover\" - button show hidden popover. try show already showing popover, action taken. See Popover API details. \"hide-popover\" - button hide showing popover. try hide already hidden popover, action taken. See Popover API details. \"toggle-popover\" - button toggle popover showing hidden. popover hidden, shown; popover showing, hidden. See Popover API details. - Custom values - attribute represent custom values prefixed two hyphen characters ( -- ). Buttons custom value dispatch theCommandEvent controlled element. commandfor Experimental- Turns <button> element button, controlling given interactive element; takes ID element control value. disabled - Boolean attribute prevents user interacting button: cannot pressed focused. form - <form> element associate button (its form owner). value attribute must theid a<form> document. (If attribute set, the<button> associated ancestor<form> element, any.)This attribute lets associate <button> elements to<form> anywhere document, inside a<form> . also override ancestor<form> element. formaction - URL processes information submitted button. Overrides action attribute button's form owner. nothing form owner. formenctype - button submit button (it's inside/associated <form> havetype=\"button\" ), specifies encode form data submitted. Possible values:application/x-www-form-urlencoded : default attribute used.multipart/form-data : Used submit<input> elements theirtype attributes set tofile .text/plain : Specified debugging aid; used real form submission. attribute specified, overrides enctype attribute button's form owner. formmethod - button submit button (it's inside/associated <form> havetype=\"button\" ), attribute specifies HTTP method used submit form. Possible values:post : data form included body HTTP request sent server. Use form contains information public, like login credentials.get : form data appended form'saction URL, a? separator, resulting URL sent server. Use method form side effects, like search forms.dialog : method used indicate button closes dialog associated, transmit form data all. specified, attribute overrides method attribute button's form owner. formnovalidate - button submit button, Boolean attribute specifies form validated submitted. attribute specified, overrides novalidate attribute button's form owner.This attribute also available <input type=\"image\"> and<input type=\"submit\"> elements. formtarget - button submit button, attribute author-defined name standardized, underscore-prefixed keyword indicating display response submitting form. name of, keyword for, browsing context (a tab, window, or<iframe> ). attribute specified, overrides thetarget attribute button's form owner. following keywords special meanings:_self : Load response browsing context current one. default attribute specified._blank : Load response new unnamed browsing context \u2014 usually new tab window, depending user's browser settings._parent : Load response parent browsing context current one. parent, option behaves way as_self ._top : Load response top-level browsing context (that is, browsing context ancestor current one, parent). parent, option behaves way as_self . name - name button, submitted pair button's value part form data, button used submit form. popovertarget - Turns <button> element popover control button; takes ID popover element control value. See Popover API landing page details. popovertargetaction - Specifies action performed popover element controlled control <button> . Possible values are:\"hide\" - button hide shown popover. try hide already hidden popover, action taken. \"show\" - button show hidden popover. try show already showing popover, action taken. \"toggle\" - button toggle popover showing hidden. popover hidden, shown; popover showing, hidden. popovertargetaction omitted,\"toggle\" default action performed control button. type - default behavior button. Possible values are: submit : button submits form data server. default attribute specified buttons associated a<form> , attribute empty invalid value.reset : button resets controls initial values, like <input type=\"reset\">. (This behavior tends annoy users.)button : button default behavior, nothing pressed default. client-side scripts listen element's events, triggered events occur. value - Defines value associated button's name submitted form data. value passed server params form submitted using button. Notes submit button attribute formaction set, without associated form nothing. set form owner, either wrapping <form> set attribute form id form. <button> elements much easier style <input> elements. add inner HTML content (think <i> , <br> , even <img> ), use ::after ::before pseudo-elements complex rendering. buttons submitting form data server, sure set type attribute button . Otherwise, try submit form data load (nonexistent) response, possibly destroying current state document. <button type=\"button\"> default behavior, event handlers scripted trigger behaviors. activated button perform programmable actions using JavaScript, removing item list. default, user agents style buttons display: flow-root , establishes new block formatting context centers button's children horizontally vertically long overflow. button defined flex grid container, children behave flex grid items. button set display: inline styled value set display: inline-block . Accessibility Icon buttons Buttons display icon accessible name. Accessible names provide information assistive technology, screen readers, access parse document generate accessibility tree. Assistive technology uses accessibility tree navigate manipulate page content. give icon button accessible name, put text <button> element concisely describes button's functionality. Examples <button name=\"favorite\"> <svg fill=\"#000000\" viewBox=\"0 0 42 42\"> <path d=\"M21,1c1.081,0,5.141,12.315,6.201,13.126s13.461,1.053,13.791,2.137 c0.34,1.087-9.561,8.938-9.961,10.252c-0.409,1.307, 3.202,13.769,2.331,14.442c-0.879,0.673-11.05-6.79-12.361-6.79 c-1.311,0-11.481,7.463-12.36,6.79c-0.871-0.674,2.739-13.136, 2.329-14.442c-0.399-1.313-10.3-9.165-9.96-10.252 c0.33-1.084,12.731-1.326,13.791-2.137S19.91,1,21,1z\"></path> </svg> Add favorites </button> Result want visually hide button's text, accessible way use combination CSS properties remove visually screen, keep parsable assistive technology. However, worth noting leaving button text visible help people may familiar icon's meaning understand button's purpose. especially important people technologically sophisticated may different cultural interpretations icon button uses. Size Proximity Size Interactive elements buttons area large enough easy activate. helps variety people, including people motor control issues people using non-precise forms input stylus fingers. minimum interactive size 44\u00d744 CSS pixels recommended. - Understanding Success Criterion 2.5.5: Target Size | W3C Understanding WCAG 2.1 - Target Size 2.5.5 | Adrian Roselli - Quick test: Large touch targets - A11Y Project Proximity Large amounts interactive content \u2014 including buttons \u2014 placed close visual proximity space separating them. spacing beneficial people experiencing motor control issues, may accidentally activate wrong interactive content. Spacing may created using CSS properties margin . ARIA state information describe state button correct ARIA attribute use aria-pressed aria-checked aria-selected . find read information ARIA button role. Button styles best override default focus ring elements focus. button styles overridden, important ensure focus state enough contrast people experiencing low vision conditions perceive people cognitive differences understand it. :focus-visible pseudo-class used apply styles element :focus user agent's heuristics determine focus highlighted, <button> receives keyboard focus. See :focus vs :focus-visible information. Color contrast ratio determined comparing luminosity button text background color values background button placed on. meet current Web Content Accessibility Guidelines (WCAG), ratio 4.5:1 required text content 3:1 large text. (Large text defined 18.66px bold larger, 24px larger.) Clicking focus Whether clicking <button> <input> button types causes (by default) become focused varies browser OS. browsers give focus button clicked, Safari not, design. Examples <button name=\"button\">Press me</button> Technical summary | Content categories | Flow content, phrasing content, Interactive content, listed, labelable, submittable form-associated element, palpable content. | |---|---| | Permitted content | Phrasing content must Interactive content | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | button | | Permitted ARIA roles | checkbox , combobox , link , menuitem , menuitemcheckbox , menuitemradio , option , radio , switch , tab | | DOM interface | HTMLButtonElement | Specifications | Specification | |---| | HTML Standard # the-button-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas", "title": "<canvas>: The Graphics Canvas element - HTML: HyperText Markup Language | MDN", "text": "<canvas>: Graphics Canvas element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. Use HTML <canvas> element either canvas scripting API WebGL API draw graphics animations. Attributes element's attributes include global attributes. height - height coordinate space CSS pixels. Defaults 150. moz-opaque Non-standard Deprecated- Lets canvas know whether translucency factor. canvas knows there's translucency, painting performance optimized. supported Mozilla-based browsers; use standardized canvas.getContext('2d', { alpha: false }) instead. width - width coordinate space CSS pixels. Defaults 300. Usage notes Alternative content provide alternate content inside <canvas> block. content rendered older browsers support canvas browsers JavaScript disabled. Closing </canvas> tag Unlike <img> element, <canvas> element requires closing tag (</canvas> ). Sizing canvas using CSS versus HTML displayed size canvas changed using CSS, image scaled rendering fit styled size, make final graphics rendering end distorted. better specify canvas dimensions setting width height attributes directly <canvas> elements, either directly HTML using JavaScript. Maximum canvas size exact maximum size <canvas> element depends browser environment. cases maximum dimensions exceed 10,000 x 10,000 pixels, notably iOS devices limit canvas size 4,096 x 4,096 pixels. See canvas size limits different browsers devices. Note: Exceeding maximum dimensions area renders canvas unusable \u2014 drawing commands work. Using offscreen canvas canvas rendered using OffscreenCanvas API document canvas decoupled. benefit worker thread handle canvas rendering main thread web application blocked canvas operations. parallelizing work, UI elements web application remain responsive even running complex graphics offscreen canvas. information, see OffscreenCanvas API documentation. Accessibility Alternative content <canvas> element bitmap provide information drawn objects. Canvas content exposed accessibility tools semantic HTML is. general, avoid using canvas accessible website app. following guides help make accessible. Examples HTML code snippet adds canvas element HTML document. fallback text provided browser unable read render canvas. <canvas width=\"120\" height=\"120\"> alternative text describing canvas displays. </canvas> JavaScript JavaScript code, call HTMLCanvasElement.getContext() get drawing context start drawing onto canvas: const canvas = document.querySelector(\"canvas\"); const ctx = canvas.getContext(\"2d\"); ctx.fillStyle = \"green\"; // Add rectangle (10, 10) size 100x100 pixels ctx.fillRect(10, 10, 100, 100); Result Technical summary | Content categories | Flow content, phrasing content, embedded content, palpable content. | |---|---| | Permitted content | Transparent interactive content descendants except <a> elements, <button> elements, <input> elements whose type attribute checkbox , radio , button . | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLCanvasElement | Specifications | Specification | |---| | HTML Standard # the-canvas-element | Browser compatibility BCD tables load browser See also - Canvas API - Canvas tutorial - OffscreenCanvas - Canvas cheat sheet (2009) - Canvas cheat sheet (pdf) (2015) - Safari HTML canvas guide via Apple (2013) CanvasRenderingContext2D 2D drawing context canvas element via Apple.com- WebGL API <img> - SVG - HTML video audio"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption", "title": "<caption>: The Table Caption element - HTML: HyperText Markup Language | MDN", "text": "<caption>: Table Caption element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <caption> HTML element specifies caption (or title) table, providing table accessible description. Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies side table caption displayed. possible enumerated values left ,top ,right , orbottom . Use thecaption-side andtext-align CSS properties instead, attribute deprecated. Usage notes - included, <caption> element must first child parent<table> element. - <table> nested within a<figure> figure's content, captioned via a<figcaption> the<figure> instead a<caption> nested within the<table> . - background-color applied table applied caption. Add abackground-color the<caption> element well want color behind both. Example See <table> complete table example introducing common standards best practices. Table caption example demonstrates basic table includes caption describing data presented. \"title\" helpful users quickly scanning page, especially beneficial visually impaired users, allowing determine table's relevance quickly without need screen reader read contents many cells find table about. HTML <caption> element used first child <table> , text content similar title describe table data. Three rows, first header row, two columns created using <tr> , <th> <td> elements <caption> . <table> <caption> User login email addresses </caption> <tr> <th>Login</th> <th>Email</th> </tr> <tr> <td>user1</td> <td>user1@example.com</td> </tr> <tr> <td>user2</td> <td>user2@example.com</td> </tr> </table> CSS basic CSS used align highlight <caption> . caption { caption-side: top; text-align: left; padding-bottom: 10px; font-weight: bold; } Result Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content. | | Tag omission | end tag omitted element immediately followed ASCII whitespace comment. | | Permitted parents | <table> element, first descendant. | | Implicit ARIA role | caption | | Permitted ARIA roles | role permitted | | DOM interface | HTMLTableCaptionElement | Specifications | Specification | |---| | HTML Standard # the-caption-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <col> ,<colgroup> ,<table> ,<tbody> ,<td> ,<tfoot> ,<th> ,<thead> ,<tr> : table-related elementscaption-side : CSS property position the<caption> relative parent<table> text-align : CSS property horizontally align text content the<caption>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center", "title": "<center>: The Centered Text element - HTML: HyperText Markup Language | MDN", "text": "<center>: Centered Text element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <center> HTML element block-level element displays block-level inline contents centered horizontally within containing element. container usually, required be, <body> . tag deprecated HTML 4 (and XHTML 1) favor CSS text-align property, applied <div> element individual <p> . centering blocks, use CSS properties like margin-left margin-right set auto (or set margin 0 auto ). DOM interface element implements HTMLElement interface. Example 1 <center> text centered. <p>So paragraph.</p> </center> Result Example 2 (CSS alternative) <div style=\"text-align:center\"> text centered. <p>So paragraph.</p> </div> Result Example 3 (CSS alternative) <p style=\"text-align:center\"> line centered.<br /> line. </p> Result Note: Applying text-align: center <div> <p> element centers contents elements leaving overall dimensions unchanged. Specifications | Specification | |---| | HTML Standard # center | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite", "title": "<cite>: The Citation element - HTML: HyperText Markup Language | MDN", "text": "<cite>: Citation element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <cite> HTML element used mark title cited creative work. reference may abbreviated form according context-appropriate conventions related citation metadata. Try Attributes element includes global attributes. Usage notes context <cite> element, creative work might cited could be, example, one following: - book - research paper - essay - poem - musical score - song - play film script - film - television show - game - sculpture - painting - theatrical production - play - opera - musical - exhibition - legal case report - computer program - website - web page - blog post comment - forum post comment - tweet - Facebook post - written oral statement - forth. include reference source quoted material contained within <blockquote> <q> element, use cite attribute element. Typically, browsers style contents <cite> element italics default. avoid this, apply CSS font-style property <cite> element. Examples <p>More information found <cite>[ISO-0000]</cite>.</p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements HTMLSpanElement interface element. | Specifications | Specification | |---| | HTML Standard # the-cite-element | Browser compatibility BCD tables load browser See also - element <blockquote> long quotations. - element <q> inline quotations thecite attribute."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code", "title": "<code>: The Inline Code element - HTML: HyperText Markup Language | MDN", "text": "<code>: Inline Code element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <code> HTML element displays contents styled fashion intended indicate text short fragment computer code. default, content text displayed using user agent's default monospace font. Try Attributes element includes global attributes. Examples paragraph text includes <code> : <p> function <code>selectAll()</code> highlights text input field user can, example, copy delete text. </p> Result Notes represent multiple lines code, wrap <code> element within <pre> element. <code> element represents single phrase code line code. CSS rule defined code selector override browser's default font face. Preferences set user might take precedence specified CSS. Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | code | | Permitted ARIA roles | | | DOM interface | HTMLElement Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements HTMLSpanElement interface element. | Specifications | Specification | |---| | HTML Standard # the-code-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col", "title": "<col>: The Table Column element - HTML: HyperText Markup Language | MDN", "text": "<col>: Table Column element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <col> HTML element defines one columns column group represented parent <colgroup> element. <col> element valid child <colgroup> element span attribute defined. Try Attributes element includes global attributes. span - Specifies number consecutive columns <col> element spans. value must positive integer greater zero. present, default value is1 . Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment column cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Note attribute overrides specifiedalign its<colgroup> parent element. Use thetext-align CSS property the<td> and<th> elements instead, attribute deprecated.Note: Setting text-align the<col> element effect as<col> descendants, therefore elements inherit it.If table use colspan attribute, use thetd:nth-of-type(an+b) CSS selector. Seta zero andb position column table, e.g.td:nth-of-type(2) { text-align: right; } right-align second column cells.If table use colspan attribute, effect achieved combining adequate CSS attribute selectors like[colspan=n] , though trivial. bgcolor Deprecated- Defines background color column cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- nothing. originally intended specify alignment content character column cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored, though still override specifiedchar its<colgroup> parent element. charoff Deprecated- nothing. originally intended specify number characters offset column cell content alignment character specified char attribute. valign Deprecated- Specifies vertical alignment column cell. possible enumerated values baseline ,bottom ,middle , andtop . Note attribute overrides specifiedvalign its<colgroup> parent element. Use thevertical-align CSS property the<td> and<th> elements instead, attribute deprecated.Note: Setting vertical-align the<col> element effect as<col> descendants, therefore elements inherit it.If table use colspan attribute, use thetd:nth-of-type(an+b) CSS selector. Seta zero andb position column table, e.g.td:nth-of-type(2) { vertical-align: middle; } center second column cells vertically.If table use colspan attribute, effect achieved combining adequate CSS attribute selectors like[colspan=n] , though trivial. width Deprecated- Specifies default width column. addition standard pixel percentage values, attribute take special form 0* , means width column spanned minimum width necessary hold column's contents. Relative widths as5* also used. Note attribute overrides specifiedwidth its<colgroup> parent element. Use thewidth CSS property instead, attribute deprecated. Usage notes - <col> element used within a<colgroup> element aspan attribute. - <col> elements structurally group columns together. role the<colgroup> element. - limited number CSS properties affect <col> :background : variousbackground properties set background cells within column. column background color painted top table column groups (<colgroup> ), behind background colors applied row groups (<thead> ,<tbody> , and<tfoot> ), rows (<tr> ), individual cells (<th> and<td> ), backgrounds applied table columns visible every layer painted top transparent background.border : variousborder properties apply, the<table> hasborder-collapse: collapse set.visibility : valuecollapse column results cells column rendered, cells spanning columns clipped. space columns would occupied removed. However, size columns still calculated though cells collapsed column(s) present. values forvisibility effect.width : Thewidth property defines minimum width column, ifmin-width set. Example See <table> complete table example introducing common standards best practices. example demonstrates eight-column table divided three <col> elements. HTML <colgroup> element provides structures basic table, creating single implicit column group. Three <col> elements included within <colgroup> , creating three stylable columns. span attribute specifies number table columns <col> span (defaulting 1 omitted), enabling attributes shared across columns <col> . <table> <caption> Personal weekly activities </caption> <colgroup> <col /> <col span=\"5\" class=\"weekdays\" /> <col span=\"2\" class=\"weekend\" /> </colgroup> <tr> <th>Period</th> <th>Mon</th> <th>Tue</th> <th>Wed</th> <th>Thu</th> <th>Fri</th> <th>Sat</th> <th>Sun</th> </tr> <tr> <th>a.m.</th> <td>Clean room</td> <td>Football training</td> <td>Dance Course</td> <td>History Class</td> <td>Buy drinks</td> <td>Study hour</td> <td>Free time</td> </tr> <tr> <th>p.m.</th> <td>Yoga</td> <td>Chess Club</td> <td>Meet friends</td> <td>Gymnastics</td> <td>Birthday party</td> <td>Fishing trip</td> <td>Free time</td> </tr> </table> CSS use CSS, instead deprecated HTML attributes, provide background color columns align cell content: table { border-collapse: collapse; border: 2px solid rgb(140 140 140); } caption { caption-side: bottom; padding: 10px; } th, td { border: 1px solid rgb(160 160 160); padding: 8px 6px; text-align: center; } .weekdays { background-color: #d7d9f2; } .weekend { background-color: #ffe8d4; } Result Technical summary | Content categories | None. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | <colgroup> only, though implicitly defined start tag mandatory. <colgroup> must span attribute. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLTableColElement | Specifications | Specification | |---| | HTML Standard # the-col-element | Browser compatibility BCD tables load browser See also <caption> ,<colgroup> ,<table> ,<tbody> ,<td> ,<tfoot> ,<th> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color column cellborder : CSS property control borders column cellstext-align : CSS property horizontally align column cell contentvertical-align : CSS property vertically align column cell contentvisibility : CSS property hide cells columnwidth : CSS property control default width column:nth-of-type ,:first-of-type ,:last-of-type : CSS pseudo-classes select desired column cells"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup", "title": "<colgroup>: The Table Column Group element - HTML: HyperText Markup Language | MDN", "text": "<colgroup>: Table Column Group element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <colgroup> HTML element defines group columns within table. Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment column group cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Note descendant<col> elements may override value using ownalign attribute. Use thetext-align CSS property the<td> and<th> elements instead, attribute deprecated.Note: Setting text-align the<colgroup> element effect as<td> and<th> elements descendants the<colgroup> element, therefore inherit it.If table use colspan attribute, use thetd:nth-of-type(an+b) CSS selector per column, wherea total number columns table andb ordinal position column table, e.g.td:nth-of-type(7n+2) { text-align: right; } right-align second column cells.If table use colspan attribute, effect achieved combining adequate CSS attribute selectors like[colspan=n] , though trivial. bgcolor Deprecated- Defines background color column group cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- nothing. originally intended specify alignment content character column group cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored, though still used default value thealign the<col> elements members column group. charoff Deprecated- nothing. originally intended specify number characters offset column group cell content alignment character specified char attribute. valign Deprecated- Specifies vertical alignment column group cell. possible enumerated values baseline ,bottom ,middle , andtop . Note descendant<col> elements may override value using ownvalign attribute. Use thevertical-align CSS property the<td> and<th> elements instead, attribute deprecated.Note: Setting vertical-align the<colgroup> element effect as<td> and<th> elements descendants the<colgroup> element, therefore inherit it.If table use colspan attribute, use thetd:nth-of-type() CSS selector per column, e.g.td:nth-of-type(2) { vertical-align: middle; } center second column cells vertically.If table use colspan attribute, effect achieved combining adequate CSS attribute selectors like[colspan=n] , though trivial. width Deprecated- Specifies default width column current column group. addition standard pixel percentage values, attribute take special form 0* , means width column spanned minimum width necessary hold column's contents. Relative widths as5* also used. Note descendant<col> elements may override value using ownwidth attribute. Use thewidth CSS property instead, attribute deprecated. Usage notes - <colgroup> appear within a<table> , any<caption> element (if used), any<thead> ,<tbody> ,<tfoot> , and<tr> elements. - limited number CSS properties affect <colgroup> :background : variousbackground properties set background cells within column group. column group background color painted top table, behind background colors applied columns (<col> ), row groups (<thead> ,<tbody> , and<tfoot> ), rows (<tr> ), individual cells (<th> and<td> ), backgrounds applied table column groups visible every layer painted top transparent background.border : variousborder properties apply, the<table> hasborder-collapse: collapse set.visibility : valuecollapse column group results cells columns column group rendered, cells spanning columns clipped. space columns column group would occupied removed. However, size columns still calculated though cells collapsed column(s) column group present. values forvisibility effect.width : Thewidth property defines minimum width columns within column group, ifmin-width set. Example See <table> complete table example introducing common standards best practices. example demonstrates seven-column table divided two <colgroup> elements span multiple columns. HTML Two <colgroup> elements used structure basic table creating column groups. number columns column group specified span attribute. <table> <caption> Personal weekly activities </caption> <colgroup span=\"5\" class=\"weekdays\"></colgroup> <colgroup span=\"2\" class=\"weekend\"></colgroup> <tr> <th>Mon</th> <th>Tue</th> <th>Wed</th> <th>Thu</th> <th>Fri</th> <th>Sat</th> <th>Sun</th> </tr> <tr> <td>Clean room</td> <td>Football training</td> <td>Dance Course</td> <td>History Class</td> <td>Buy drinks</td> <td>Study hour</td> <td>Free time</td> </tr> <tr> <td>Yoga</td> <td>Chess Club</td> <td>Meet friends</td> <td>Gymnastics</td> <td>Birthday party</td> <td>Fishing trip</td> <td>Free time</td> </tr> </table> CSS Grouped columns used visually highlight structure using CSS: table { border-collapse: collapse; border: 2px solid rgb(140 140 140); } caption { caption-side: bottom; padding: 10px; } th, td { border: 1px solid rgb(160 160 160); padding: 8px 6px; text-align: center; } .weekdays { background-color: #d7d9f2; } .weekend { background-color: #ffe8d4; } Result Technical summary | Content categories | None. | |---|---| | Permitted content | span attribute present: none.If attribute present: zero <col> element | | Tag omission | start tag may omitted, <col> element first child preceded <colgroup> whose end tag omitted.The end tag may omitted, followed space comment. | | Permitted parents | <table> element. <colgroup> must appear <caption> element, <thead> , <tbody> , <tfoot> , <tr> elements. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLTableColElement | Specifications | Specification | |---| | HTML Standard # the-colgroup-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<table> ,<tbody> ,<td> ,<tfoot> ,<th> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color column group cellborder : CSS property control borders column group cellstext-align : CSS property horizontally align column group cell contentvertical-align : CSS property vertically align column group cell contentvisibility : CSS property hide (or show) cells column groupwidth : CSS property control default width column column group:nth-of-type ,:first-of-type ,:last-of-type : CSS pseudo-classes select desired column cells"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data", "title": "<data>: The Data element - HTML: HyperText Markup Language | MDN", "text": "<data>: Data element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since October 2017. <data> HTML element links given piece content machine-readable translation. content time- date-related, <time> element must used. Try Attributes element's attributes include global attributes. value - attribute specifies machine-readable translation content element. Examples following example displays product names also associates name product number. html <p>New Products</p> <ul> <li><data value=\"398\">Mini Ketchup</data></li> <li><data value=\"399\">Jumbo Ketchup</data></li> <li><data value=\"400\">Mega Jumbo Ketchup</data></li> </ul> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLDataElement | Specifications | Specification | |---| | HTML Standard # the-data-element | Browser compatibility BCD tables load browser See also - HTML <time> element."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist", "title": "<datalist>: The HTML Data List element - HTML: HyperText Markup Language | MDN", "text": "<datalist>: HTML Data List element Limited availability feature Baseline work widely-used browsers. <datalist> HTML element contains set <option> elements represent permissible recommended options available choose within controls. Try bind <datalist> element control, give unique identifier id attribute, add list attribute <input> element identifier value. certain types <input> support behavior, also vary browser browser. <option> element value attribute, represents suggestion entered input. also label attribute, or, missing that, text content, may displayed browser instead value (Firefox), addition value (Chrome Safari, supplemental text). exact content drop-down menu depends browser, clicked, content entered control field always come value attribute. Note: <datalist> replacement <select> . <datalist> represent input itself; list suggested values associated control. control still accept value passes validation, even suggestion list. Attributes element attributes global attributes, common elements. Accessibility deciding use <datalist> element, accessibility issues mindful of: - font size data list's options zoom, always remaining size. contents autosuggest grow shrink rest contents zoomed out. - targeting list options CSS limited non-existent, rendering styled high-contrast mode. - screen reader/browser combinations, including NVDA Firefox, announce contents autosuggest popup. Examples Textual types Recommended values types text, search, url, tel, email number, displayed drop-down menu user clicks double-clicks control. Typically right side control also arrow pointing presence predefined values. <label for=\"myBrowser\">Choose browser list:</label> <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" /> <datalist id=\"browsers\"> <option value=\"Chrome\"></option> <option value=\"Firefox\"></option> <option value=\"Opera\"></option> <option value=\"Safari\"></option> <option value=\"Microsoft Edge\"></option> </datalist> Date Time types types month, week, date, time datetime-local show interface allows convenient selection date time. Predefined values shown there, allowing user quickly fill control value. Note: types supported, basic text type rendered instead, creating text field. field correctly recognize recommended values display user drop-down menu. <input type=\"time\" list=\"popularHours\" /> <datalist id=\"popularHours\"> <option value=\"12:00\"></option> <option value=\"13:00\"></option> <option value=\"14:00\"></option> </datalist> Range type recommended values range type shown series hash marks user easily select. <label for=\"tick\">Tip amount:</label> <input type=\"range\" list=\"tickmarks\" min=\"0\" max=\"100\" id=\"tick\" name=\"tick\" /> <datalist id=\"tickmarks\"> <option value=\"0\"></option> <option value=\"10\"></option> <option value=\"20\"></option> <option value=\"30\"></option> </datalist> Color type color type show predefined colors browser-provided interface. <label for=\"colors\">Pick color (preferably red tone):</label> <input type=\"color\" list=\"redColors\" id=\"colors\" /> <datalist id=\"redColors\"> <option value=\"#800000\"></option> <option value=\"#8B0000\"></option> <option value=\"#A52A2A\"></option> <option value=\"#DC143C\"></option> </datalist> Technical summary | Content categories | Flow content, phrasing content. | |---|---| | Permitted content | Either phrasing content zero <option> elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | listbox | | Permitted ARIA roles | role permitted | | DOM interface | HTMLDataListElement | Specifications | Specification | |---| | HTML Standard # the-datalist-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd", "title": "<dd>: The Description Details element - HTML: HyperText Markup Language | MDN", "text": "<dd>: Description Details element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <dd> HTML element provides description, definition, value preceding term (<dt> ) description list (<dl> ). Try Attributes element includes global attributes. Examples examples, see examples provided <dl> element. Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content. | | Tag omission | start tag required. end tag may omitted element immediately followed another <dd> element <dt> element, content parent element. | | Permitted parents | <dl> <div> child <dl> .This element used <dt> another <dd> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-dd-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del", "title": "<del>: The Deleted Text element - HTML: HyperText Markup Language | MDN", "text": "<del>: Deleted Text element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <del> HTML element represents range text deleted document. used rendering \"track changes\" source code diff information, example. <ins> element used opposite purpose: indicate text added document. Try element often (but need be) rendered applying strike-through style text. Attributes element's attributes include global attributes. cite - URI resource explains change (for example, meeting minutes). datetime - attribute indicates time date change must valid date string optional time. value cannot parsed date optional time string, element associated timestamp. format string without time, see Date strings. format string includes date time covered Local date time strings. Accessibility presence del element announced screen reading technology default configuration. made announced using CSS content property, along ::before ::after pseudo-elements. del::before, del::after { clip-path: inset(100%); clip: rect(1px, 1px, 1px, 1px); height: 1px; overflow: hidden; position: absolute; white-space: nowrap; width: 1px; } del::before { content: \" [deletion start] \"; } del::after { content: \" [deletion end] \"; } people use screen readers deliberately disable announcing content creates extra verbosity. this, important abuse technique apply situations knowing content deleted would adversely affect understanding. Examples <p><del>This text deleted</del>, rest paragraph.</p> <del><p>This paragraph deleted.</p></del> Result Technical summary | Content categories | Phrasing content, flow content. | |---|---| | Permitted content | Transparent. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | deletion | | Permitted ARIA roles | | | DOM interface | HTMLModElement | Specifications | Specification | |---| | HTML Standard # the-del-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details", "title": "<details>: The Details disclosure element - HTML: HyperText Markup Language | MDN", "text": "<details>: Details disclosure element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since January 2020. * parts feature may varying levels support. <details> HTML element creates disclosure widget information visible widget toggled \"open\" state. summary label must provided using <summary> element. disclosure widget typically presented onscreen using small triangle rotates (or twists) indicate open/closed status, label next triangle. contents <summary> element used label disclosure widget. contents <details> provide accessible description <summary> . Try <details> widget one two states. default closed state displays triangle label inside <summary> (or user agent-defined default string <summary> ). user clicks widget focuses presses space bar, \"twists\" open, revealing contents. common use triangle rotates twists around represent opening closing widget sometimes called \"twisty\". use CSS style disclosure widget, programmatically open close widget setting/removing open attribute. Unfortunately, time, there's built-in way animate transition open closed. default closed, widget tall enough display disclosure triangle summary. open, expands display details contained within. Fully standards-compliant implementations automatically apply CSS display : list-item<summary> element. use ::marker pseudo-element customize disclosure widget. Attributes element includes global attributes. open - Boolean attribute indicates whether details \u2014 is, contents <details> element \u2014 currently visible. details shown attribute exists, hidden attribute absent. default attribute absent means details visible.Note: remove attribute entirely make details hidden. open=\"false\" makes details visible attribute Boolean. name - attribute enables multiple <details> elements connected, one open time. allows developers easily create UI features accordions without scripting.The name attribute specifies group name \u2014 give multiple<details> elements samename value group them. one grouped<details> elements open time \u2014 opening one cause another close. multiple grouped<details> elements given theopen attribute, first one source order rendered open.Note: <details> elements adjacent one another source part group. Events addition usual events supported HTML elements, <details> element supports toggle event, dispatched <details> element whenever state changes open closed. sent state changed, although state changes multiple times browser dispatch event, events coalesced one sent. use event listener toggle event detect widget changes state: details.addEventListener(\"toggle\", (event) => { (details.open) { /* element toggled open */ } else { /* element toggled closed */ } }); Examples basic disclosure example example shows basic <details> element <summary> . <details> <summary>System Requirements</summary> <p> Requires computer running operating system. computer must memory ideally kind long-term storage. input device well form output device recommended. </p> </details> Result Creating open disclosure box start <details> box open state, add Boolean open attribute: <details open> <summary>System Requirements</summary> <p> Requires computer running operating system. computer must memory ideally kind long-term storage. input device well form output device recommended. </p> </details> Result Multiple named disclosure boxes include several <details> boxes, name one open time: <details name=\"reqs\"> <summary>Graduation Requirements</summary> <p> Requires 40 credits, including passing grade health, geography, history, economics, wood shop. </p> </details> <details name=\"reqs\"> <summary>System Requirements</summary> <p> Requires computer running operating system. computer must memory ideally kind long-term storage. input device well form output device recommended. </p> </details> <details name=\"reqs\"> <summary>Job Requirements</summary> <p> Requires knowledge HTML, CSS, JavaScript, accessibility, web performance, privacy, security, internationalization, well dislike broccoli. </p> </details> Result Try opening disclosure widgets. open one, others automatically close. Customizing appearance let's apply CSS customize appearance disclosure box. CSS details { font: 16px \"Open Sans\", Calibri, sans-serif; width: 620px; } details > summary { padding: 2px 6px; width: 15em; background-color: #ddd; border: none; box-shadow: 3px 3px 4px black; cursor: pointer; } details > p { border-radius: 0 0 10px 10px; background-color: #ddd; padding: 2px 6px; margin: 0; box-shadow: 3px 3px 4px black; } details[open] > summary { background-color: #ccf; } CSS creates look similar tabbed interface, clicking tab opens reveal contents. selector details[open] used style element open. HTML <details> <summary>System Requirements</summary> <p> Requires computer running operating system. computer must memory ideally kind long-term storage. input device well form output device recommended. </p> </details> Result See <summary> page example customizing disclosure widget. Technical summary | Content categories | Flow content, sectioning root, interactive content, palpable content. | |---|---| | Permitted content | One <summary> element followed flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | group | | Permitted ARIA roles | role permitted | | DOM interface | HTMLDetailsElement | Specifications | Specification | |---| | HTML Standard # the-details-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn", "title": "<dfn>: The Definition element - HTML: HyperText Markup Language | MDN", "text": "<dfn>: Definition element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <dfn> HTML element indicates term defined. <dfn> element used complete definition statement, full definition term one following: Try Attributes element's attributes include global attributes. title attribute special meaning, noted below. Usage notes not-entirely-obvious aspects using <dfn> element. examine here. Specifying term defined term defined identified following rules: - <dfn> element atitle attribute, value thetitle attribute considered term defined. element must still text within it, text may abbreviation (perhaps using<abbr> ) another form term. - <dfn> contains single child element text content own, child element an<abbr> element atitle attribute itself, exact value the<abbr> element'stitle term defined. - Otherwise, text content <dfn> element term defined. shown first example below. Note: <dfn> element title attribute, must contain term defined text. Links <dfn> elements include id attribute <dfn> element, link using <a> elements. links uses term, intent reader quickly navigate term's definition they're already aware it, clicking term's link. shown example Links definitions below. Examples Let's take look examples various usage scenarios. Basic identification term example uses plain <dfn> element identify location term within definition. HTML <p> <strong>HTML Definition element (<dfn><dfn></dfn>)</strong> used indicate term defined within context definition phrase sentence. </p> Since <dfn> element title , text contents <dfn> element used term defined. Result Links definitions add links definitions, create link way always do, <a> element. HTML <p> <strong>HTML Definition element (<dfn id=\"definition-dfn\"><dfn></dfn>)</strong> used indicate term defined within context definition phrase sentence. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Graece donan, Latine voluptatem vocant. Confecta res esset. Duo Reges: constructio interrete. Scrupulum, inquam, abeunti; </p> <p> that, decided use <code><a href=\"#definition-dfn\"><dfn></a></code> element project. </p> see definition \u2014 id attribute, \"definition-dfn\" , used target link. Later on, link created using <a> href attribute set \"#definition-dfn\" set link back definition. Result Using abbreviations definitions together cases, may wish use abbreviation term defining it. done using <dfn> <abbr> elements tandem, like this: HTML <p> <dfn><abbr title=\"Hubble Space Telescope\">HST</abbr></dfn> among productive scientific instruments ever constructed. orbit 20 years, scanning sky returning data photographs unprecedented quality detail. </p> <p> Indeed, <abbr title=\"Hubble Space Telescope\">HST</abbr> arguably done advance science device ever built. </p> Note <abbr> element nested inside <dfn> . former establishes term abbreviation (\"HST\") specifies full term (\"Hubble Space Telescope\") title attribute. latter indicates abbreviated term represents term defined. Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content, <dfn> element must descendant. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | term | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-dfn-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog", "title": "<dialog>: The Dialog element - HTML: HyperText Markup Language | MDN", "text": "<dialog>: Dialog element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since March 2022. <dialog> HTML element represents modal non-modal dialog box interactive component, dismissible alert, inspector, subwindow. HTML <dialog> element used create modal non-modal dialog boxes. Modal dialog boxes interrupt interaction rest page inert, non-modal dialog boxes allow interaction rest page. JavaScript used display <dialog> element. Use .showModal() method display modal dialog .show() method display non-modal dialog. dialog box closed using .close() method using dialog method submitting <form> nested within <dialog> element. Modal dialogs also closed pressing Esc key. Attributes element includes global attributes. Warning: tabindex attribute must used <dialog> element. See usage notes. open - Indicates dialog box active available interaction. open attribute set, dialog box visible user. recommended use the.show() or.showModal() method render dialogs, rather theopen attribute. a<dialog> opened using theopen attribute, non-modal.Note: toggle open closed states non-modal dialog boxes toggling presence open attribute, approach recommended. Usage notes - HTML <form> elements used close dialog box attributemethod=\"dialog\" button used submit form hasformmethod=\"dialog\" set. a<form> within a<dialog> submitted via thedialog method, dialog box closes, states form controls saved submitted, thereturnValue property gets set value button activated. - CSS ::backdrop pseudo-element used style backdrop modal dialog, displayed behind the<dialog> element dialog displayed using theHTMLDialogElement.showModal() method. example, pseudo-element could used blur, darken, otherwise obfuscate inert content behind modal dialog. - autofocus attribute added element user expected interact immediately upon opening modal dialog. element involves immediate interaction, recommended addautofocus close button inside dialog, dialog user expected click/activate dismiss. - add tabindex property the<dialog> element interactive receive focus. dialog's contents, including close button contained dialog, receive focus interactive. Accessibility implementing dialog, important consider appropriate place set user focus. using HTMLDialogElement.showModal() open <dialog> , focus set first nested focusable element. Explicitly indicating initial focus placement using autofocus attribute help ensure initial focus set element deemed best initial focus placement particular dialog. doubt, may always known initial focus could set within dialog, particularly instances dialog's content dynamically rendered invoked, <dialog> element may provide best initial focus placement. Ensure mechanism provided allow users close dialog. robust way ensure users close dialog include explicit button so, confirmation, cancellation, close button. default, dialog invoked showModal() method dismissed pressing Esc key. non-modal dialog dismiss via Esc key default, depending non-modal dialog represents, may desired behavior. Keyboard users expect Esc key close modal dialogs; ensure behavior implemented maintained. multiple modal dialogs open, pressing Esc key close last shown dialog. using <dialog> , behavior provided browser. dialogs created using elements, native <dialog> element provides usability accessibility features must replicated use elements similar purpose. creating custom dialog implementation, ensure expected default behaviors supported proper labeling recommendations followed. <dialog> element exposed browsers manner similar custom dialogs use ARIA role=\"dialog\" attribute. <dialog> elements invoked showModal() method implicitly aria-modal=\"true\", whereas <dialog> elements invoked show() method displayed using open attribute changing default display <dialog> exposed [aria-modal=\"false\"] . implementing modal dialogs, everything <dialog> contents rendered inert using inert attribute. using <dialog> along HTMLDialogElement.showModal() method, behavior provided browser. Examples HTML-only dialog example demonstrates creation non-modal dialog using HTML. boolean open attribute <dialog> element, dialog appears open page loads. dialog closed clicking \"OK\" button method attribute <form> element set \"dialog\" . case, JavaScript needed close form. <dialog open> <p>Greetings, one all!</p> <form method=\"dialog\"> <button>OK</button> </form> </dialog> Result Note: Reload page reset output. dialog initially open presence open attribute. Dialogs displayed using open attribute non-modal. clicking \"OK\", dialog gets dismissed, leaving Result frame empty. dialog dismissed, method provided reopen it. reason, preferred method display non-modal dialogs using HTMLDialogElement.show() method. possible toggle display dialog adding removing boolean open attribute, recommended practice. Creating modal dialog example demonstrates modal dialog gradient backdrop. .showModal() method opens modal dialog \"Show dialog\" button activated. dialog closed pressing Esc key via close() method \"Close\" button within dialog activated. dialog opens, browser, default, gives focus first element focused within dialog. example, autofocus attribute applied \"Close\" button, giving focus dialog opens, element expect user interact immediately dialog opens. HTML <dialog> <button autofocus>Close</button> <p>This modal dialog groovy backdrop!</p> </dialog> <button>Show dialog</button> CSS style backdrop dialog using ::backdrop pseudo-element. ::backdrop { background-image: linear-gradient( 45deg, magenta, rebeccapurple, dodgerblue, green ); opacity: 0.75; } JavaScript dialog opened modally using .showModal() method closed using .close() method. const dialog = document.querySelector(\"dialog\"); const showButton = document.querySelector(\"dialog + button\"); const closeButton = document.querySelector(\"dialog button\"); // \"Show dialog\" button opens dialog modally showButton.addEventListener(\"click\", () => { dialog.showModal(); }); // \"Close\" button closes dialog closeButton.addEventListener(\"click\", () => { dialog.close(); }); Result modal dialog displayed, appears dialogs might present. Everything outside modal dialog inert interactions outside dialog blocked. Notice dialog open, exception dialog itself, interaction document possible; \"Show dialog\" button mostly obfuscated almost opaque backdrop dialog inert. Handling return value dialog example demonstrates returnValue <dialog> element close modal dialog using form. default, returnValue empty string value button submits form within <dialog> element, one. example opens modal dialog \"Show dialog\" button activated. dialog contains form <select> two <button> elements, default type=\"submit\" . event listener updates value \"Confirm\" button select option changes. \"Confirm\" button activated close dialog, current value button return value. dialog closed pressing \"Cancel\" button, returnValue cancel . dialog closed, return value displayed \"Show dialog\" button. dialog closed pressing Esc key, returnValue updated, close event occur, text <output> updated. HTML <!-- modal dialog containing form --> <dialog id=\"favDialog\"> <form> <p> <label> Favorite animal: <select> <option value=\"default\">Choose\u2026</option> <option>Brine shrimp</option> <option>Red panda</option> <option>Spider monkey</option> </select> </label> </p> <div> <button value=\"cancel\" formmethod=\"dialog\">Cancel</button> <button id=\"confirmBtn\" value=\"default\">Confirm</button> </div> </form> </dialog> <p> <button id=\"showDialog\">Show dialog</button> </p> <output></output> JavaScript const showButton = document.getElementById(\"showDialog\"); const favDialog = document.getElementById(\"favDialog\"); const outputBox = document.querySelector(\"output\"); const selectEl = favDialog.querySelector(\"select\"); const confirmBtn = favDialog.querySelector(\"#confirmBtn\"); // \"Show dialog\" button opens <dialog> modally showButton.addEventListener(\"click\", () => { favDialog.showModal(); }); // \"Cancel\" button closes dialog without submitting [formmethod=\"dialog\"], triggering close event. favDialog.addEventListener(\"close\", (e) => { outputBox.value = favDialog.returnValue === \"default\" ? \"No return value.\" : `ReturnValue: ${favDialog.returnValue}.`; // check \"default\" rather empty string }); // Prevent \"confirm\" button default behavior submitting form, close dialog `close()` method, triggers \"close\" event. confirmBtn.addEventListener(\"click\", (event) => { event.preventDefault(); // want submit fake form favDialog.close(selectEl.value); // send select box value here. }); Result examples demonstrate following three methods closing modal dialogs: - submitting form within dialog form using dialog method (as seen HTML-only example). - pressing Esc key. - calling HTMLDialogElement.close() method (as seen modal example). example, \"Cancel\" button closes dialog via thedialog form method \"Confirm\" button closes dialog via theHTMLDialogElement.close() method. \"Cancel\" button includes formmethod=\"dialog\" attribute, overrides <form> 's default GET method. form's method dialog , state form saved submitted, dialog gets closed. Without action , submitting form via default GET method causes page reload. use JavaScript prevent submission close dialog event.preventDefault() HTMLDialogElement.close() methods, respectively. important provide closing mechanism within every dialog element. Esc key close non-modal dialogs default, one assume user even access physical keyboard (e.g., someone using touch screen device without access keyboard). Closing dialog required form input form inside dialog required input, user agent let close dialog provide value required input. close dialog, either use formnovalidate attribute close button call close() method dialog object close button clicked. <dialog id=\"dialog\"> <form method=\"dialog\"> <p> <label> Favorite animal: <input type=\"text\" required /> </label> </p> <div> <input type=\"submit\" id=\"normal-close\" value=\"Normal close\" /> <input type=\"submit\" id=\"novalidate-close\" value=\"Novalidate close\" formnovalidate /> <input type=\"submit\" id=\"js-close\" value=\"JS close\" /> </div> </form> </dialog> <p> <button id=\"show-dialog\">Show dialog</button> </p> <output></output> JavaScript const showBtn = document.getElementById(\"show-dialog\"); const dialog = document.getElementById(\"dialog\"); const jsCloseBtn = dialog.querySelector(\"#js-close\"); showBtn.addEventListener(\"click\", () => { dialog.showModal(); }); jsCloseBtn.addEventListener(\"click\", (e) => { e.preventDefault(); dialog.close(); }); Result output, see impossible close dialog using Normal close button. dialog closed bypass form validation using formnovalidate attribute Cancel button. Programmatically, dialog.close() also close dialog. Animating dialogs <dialog> set display: none; hidden display: block; shown, well removed / added top layer accessibility tree. Therefore, <dialog> elements animated display property needs animatable. Supporting browsers animate display variation discrete animation type. Specifically, browser flip none another value display animated content shown entire animation duration. example: - animating display fromnone toblock (or another visibledisplay value), value flip toblock at0% animation duration visible throughout. - animating display fromblock (or another visibledisplay value) tonone , value flip tonone at100% animation duration visible throughout. Note: animating using CSS transitions, transition-behavior: allow-discrete needs set enable behavior. behavior available default animating CSS animations; equivalent step required. Transitioning dialog elements animating <dialog> CSS transitions, following features required: @starting-style at-rule- Provides set starting values properties set <dialog> want transition every time opened. needed avoid unexpected behavior. default, CSS transitions occur property changes one value another visible element; triggered elements' first style updates, thedisplay type changes fromnone another type. display property- Add display transitions list the<dialog> remain asdisplay: block (or another visibledisplay value set dialog's open state) duration transition, ensuring transitions visible. overlay property- Include overlay transitions list ensure removal the<dialog> top layer deferred transition completes, ensuring transition visible. transition-behavior property- Set transition-behavior: allow-discrete thedisplay andoverlay transitions (or thetransition shorthand) enable discrete transitions two properties default animatable. quick example show might look like. HTML HTML contains <dialog> element, plus button show dialog. Additionally, <dialog> element contains another button close itself. <dialog id=\"dialog\"> Content <button class=\"close\">close</button> </dialog> <button class=\"show\">Show Modal</button> CSS CSS, include @starting-style block defines transition starting styles opacity transform properties, transition end styles dialog[open] state, default styles default dialog state transition back <dialog> appeared. Note <dialog> 's transition list includes properties, also display overlay properties, allow-discrete set them. also set starting style value background-color property ::backdrop appears behind <dialog> opens, provide nice darkening animation. dialog[open]::backdrop selector selects backdrops <dialog> elements dialog open. /* Open state dialog */ dialog[open] { opacity: 1; transform: scaleY(1); } /* Closed state dialog */ dialog { opacity: 0; transform: scaleY(0); transition: opacity 0.7s ease-out, transform 0.7s ease-out, overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete; /* Equivalent transition: 0.7s allow-discrete; */ } /* Before-open state */ /* Needs previous dialog[open] rule take effect, specificity */ @starting-style { dialog[open] { opacity: 0; transform: scaleY(0); } } /* Transition :backdrop dialog modal promoted top layer */ dialog::backdrop { background-color: rgb(0 0 0 / 0%); transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete, background-color 0.7s; /* Equivalent transition: 0.7s allow-discrete; */ } dialog[open]::backdrop { background-color: rgb(0 0 0 / 25%); } /* starting-style rule cannot nested inside selector nesting selector cannot represent pseudo-elements. */ @starting-style { dialog[open]::backdrop { background-color: rgb(0 0 0 / 0%); } } JavaScript JavaScript adds event handlers show close buttons causing show close <dialog> clicked: const dialogElem = document.getElementById(\"dialog\"); const showBtn = document.querySelector(\".show\"); const closeBtn = document.querySelector(\".close\"); showBtn.addEventListener(\"click\", () => { dialogElem.showModal(); }); closeBtn.addEventListener(\"click\", () => { dialogElem.close(); }); Result code renders follows: Note: <dialog> change display: none display: block time shown, <dialog> transitions @starting-style styles dialog[open] styles every time entry transition occurs. <dialog> closes, transitions dialog[open] state default dialog state. possible style transition entry exit different cases. See Demonstration starting styles used example proof this. dialog keyframe animations animating <dialog> CSS keyframe animations, differences note transitions: - provide @starting-style . - include display value keyframe; thedisplay value entirety animation, another non-none display value encountered. - need explicitly enable discrete animations; equivalent allow-discrete inside keyframes. - need set overlay inside keyframes either; thedisplay animation handles animation the<dialog> shown hidden. Let's look example see looks like. HTML First, HTML contains <dialog> element, plus button show dialog. Additionally, <dialog> element contains another button close itself. <dialog id=\"dialog\"> Content <button class=\"close\">close</button> </dialog> <button class=\"show\">Show Modal</button> CSS CSS defines keyframes animate closed shown states <dialog> , plus fade-in animation <dialog> 's backdrop. <dialog> animations include animating display make sure actual visible animation effects remain visible whole duration. Note possible animate backdrop fade \u2014 backdrop immediately removed DOM <dialog> closed, nothing animate. dialog { animation: fade-out 0.7s ease-out; } dialog[open] { animation: fade-in 0.7s ease-out; } dialog[open]::backdrop { animation: backdrop-fade-in 0.7s ease-out forwards; } /* Animation keyframes */ @keyframes fade-in { 0% { opacity: 0; transform: scaleY(0); display: none; } 100% { opacity: 1; transform: scaleY(1); display: block; } } @keyframes fade-out { 0% { opacity: 1; transform: scaleY(1); display: block; } 100% { opacity: 0; transform: scaleY(0); display: none; } } @keyframes backdrop-fade-in { 0% { background-color: rgb(0 0 0 / 0%); } 100% { background-color: rgb(0 0 0 / 25%); } } body, button { font-family: system-ui; } JavaScript Finally, JavaScript adds event handlers buttons enable showing closing <dialog> : const dialogElem = document.getElementById(\"dialog\"); const showBtn = document.querySelector(\".show\"); const closeBtn = document.querySelector(\".close\"); showBtn.addEventListener(\"click\", () => { dialogElem.showModal(); }); closeBtn.addEventListener(\"click\", () => { dialogElem.close(); }); Result code renders follows: Technical summary | Content categories | Flow content, sectioning root | |---|---| | Permitted content | Flow content | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content | | Implicit ARIA role | dialog | | Permitted ARIA roles | alertdialog | | DOM interface | HTMLDialogElement | Specifications | Specification | |---| | HTML Standard # the-dialog-element | Browser compatibility BCD tables load browser See also HTMLDialogElement interfaceclose event theHTMLDialogElement interfacecancel event theHTMLDialogElement interfaceopen property theHTMLDialogElement interfaceinert global attribute HTML elements::backdrop CSS pseudo-element- Web forms Learn area"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dir", "title": "<dir>: The Directory element - HTML: HyperText Markup Language | MDN", "text": "<dir>: Directory element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <dir> HTML element used container directory files and/or folders, potentially styles icons applied user agent. use obsolete element; instead, use <ul> element lists, including lists files. Warning: use element. Though present early HTML specifications, deprecated HTML 4, since removed entirely. DOM interface element implements HTMLDirectoryElement interface. Attributes Like HTML elements, element supports global attributes. compact Deprecated- Boolean attribute hints list rendered compact style. interpretation attribute depends user agent work browsers. Specifications | Specification | |---| | HTML Standard # dir | Browser compatibility BCD tables load browser See also - list-related HTML Elements: <ol> ,<ul> ,<li> , and<menu> ; - CSS properties may specially useful style <dir> element:- list-style property, useful choose way ordinal displayed. - CSS counters, useful handle complex nested lists. - line-height property, useful simulate deprecatedcompact attribute. - margin property, useful control indent list. -"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div", "title": "<div>: The Content Division element - HTML: HyperText Markup Language | MDN", "text": "<div>: Content Division element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <div> HTML element generic container flow content. effect content layout styled way using CSS (e.g. styling directly applied it, kind layout model like Flexbox applied parent element). Try Attributes element includes global attributes. Note: align attribute obsolete; use anymore. Instead, use CSS properties techniques CSS Grid CSS Flexbox align position <div> elements page. Usage notes Accessibility <div> element implicit role generic , none. may affect certain ARIA combination declarations expect direct descendant element certain role function properly. Examples basic example <div> <p> kind content here. <p>, <table>. name it! </p> </div> Result styled example example creates shadowed box applying style <div> using CSS. Note use class attribute <div> apply style named \"shadowbox\" element. HTML <div class=\"shadowbox\"> <p>Here's interesting note displayed lovely shadowed box.</p> </div> CSS .shadowbox { width: 15em; border: 1px solid #333; box-shadow: 8px 8px 5px #444; padding: 8px 12px; background-image: linear-gradient(180deg, #fff, #ddd 40%, #ccc); } Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Flow content. (in WHATWG HTML): parent <dl> element: one <dt> elements followed one <dd> elements, optionally intermixed <script> <template> elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. (in WHATWG HTML): <dl> element. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLDivElement | Specifications | Specification | |---| | HTML Standard # the-div-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl", "title": "<dl>: The Description List element - HTML: HyperText Markup Language | MDN", "text": "<dl>: Description List element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <dl> HTML element represents description list. element encloses list groups terms (specified using <dt> element) descriptions (provided <dd> elements). Common uses element implement glossary display metadata (a list key-value pairs). Try Attributes element includes global attributes. Accessibility screen reader exposes <dl> content differently, including total count, terms/definitions context, navigation methods. differences necessarily bugs. iOS 14, VoiceOver announce <dl> content list navigating virtual cursor (not via read-all command). VoiceOver support list navigation commands <dl> . careful applying ARIA term definition roles <dl> constructs VoiceOver (macOS iOS) adjust announced. Examples Single term description <dl> <dt>Firefox</dt> <dd> free, open source, cross-platform, graphical web browser developed Mozilla Corporation hundreds volunteers. </dd> <!-- terms descriptions --> </dl> Result Multiple terms, single description <dl> <dt>Firefox</dt> <dt>Mozilla Firefox</dt> <dt>Fx</dt> <dd> free, open source, cross-platform, graphical web browser developed Mozilla Corporation hundreds volunteers. </dd> <!-- terms descriptions --> </dl> Result Single term, multiple descriptions <dl> <dt>Firefox</dt> <dd> free, open source, cross-platform, graphical web browser developed Mozilla Corporation hundreds volunteers. </dd> <dd> Red Panda also known Lesser Panda, Wah, Bear Cat Firefox, mostly herbivorous mammal, slightly larger domestic cat (60 cm long). </dd> <!-- terms descriptions --> </dl> Result Multiple terms descriptions also possible define multiple terms multiple corresponding descriptions, combining examples above. Metadata Description lists useful displaying metadata list key-value pairs. <dl> <dt>Name</dt> <dd>Godzilla</dd> <dt>Born</dt> <dd>1952</dd> <dt>Birthplace</dt> <dd>Japan</dd> <dt>Color</dt> <dd>Green</dd> </dl> Result Tip: handy define key-value separator CSS, as: dt::after { content: \": \"; } Wrapping name-value groups div elements HTML allows wrapping name-value group <dl> element <div> element. useful using microdata, global attributes apply whole group, styling purposes. <dl> <div> <dt>Name</dt> <dd>Godzilla</dd> </div> <div> <dt>Born</dt> <dd>1952</dd> </div> <div> <dt>Birthplace</dt> <dd>Japan</dd> </div> <div> <dt>Color</dt> <dd>Green</dd> </div> </dl> Result Notes Technical summary | Content categories | Flow content, <dl> element's children include one name-value group, palpable content. | |---|---| | Permitted content | Either: Zero groups consisting one | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | group , list , none , presentation | | DOM interface | HTMLDListElement | Specifications | Specification | |---| | HTML Standard # the-dl-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt", "title": "<dt>: The Description Term element - HTML: HyperText Markup Language | MDN", "text": "<dt>: Description Term element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <dt> HTML element specifies term description definition list, must used inside <dl> element. usually followed <dd> element; however, multiple <dt> elements row indicate several terms defined immediate next <dd> element. subsequent <dd> (Description Details) element provides definition related text associated term specified using <dt> . Try Attributes element includes global attributes. Examples examples, see examples provided <dl> element. Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content, <header> , <footer> , sectioning content heading content descendants. | | Tag omission | start tag required. end tag may omitted element immediately followed another <dt> element <dd> element, content parent element. | | Permitted parents | <dl> (in WHATWG HTML, W3C HTML 5.2 later) <div> child <dl> .This element used <dd> another <dt> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | listitem | | DOM interface | HTMLElement Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements HTMLSpanElement interface element. | Specifications | Specification | |---| | HTML Standard # the-dt-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em", "title": "<em>: The Emphasis element - HTML: HyperText Markup Language | MDN", "text": "<em>: Emphasis element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <em> HTML element marks text stress emphasis. <em> element nested, level nesting indicating greater degree emphasis. Try Attributes element includes global attributes. Usage notes <em> element words stressed emphasis compared surrounding text, often limited word words sentence affects meaning sentence itself. Typically element displayed italic type. However, used apply italic styling; use CSS font-style property purpose. Use <cite> element mark title work (book, play, song, etc.). Use <i> element mark text alternate tone mood, covers many common situations italics scientific names words languages. Use <strong> element mark text greater importance surrounding text. <i> vs. <em> developers may confused multiple elements seemingly produce similar visual results. <em> <i> common example, since italicize text. What's difference? use? default, visual result same. However, semantic meaning different. <em> element represents stress emphasis contents, <i> element represents text set normal prose, foreign word, fictional character thoughts, text refers definition word instead representing semantic meaning. (The title work, name book movie, use <cite> .) means right one use depends situation. Neither purely decorative purposes, that's CSS styling for. Examples <em> could be: <p>Just <em>do</em> already!</p> <p>We <em>had</em> something it.</p> person software reading text would pronounce words italics emphasis, using verbal stress. Examples <i> could be: <p>The word <i>the</i> article.</p> <p>The <i>Queen Mary</i> sailed last night.</p> Here, added emphasis importance word \"Queen Mary\". merely indicated object question queen named Mary ship named \"Queen Mary\". Examples example, <em> element used highlight implicit explicit contrast two ingredient lists: <p> Ice cream made milk, sweetener, cream. Frozen custard, hand, made milk, cream, sweetener, <em>egg yolks</em>. </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | emphasis | | Permitted ARIA roles | | | DOM interface | HTMLElement Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements HTMLSpanElement interface element. | Specifications | Specification | |---| | HTML Standard # the-em-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed", "title": "<embed>: The Embed External Content element - HTML: HyperText Markup Language | MDN", "text": "<embed>: Embed External Content element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since January 2020. <embed> HTML element embeds external content specified point document. content provided external application source interactive content browser plug-in. Try Note: topic documents element defined part HTML Living Standard. address earlier, non-standardized implementation element. Keep mind modern browsers deprecated removed support browser plug-ins, relying upon <embed> generally wise want site operable average user's browser. Attributes element's attributes include global attributes. height - displayed height resource, CSS pixels. must absolute value; percentages allowed. src - URL resource embedded. type - MIME type use select plug-in instantiate. width - displayed width resource, CSS pixels. must absolute value; percentages allowed. Usage notes use object-position property adjust positioning embedded object within element's frame. Note: object-fit property effect <embed> elements. Accessibility Use title attribute embed element label content people navigating assistive technology screen reader understand contains. title's value concisely describe embedded content. Without title, may able determine embedded content is. context shift confusing time-consuming, especially embed element contains interactive content like video audio. Examples <embed type=\"video/quicktime\" src=\"movie.mov\" width=\"640\" height=\"480\" title=\"Title video\" /> Technical summary | Content categories | Flow content, phrasing content, embedded content, interactive content, palpable content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | application , document , img , none , presentation | | DOM interface | HTMLEmbedElement | Specifications | Specification | |---| | HTML Standard # the-embed-element | Browser compatibility BCD tables load browser See also - elements used embedding content various types include <audio> ,<canvas> ,<iframe> ,<img> ,<math> ,<object> ,<svg> , and<video> . - Positioning sizing embedded content within frame: object-position andobject-fit"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fencedframe", "title": "<fencedframe>: The Fenced Frame element - HTML: HyperText Markup Language | MDN", "text": "<fencedframe>: Fenced Frame element Limited availability feature Baseline work widely-used browsers. Experimental: experimental technology Check Browser compatibility table carefully using production. <fencedframe> HTML element represents nested browsing context, embedding another HTML page current one. <fencedframe> similar <iframe> elements form function, except that: - Communication restricted <fencedframe> content embedding site. - <fencedframe> access cross-site data, specific set controlled circumstances preserve user privacy. - <fencedframe> cannot manipulated data accessed via regular scripting (for example reading setting source URL).<fencedframe> content embedded via specific APIs. - <fencedframe> cannot access embedding context's DOM, embedding context access the<fencedframe> 's DOM. <fencedframe> element type <iframe> native privacy features built in. addresses shortcomings <iframe> reliance third-party cookies privacy risks. See Fenced frame API details. Attributes element includes global attributes. allow Experimental- Specifies Permissions Policy <fencedframe> , defines features available the<fencedframe> based origin request. See Permissions policies available fenced frames details features controlled via policy set fenced frame. height Experimental- unitless integer representing height fenced frame CSS pixels. default 150 . width Experimental- unitless integer representing width fenced frame CSS pixels. default 300 . Permissions policies available fenced frames Permissions delegated top-level context fenced frame allowing denying features could used communication channel, constitute privacy threat. result, standard web features availability controlled via Permissions Policy (for example, camera geolocation ) available within fenced frames. features enabled policy inside fenced frames specific features designed used inside fenced frames: - Protected Audience API attribution-reporting private-aggregation shared-storage shared-storage-select-url - Shared Storage API attribution-reporting private-aggregation shared-storage shared-storage-select-url Currently always enabled inside fenced frames. future, ones enabled controllable using <fencedframe> allow attribute. Blocking privacy sandbox features manner also block fenced frame loading \u2014 communication channel all. Focusing across fenced frame boundaries ability document's active focus moved across fenced frame boundaries (i.e. element outside fenced frame one inside, vice versa) limited. User-initiated actions click tab so, fingerprinting risk there. However, trying traverse boundary via API call HTMLElement.focus() prohibited \u2014 malicious script could use series calls leak inferred information across boundary. Positioning scaling replaced element, <fencedframe> allows position embedded document within box adjusted using object-position property. Note: object-fit property effect <fencedframe> elements. size embedded content may set internal contentWidth contentHeight properties <fencedframe> 's config object. cases, changing width height <fencedframe> change size embedded container page, document inside container visually scaled fit. reported width height embedded document (i.e. Window.innerWidth Window.innerHeight ) unchanged. Accessibility People navigating assistive technology, screen reader, use title attribute <fencedframe> label content. title's value concisely describe embedded content: <fencedframe title=\"Advertisement new Log. Blammo!\" width=\"640\" height=\"320\"></fencedframe> Without title, navigate <fencedframe> determine embedded content is. context shift confusing time-consuming, especially pages multiple <fencedframe> and/or embeds contain interactive content like video audio. Examples set content shown <fencedframe> , utilizing API (such Protected Audience Shared Storage) generates FencedFrameConfig object, set value <fencedframe> 's config property. following example gets FencedFrameConfig Protected Audience API's ad auction, used display winning ad <fencedframe> : <fencedframe width=\"640\" height=\"320\"></fencedframe> const frameConfig = await navigator.runAdAuction({ // ...auction configuration resolveToConfig: true, }); const frame = document.querySelector(\"fencedframe\"); frame.config = frameConfig; Technical summary | Content categories | Flow content, phrasing content, embedded content, interactive content, palpable content. | |---|---| | Permitted content | None. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | application , document , img , none , presentation | | DOM interface | HTMLFencedFrameElement | Specifications | Specification | |---| | Fenced Frame # the-fencedframe-element | Browser compatibility BCD tables load browser See also - Fenced Frame API - Fenced frames developers.google.com - Privacy Sandbox developers.google.com"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset", "title": "<fieldset>: The Field Set element - HTML: HyperText Markup Language | MDN", "text": "<fieldset>: Field Set element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <fieldset> HTML element used group several controls well labels (<label> ) within web form. Try example shows, <fieldset> element provides grouping part HTML form, nested <legend> element providing caption <fieldset> . takes attributes, notable form , contain id <form> page, allowing make <fieldset> part <form> even nested inside it, disabled , allows disable <fieldset> contents one go. Attributes element includes global attributes. disabled - Boolean attribute set, form controls descendants <fieldset> , disabled, meaning editable submitted along the<form> . receive browsing events, like mouse clicks focus-related events. default browsers display controls grayed out. Note form elements inside the<legend> element disabled. form - attribute takes value id attribute a<form> element want the<fieldset> part of, even inside form. Please note usage confusing \u2014 want the<input> elements inside the<fieldset> associated form, need use theform attribute directly elements. check elements associated form via JavaScript, usingHTMLFormElement.elements . name - name associated group. Note: caption fieldset given first <legend> element nested inside it. Styling CSS several special styling considerations <fieldset> . display value block default, establishes block formatting context. <fieldset> styled inline-level display value, behave inline-block , otherwise behave block . default 2px groove border surrounding contents, small amount default padding. element min-inline-size: min-content default. <legend> present, placed block-start border. <legend> shrink-wraps, also establishes formatting context. display value blockified. (For example, display: inline behaves block .) anonymous box holding contents <fieldset> , inherits certain properties <fieldset> . <fieldset> styled display: grid display: inline-grid , anonymous box grid formatting context. <fieldset> styled display: flex display: inline-flex , anonymous box flex formatting context. Otherwise, establishes block formatting context. feel free style <fieldset> <legend> way want suit page design. Examples Basic fieldset example includes <fieldset> <legend> , single control inside it. <form action=\"#\"> <fieldset> <legend>Do agree?</legend> <input type=\"checkbox\" id=\"chbx\" name=\"agree\" value=\"Yes!\" /> <label for=\"chbx\">I agree</label> </fieldset> </form> Result Disabled fieldset example shows disabled <fieldset> two controls inside it. Note controls disabled due inside disabled <fieldset> . <form action=\"#\"> <fieldset disabled> <legend>Disabled login fieldset</legend> <div> <label for=\"name\">Name: </label> <input type=\"text\" id=\"name\" value=\"Chris\" /> </div> <div> <label for=\"pwd\">Archetype: </label> <input type=\"password\" id=\"pwd\" value=\"Wookie\" /> </div> </fieldset> </form> Result Technical summary | Content categories | Flow content, sectioning root, listed, form-associated element, palpable content. | |---|---| | Permitted content | optional <legend> element, followed flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | group | | Permitted ARIA roles | radiogroup , presentation , none | | DOM interface | HTMLFieldSetElement | Specifications | Specification | |---| | HTML Standard # the-fieldset-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption", "title": "<figcaption>: The Figure Caption element - HTML: HyperText Markup Language | MDN", "text": "<figcaption>: Figure Caption element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <figcaption> HTML element represents caption legend describing rest contents parent <figure> element, providing <figure> accessible description. Try Attributes element includes global attributes. Examples Please see <figure> page examples <figcaption> . Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | <figure> element; <figcaption> element must first last child. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | group , none , presentation | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-figcaption-element | Browser compatibility BCD tables load browser See also - <figure> element."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure", "title": "<figure>: The Figure with Optional Caption element - HTML: HyperText Markup Language | MDN", "text": "<figure>: Figure Optional Caption element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <figure> HTML element represents self-contained content, potentially optional caption, specified using <figcaption> element. figure, caption, contents referenced single unit. Try Attributes element includes global attributes. Usage notes - Usually <figure> image, illustration, diagram, code snippet, etc., referenced main flow document, moved another part document appendix without affecting main flow. - caption associated <figure> element inserting a<figcaption> inside (as first last child). first<figcaption> element found figure presented figure's caption. - <figcaption> provides accessible name parent<figure> . Examples Images html <!-- image --> <figure> <img src=\"favicon-192x192.png\" alt=\"The beautiful MDN logo.\" /> </figure> <!-- Image caption --> <figure> <img src=\"favicon-192x192.png\" alt=\"The beautiful MDN logo.\" /> <figcaption>MDN Logo</figcaption> </figure> Result Code snippets html <figure> <figcaption>Get browser details using <code>navigator</code>.</figcaption> <pre> function NavigatorExample() { var txt; txt = \"Browser CodeName: \" + navigator.appCodeName + \"; \"; txt+= \"Browser Name: \" + navigator.appName + \"; \"; txt+= \"Browser Version: \" + navigator.appVersion + \"; \"; txt+= \"Cookies Enabled: \" + navigator.cookieEnabled + \"; \"; txt+= \"Platform: \" + navigator.platform + \"; \"; txt+= \"User-agent header: \" + navigator.userAgent + \"; \"; console.log(\"NavigatorExample\", txt); } </pre> </figure> Result Quotations html <figure> <figcaption><b>Edsger Dijkstra:</b></figcaption> <blockquote> debugging process removing software bugs, programming must process putting in. </blockquote> </figure> Result Poems html <figure> <p style=\"white-space:pre\"> Bid discourse, enchant thine ear, like fairy trip upon green, Or, like nymph, long dishevelled hair, Dance sands, yet footing seen: Love spirit compact fire, gross sink, light, aspire. </p> <figcaption><cite>Venus Adonis</cite>, William Shakespeare</figcaption> </figure> Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | <figcaption> element, followed flow content; flow content followed <figcaption> element; flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts Flow content. | | Implicit ARIA role | figure | | Permitted ARIA roles | figcaption descendant: any, otherwise permitted roles | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-figure-element | Browser compatibility BCD tables load browser See also - <figcaption> element."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font", "title": "<font> - HTML: HyperText Markup Language | MDN", "text": "<font> Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <font> HTML element defines font size, color face content. Warning: use element. Use CSS Fonts properties style text. Attributes Like HTML elements, element supports global attributes. color Deprecated- attribute sets text color using either named color color specified hexadecimal #RRGGBB format. face Deprecated- attribute contains comma-separated list one font names. document text default style rendered first font face client's browser supports. font listed installed local system, browser typically defaults proportional fixed-width font system. size Deprecated- attribute specifies font size either numeric relative value. Numeric values range 1 to7 with1 smallest and3 default. defined using relative value, like+2 or-3 , sets relative to3 , default value. DOM interface element implements HTMLFontElement interface. Specifications | Specification | |---| | HTML Standard # font | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer", "title": "<footer>: The Footer element - HTML: HyperText Markup Language | MDN", "text": "<footer>: Footer element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <footer> HTML element represents footer nearest ancestor sectioning content sectioning root element. <footer> typically contains information author section, copyright data links related documents. Try Attributes element includes global attributes. Usage notes - Enclose information author <address> element included the<footer> element. - nearest ancestor sectioning content sectioning root element body element footer applies whole page. - <footer> element sectioning content therefore introduce new section outline. Accessibility Prior release Safari 13, contentinfo landmark role properly exposed VoiceOver. needing support legacy Safari browsers, add role=\"contentinfo\" footer element ensure landmark properly exposed. Examples html <body> <h3>FIFA World Cup top goalscorers</h3> <ol> <li>Miroslav Klose, 16</li> <li>Ronaldo Naz\u00e1rio, 15</li> <li>Gerd M\u00fcller, 14</li> </ol> <footer> <small> Copyright \u00a9 2023 Football History Archives. Rights Reserved. </small> </footer> </body> css footer { text-align: center; padding: 5px; background-color: #abbaba; color: #000; } Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Flow content, <footer> <header> descendants. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. Note <footer> element must descendant <address> , <header> another <footer> element. | | Implicit ARIA role | contentinfo, generic descendant article, aside, main, nav section element, element role=article , complementary , main , navigation region | | Permitted ARIA roles | group , presentation none | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-footer-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form", "title": "<form>: The Form element - HTML: HyperText Markup Language | MDN", "text": "<form>: Form element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <form> HTML element represents document section containing interactive controls submitting information. Try possible use :valid :invalid CSS pseudo-classes style <form> element based whether elements inside form valid. Attributes element includes global attributes. accept Deprecated- Comma-separated content types server accepts. Note: attribute deprecated used. Instead, use accept attribute on<input type=file> elements. accept-charset - character encoding accepted server. specification allows single case-insensitive value \"UTF-8\" , reflecting ubiquity encoding (historically multiple character encodings could specified comma-separated space-separated list). autocapitalize - Controls whether inputted text automatically capitalized and, so, manner. See autocapitalize global attribute page information. autocomplete - Indicates whether input elements default values automatically completed browser. autocomplete attributes form elements override on<form> . Possible values:off : browser may automatically complete entries. (Browsers tend ignore suspected login forms; see Managing autofill login fields.)on : browser may automatically complete entries. name - name form. value must empty string, must unique among form elements forms collection in, any. rel - Controls annotations kinds links form creates. Annotations include external ,nofollow ,opener ,noopener , andnoreferrer . Link types includehelp ,prev ,next ,search , andlicense . Therel value space-separated list enumerated values. Attributes form submission following attributes control behavior form submission. action - URL processes form submission. value overridden formaction attribute a<button> ,<input type=\"submit\"> , or<input type=\"image\"> element. attribute ignored whenmethod=\"dialog\" set. enctype - value method attribute ispost ,enctype MIME type form submission. Possible values:application/x-www-form-urlencoded : default value.multipart/form-data : Use form contains<input> elements withtype=file .text/plain : Useful debugging purposes. value overridden formenctype attributes on<button> ,<input type=\"submit\"> , or<input type=\"image\"> elements. method - HTTP method submit form with. allowed methods/values (case insensitive): post : ThePOST method; form data sent request body.get (default): TheGET ; form data appended theaction URL a? separator. Use method form side effects.dialog : form inside a<dialog> , closes dialog causes asubmit event fired submission, without submitting data clearing form. value overridden formmethod attributes on<button> ,<input type=\"submit\"> , or<input type=\"image\"> elements. novalidate - Boolean attribute indicates form validated submitted. attribute set (and therefore form validated), overridden formnovalidate attribute a<button> ,<input type=\"submit\"> , or<input type=\"image\"> element belonging form. target - Indicates display response submitting form. name/keyword browsing context (for example, tab, window, iframe). following keywords special meanings: _self (default): Load browsing context current one._blank : Load new unnamed browsing context. provides behavior settingrel=\"noopener\" setwindow.opener ._parent : Load parent browsing context current one. parent, behaves as_self ._top : Load top-level browsing context (i.e., browsing context ancestor current one parent). parent, behaves as_self ._unfencedTop : Load response form inside embedded fenced frame top-level frame (i.e., traversing beyond root fenced frame, unlike reserved destinations). available inside fenced frames. value overridden formtarget attribute a<button> ,<input type=\"submit\"> , or<input type=\"image\"> element. Examples <!-- Form send GET request current URL --> <form method=\"get\"> <label> Name: <input name=\"submitted-name\" autocomplete=\"name\" /> </label> <button>Save</button> </form> <!-- Form send POST request current URL --> <form method=\"post\"> <label> Name: <input name=\"submitted-name\" autocomplete=\"name\" /> </label> <button>Save</button> </form> <!-- Form fieldset, legend, label --> <form method=\"post\"> <fieldset> <legend>Do agree terms?</legend> <label><input type=\"radio\" name=\"radio\" value=\"yes\" /> Yes</label> <label><input type=\"radio\" name=\"radio\" value=\"no\" /> No</label> </fieldset> </form> Result Technical summary | Content categories | Flow content, palpable content | |---|---| | Permitted content | Flow content, containing <form> elements | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content | | Implicit ARIA role | form | | Permitted ARIA roles | search , none presentation | | DOM interface | HTMLFormElement | Specifications | Specification | |---| | HTML Standard # the-form-element | Browser compatibility BCD tables load browser See also - HTML forms guide - elements used creating forms: <button> ,<datalist> ,<fieldset> ,<input> ,<label> ,<legend> ,<meter> ,<optgroup> ,<option> ,<output> ,<progress> ,<select> ,<textarea> . - Getting list elements form: HTMLFormElement.elements - ARIA: Form role - ARIA: Search role"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame", "title": "<frame> - HTML: HyperText Markup Language | MDN", "text": "<frame> Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <frame> HTML element defines particular area another HTML document displayed. frame used within <frameset> . Using <frame> element encouraged certain disadvantages performance problems lack accessibility users screen readers. Instead <frame> element, <iframe> may preferred. Attributes Like HTML elements, element supports global attributes. src Deprecated- attribute specifies document displayed frame. name Deprecated- attribute used labeling frames. Without labeling, every link open frame \u2013 closest parent frame. See target attribute information. noresize Deprecated- attribute prevents resizing frames users. scrolling Deprecated- attribute defines existence scrollbar. attribute used, browser adds scrollbar necessary. two choices: \"yes\" forcing scrollbar even necessary \"no\" forcing scrollbar even necessary. marginheight Deprecated- attribute defines height margin frames. marginwidth Deprecated- attribute defines width margin frames. frameborder Deprecated- attribute allows specify frame's border. Example frameset document frameset document <frameset> element instead <body> element. <frame> elements placed within <frameset> . <!doctype html> <html lang=\"en-US\"> <head> <!-- Document metadata goes --> </head> <frameset cols=\"400, 500\"> <frame src=\"https://developer.mozilla.org/en/HTML/Element/iframe\" /> <frame src=\"https://developer.mozilla.org/en/HTML/Element/frame\" /> </frameset> </html> want embed another HTML page <body> document, use <iframe> element. Specifications | Specification | |---| | HTML Standard # frame | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset", "title": "<frameset> - HTML: HyperText Markup Language | MDN", "text": "<frameset> Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <frameset> HTML element used contain <frame> elements. Note: use frames discouraged favor using <iframe> , element typically used modern websites. Attributes Like HTML elements, element supports global attributes. cols Deprecated- attribute specifies number size horizontal spaces frameset. rows Deprecated- attribute specifies number size vertical spaces frameset. Example frameset document frameset document <frameset> element instead <body> element. <frame> elements placed within <frameset> . <!doctype html> <html lang=\"en-US\"> <head> <!-- Document metadata goes --> </head> <frameset cols=\"50%, 50%\"> <frame src=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\" /> <frame src=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame\" /> </frameset> </html> want embed another HTML page <body> document, use <iframe> element. Specifications | Specification | |---| | HTML Standard # frameset | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head", "title": "<head>: The Document Metadata (Header) element - HTML: HyperText Markup Language | MDN", "text": "<head>: Document Metadata (Header) element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <head> HTML element contains machine-readable information (metadata) document, like title, scripts, style sheets. one <head> element HTML document. Note: <head> primarily holds information machine processing, human-readability. human-visible information, like top-level headings listed authors, see <header> element. Attributes element includes global attributes. profile Deprecated- URIs one metadata profiles, separated white space. Examples <!doctype html> <html lang=\"en-US\"> <head> <meta charset=\"UTF-8\" /> <meta name=\"viewport\" content=\"width=device-width\" /> <title>Document title</title> </head> </html> Technical summary | Content categories | None. | |---|---| | Permitted content | document Otherwise, one elements metadata content exactly one | | Tag omission | start tag may omitted first thing inside <head> element element.The end tag may omitted first thing following <head> element space character comment. | | Permitted parents | <html> element, first child. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLHeadElement | Specifications | Specification | |---| | HTML Standard # the-head-element | Browser compatibility BCD tables load browser See also - Elements used inside <head> :"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header", "title": "<header>: The Header element - HTML: HyperText Markup Language | MDN", "text": "<header>: Header element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <header> HTML element represents introductory content, typically group introductory navigational aids. may contain heading elements also logo, search form, author name, elements. Try Usage notes <header> element identical meaning site-wide banner landmark role, unless nested within sectioning content. Then, <header> element landmark. <header> element define global site header, described banner accessibility tree. usually includes logo, company name, search feature, possibly global navigation slogan. generally located top page. Otherwise, section accessibility tree, usually contains surrounding section's heading (an h1 \u2013 h6 element) optional subheading, required. Historical Usage <header> element originally existed beginning HTML headings. seen first website. point, headings became <h1> <h6> , allowing <header> free fill different role. Attributes element includes global attributes. Accessibility Examples Page Header <header> <h1>Main Page Title</h1> <img src=\"mdn-logo-sm.png\" alt=\"MDN logo\" /> </header> Result Article Header <article> <header> <h2>The Planet Earth</h2> <p> Posted Wednesday, <time datetime=\"2017-10-04\">4 October 2017</time> Jane Smith </p> </header> <p> live planet that's blue green, many things still unseen. </p> <p><a href=\"https://example.com/the-planet-earth/\">Continue reading\u2026</a></p> </article> Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Flow content, <header> <footer> descendant. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. Note <header> element must descendant <address> , <footer> another <header> element. | | Implicit ARIA role | banner, generic descendant article , aside , main , nav section element, element role=article , complementary , main , navigation region | | Permitted ARIA roles | group , presentation none | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-header-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup", "title": "<hgroup>: The Heading Group element - HTML: HyperText Markup Language | MDN", "text": "<hgroup>: Heading Group element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <hgroup> HTML element represents heading related content. groups single <h1>\u2013<h6> element one <p> . Try Attributes element includes global attributes. Usage notes <hgroup> element allows grouping heading secondary content, subheadings, alternative title, tagline. types content represented <p> element within <hgroup> . <hgroup> impact document outline web page. Rather, single allowed heading within <hgroup> contributes document outline. Examples html <!doctype html> <title>HTML Standard</title> <body> <hgroup id=\"document-title\"> <h1>HTML: Living Standard</h1> <p>Last Updated 12 July 2022</p> </hgroup> <p>Some intro document.</p> <h2>Table contents</h2> <ol id=\"toc\"> \u2026 </ol> <h2>First section</h2> <p>Some intro first section.</p> </body> Result Technical summary | Content categories | Flow content, heading content, palpable content. | |---|---| | Permitted content | Zero <p> elements, followed one h1, h2, h3, h4, h5, h6 element, followed zero <p> elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | group | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-hgroup-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr", "title": "<hr>: The Thematic Break (Horizontal Rule) element - HTML: HyperText Markup Language | MDN", "text": "<hr>: Thematic Break (Horizontal Rule) element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <hr> HTML element represents thematic break paragraph-level elements: example, change scene story, shift topic within section. Try Historically, presented horizontal rule line. may still displayed horizontal rule visual browsers, element defined semantic terms, rather presentational terms, wish draw horizontal line, using appropriate CSS. Attributes element's attributes include global attributes. align Deprecated Non-standard- Sets alignment rule page. value specified, default value left . color Deprecated Non-standard- Sets color rule color name hexadecimal value. noshade Deprecated Non-standard- Sets rule shading. size Deprecated Non-standard- Sets height, pixels, rule. width Deprecated Non-standard- Sets length rule page pixel percentage value. Example HTML <p> first paragraph text. first paragraph text. first paragraph text. first paragraph text. </p> <hr /> <p> second paragraph text. second paragraph text. second paragraph text. second paragraph text. </p> Result Technical summary | Content categories | Flow content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | | | Implicit ARIA role | separator | | Permitted ARIA roles | presentation none | | DOM interface | HTMLHRElement | Specifications | Specification | |---| | HTML Standard # the-hr-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html", "title": "<html>: The HTML Document / Root element - HTML: HyperText Markup Language | MDN", "text": "<html>: HTML Document / Root element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <html> HTML element represents root (top-level element) HTML document, also referred root element. elements must descendants element. one <html> element document. Attributes element includes global attributes. version Deprecated- Specifies version HTML Document Type Definition governs current document. attribute needed, redundant version information document type declaration. xmlns - Specifies XML Namespace document. Default value \"http://www.w3.org/1999/xhtml\" . required documents parsed XML parsers, optional text/html documents. Accessibility HTML require authors specify <html> element start ending tags, important authors allow specify lang webpage. Providing lang attribute valid language tag according RFC 5646: Tags Identifying Languages (also known BCP 47) <html> element help screen reading technology determine proper language announce. identifying language tag describe language used majority content page. Without it, screen readers typically default operating system's set language, may cause mispronunciations. Including valid lang declaration <html> element also ensures important metadata contained page's <head> , page's <title> , also announced properly. Example <!doctype html> <html lang=\"en\"> <head> <!-- \u2026 --> </head> <body> <!-- \u2026 --> </body> </html> Technical summary | Content categories | None. | |---|---| | Permitted content | One <head> element, followed one <body> element. | | Tag omission | start tag may omitted first thing inside <html> element comment.The end tag may omitted <html> element immediately followed comment. | | Permitted parents | None. root element document. | | Implicit ARIA role | document | | Permitted ARIA roles | role permitted | | DOM interface | HTMLHtmlElement | Specifications | Specification | |---| | HTML Standard # the-html-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i", "title": "<i>: The Idiomatic Text element - HTML: HyperText Markup Language | MDN", "text": "<i>: Idiomatic Text element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <i> HTML element represents range text set normal text reason, idiomatic text, technical terms, taxonomical designations, among others. Historically, presented using italicized type, original source <i> naming element. Try Attributes element includes global attributes. Usage notes - Use <i> element text set normal prose readability reasons. would range text different semantic meaning surrounding text. Among use cases the<i> element spans text representing different quality mode text, as:- Alternative voice mood - Taxonomic designations (such genus species \"Homo sapiens\") - Idiomatic terms another language (such \"et cetera\"); include lang attribute identify language - Technical terms - Transliterations - Thoughts (such \"She wondered, writer talking about, anyway?\") - Ship vessel names Western writing systems (such \"They searched docks Empress Galaxy, ship assigned.\") - earlier versions HTML specification, <i> element merely presentational element used display text italics, much like the<b> element used display text bold letters. longer true, tags define semantics rather typographic appearance. browser typically still display contents the<i> element italic type, is, definition, longer required so. display text italic type, authors use CSSfont-style property. - sure text question actually appropriately marked another element. Examples example demonstrates using <i> element mark text another language. <p> Latin phrase <i lang=\"la\">Veni, vidi, vici</i> often mentioned music, art, literature. </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-i-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe", "title": "<iframe>: The Inline Frame element - HTML: HyperText Markup Language | MDN", "text": "<iframe>: Inline Frame element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <iframe> HTML element represents nested browsing context, embedding another HTML page current one. Try embedded browsing context document allows URL navigations. navigations embedded browsing context linearized session history topmost browsing context. browsing context embeds others called parent browsing context. topmost browsing context \u2014 one parent \u2014 usually browser window, represented Window object. Warning: browsing context complete document environment, every <iframe> page requires increased memory computing resources. theoretically use many <iframe> like, check performance problems. Attributes element includes global attributes. allow - Specifies Permissions Policy <iframe> . policy defines features available the<iframe> (for example, access microphone, camera, battery, web-share, etc.) based origin request.See iframes Permissions-Policy topic examples.Note: Permissions Policy specified allow attribute implements restriction top policy specified thePermissions-Policy header. replace it. allowfullscreen - Set true the<iframe> activate fullscreen mode calling therequestFullscreen() method.Note: attribute considered legacy attribute redefined allow=\"fullscreen\" . allowpaymentrequest Deprecated Non-standard- Set true cross-origin<iframe> allowed invoke Payment Request API.Note: attribute considered legacy attribute redefined allow=\"payment\" . browsingtopics Experimental Non-standard- boolean attribute that, present, specifies selected topics current user sent request <iframe> 's source. See Using Topics API details. credentialless Experimental- Set true make the<iframe> credentialless, meaning content loaded new, ephemeral context. access network, cookies, storage data associated origin. uses new context local top-level document lifetime. return, theCross-Origin-Embedder-Policy (COEP) embedding rules lifted, documents COEP set embed third-party documents not. See IFrame credentialless details. csp Experimental- Content Security Policy enforced embedded resource. See HTMLIFrameElement.csp details. height - height frame CSS pixels. Default 150 . loading - Indicates browser load iframe: eager - Load iframe immediately page load (this default value). lazy - Defer loading iframe reaches calculated distance visual viewport, defined browser. intent avoid using network storage bandwidth required fetch frame browser reasonably certain needed. improves performance cost typical use cases, particular reducing initial page load times. Note: Loading deferred JavaScript enabled. anti-tracking measure. name - targetable name embedded browsing context. used target attribute the<a> ,<form> , or<base> elements; theformtarget attribute the<input> or<button> elements; thewindowName parameter thewindow.open() method. referrerpolicy - Indicates referrer send fetching frame's resource: no-referrer - Referer header sent. no-referrer-when-downgrade - Referer header sent origins without TLS (HTTPS). origin - sent referrer limited origin referring page: scheme, host, port. origin-when-cross-origin - referrer sent origins limited scheme, host, port. Navigations origin still include path. same-origin - referrer sent origin, cross-origin requests contain referrer information. strict-origin - send origin document referrer protocol security level stays (HTTPS\u2192HTTPS), send less secure destination (HTTPS\u2192HTTP). strict-origin-when-cross-origin (default)- Send full URL performing same-origin request, send origin protocol security level stays (HTTPS\u2192HTTPS), send header less secure destination (HTTPS\u2192HTTP). unsafe-url - referrer include origin path (but fragment, password, username). value unsafe, leaks origins paths TLS-protected resources insecure origins. sandbox - Controls restrictions applied content embedded <iframe> . value attribute either empty apply restrictions, space-separated tokens lift particular restrictions:allow-downloads - Allows downloading files <a> or<area> element download attribute, well navigation leads download file. works regardless whether user clicked link, JS code initiated without user interaction. allow-forms - Allows page submit forms. keyword used, form displayed normal, submitting trigger input validation, send data web server, close dialog. allow-modals - Allows page open modal windows Window.alert() ,Window.confirm() ,Window.print() andWindow.prompt() , opening a<dialog> allowed regardless keyword. also allows page receiveBeforeUnloadEvent event. allow-orientation-lock - Lets resource lock screen orientation. allow-pointer-lock - Allows page use Pointer Lock API. allow-popups - Allows popups (like Window.open() ,target=\"_blank\" ,Window.showModalDialog() ). keyword used, functionality silently fail. allow-popups-to-escape-sandbox - Allows sandboxed document open new browsing context without forcing sandboxing flags upon it. allow, example, third-party advertisement safely sandboxed without forcing restrictions upon page ad links to. flag included, redirected page, popup window, new tab subject sandbox restrictions originating <iframe> . allow-presentation - Allows embedders control whether iframe start presentation session. allow-same-origin - token used, resource treated special origin always fails same-origin policy (potentially preventing access data storage/cookies JavaScript APIs). allow-scripts - Allows page run scripts (but create pop-up windows). keyword used, operation allowed. allow-storage-access-by-user-activation Experimental- Allows document loaded <iframe> use Storage Access API request access unpartitioned cookies. - Lets resource navigate top-level browsing context (the one named _top ). - Lets resource navigate top-level browsing context, initiated user gesture. - Allows navigations non- http protocols built browser registered website. feature also activated byallow-popups orallow-top-navigation keyword. Note: - embedded document origin embedding page, strongly discouraged use allow-scripts andallow-same-origin , lets embedded document remove thesandbox attribute \u2014 making secure using thesandbox attribute all. - Sandboxing useless attacker display content outside sandboxed iframe \u2014 viewer opens frame new tab. content also served separate origin limit potential damage. Note: redirecting user, opening popup window, opening new tab embedded page within <iframe> thesandbox attribute, new browsing context subject samesandbox restrictions. create issues \u2014 example, page embedded within an<iframe> without asandbox=\"allow-forms\" orsandbox=\"allow-popups-to-escape-sandbox\" attribute set opens new site separate tab, form submission new browsing context silently fail. src - URL page embed. Use value about:blank embed empty page conforms same-origin policy. Also note programmatically removing an<iframe> 's src attribute (e.g. viaElement.removeAttribute() ) causesabout:blank loaded frame Firefox (from version 65), Chromium-based browsers, Safari/iOS.Note: about:blank page uses embedding document's URL base URL resolving relative URLs, anchor links. srcdoc - Inline HTML embed, overriding src attribute. content follow syntax full HTML document, includes doctype directive,<html> ,<body> tags, etc., although omitted, leaving body content. doc haveabout:srcdoc location. browser support thesrcdoc attribute, fall back URL thesrc attribute.Note: about:srcdoc page uses embedding document's URL base URL resolving relative URLs, anchor links. width - width frame CSS pixels. Default 300 . Deprecated attributes attributes deprecated may longer supported user agents. use new content, try remove existing content. align Deprecated- alignment element respect surrounding context. frameborder Deprecated- value 1 (the default) draws border around frame. value0 removes border around frame, instead use CSS propertyborder control<iframe> borders. longdesc Deprecated- URL long description frame's content. Due widespread misuse, helpful non-visual browsers. marginheight Deprecated- amount space pixels frame's content top bottom borders. marginwidth Deprecated- amount space pixels frame's content left right borders. scrolling Deprecated- Indicates browser provide scrollbar frame: Scripting Inline frames, like <frame> elements, included window.frames pseudo-array. DOM HTMLIFrameElement object, scripts access window object framed resource via contentWindow property. contentDocument property refers document inside <iframe> , contentWindow.document . inside frame, script get reference parent window window.parent . Script access frame's content subject same-origin policy. Scripts cannot access properties window objects script loaded different origin, including scripts inside frame accessing frame's parent. Cross-origin communication achieved using Window.postMessage() . Positioning scaling replaced element, <iframe> allows position embedded document within box adjusted using object-position property. Note: object-fit property effect <iframe> elements. error load event behavior Accessibility People navigating assistive technology screen reader use title attribute <iframe> label content. title's value concisely describe embedded content: <iframe title=\"Wikipedia page Avocados\" src=\"https://en.wikipedia.org/wiki/Avocado\"></iframe> Without title, navigate <iframe> determine embedded content is. context shift confusing time-consuming, especially pages multiple <iframe> and/or embeds contain interactive content like video audio. Examples basic <iframe> example embeds page https://example.org iframe. common use case iframes: embed content another site. example, live sample itself, try example top, <iframe> embeds content another MDN site. HTML <iframe src=\"https://example.org\" title=\"iframe Example 1\" width=\"400\" height=\"300\"> </iframe> Result Embedding source code <iframe> example directly renders source code iframe. used technique prevent script injection displaying user-generated content, combined sandbox attribute. Note using srcdoc , relative URLs embedded content resolved relative URL embedding page. want use anchor links point places embedded content, need explicitly specify about:srcdoc base URL. HTML <article> <footer>Nine minutes ago, <i>jc</i> wrote:</footer> <iframe sandbox srcdoc=\"<p>There two ways use <code>iframe</code> element:</p> <ol> <li><a href=\"about:srcdoc#embed_another\">To embed content another page</a></li> <li><a href=\"about:srcdoc#embed_user\">To embed user-generated content</a></li> </ol> <h2 id=\"embed_another\">Embedding content another page</h2> <p>Use <code>src</code> attribute specify URL page embed:</p> <pre><code>&lt;iframe src=\"https://example.org\"&gt;&lt;/iframe&gt;</code></pre> <h2 id=\"embed_user\">Embedding user-generated content</h2> <p>Use <code>srcdoc</code> attribute specify content embed. post already example!</p> \" width=\"500\" height=\"250\" ></iframe> </article> Here's write escape sequences using srcdoc : - First, write HTML out, escaping anything would escape normal HTML document (such < ,> ,& , etc.). < and< represent exact character thesrcdoc attribute. Therefore, make actual escape sequence HTML document, replace ampersands (& ) with& . example,< becomes&lt; , and& becomes&amp; .- Replace double quotes ( \" ) with\" prevent thesrcdoc attribute prematurely terminated (if use' instead, replace' with' instead). step happens previous one, so\" generated step become&quot; . Result Technical summary | Content categories | Flow content, phrasing content, embedded content, interactive content, palpable content. | |---|---| | Permitted content | None. | | Tag omission | None, starting ending tags mandatory. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | application , document , img , none , presentation | | DOM interface | HTMLIFrameElement | Specifications | Specification | |---| | HTML Standard # the-iframe-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img", "title": "<img>: The Image Embed element - HTML: HyperText Markup Language | MDN", "text": "<img>: Image Embed element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <img> HTML element embeds image document. Try example shows usage <img> element: - src attribute required, contains path image want embed. - alt attribute holds textual replacement image, mandatory incredibly useful accessibility \u2014 screen readers read attribute value users know image means. Alt text also displayed page image can't loaded reason: example, network errors, content blocking, link rot. many attributes achieve various purposes: - Referrer/CORS control security privacy: see crossorigin andreferrerpolicy . - Use width andheight set intrinsic size image, allowing take space loads, mitigate content layout shifts. - Responsive image hints sizes andsrcset (see also the<picture> element Responsive images tutorial). Supported image formats HTML standard list image formats support, user agents may support different formats. Note: Image file type format guide provides comprehensive information image formats web browser support. section summary! image file formats commonly used web are: - APNG (Animated Portable Network Graphics) \u2014 Good choice lossless animation sequences (GIF less performant) - AVIF (AV1 Image File Format) \u2014 Good choice images animated images due high performance. - GIF (Graphics Interchange Format) \u2014 Good choice simple images animations. - JPEG (Joint Photographic Expert Group image) \u2014 Good choice lossy compression still images (currently popular). - PNG (Portable Network Graphics) \u2014 Good choice lossless compression still images (slightly better quality JPEG). - SVG (Scalable Vector Graphics) \u2014 Vector image format. Use images must drawn accurately different sizes. - WebP (Web Picture format) \u2014 Excellent choice images animated images Formats like WebP AVIF recommended perform much better PNG, JPEG, GIF still animated images. SVG remains recommended format images must drawn accurately different sizes. Image loading errors error occurs loading rendering image, onerror event handler set error event, event handler get called. happen several situations, including: - src attribute empty (\"\" ) ornull . - src URL URL page user currently on. - image corrupted way prevents loaded. - image's metadata corrupted way impossible retrieve dimensions, dimensions specified <img> element's attributes. - image format supported user agent. Attributes element includes global attributes. alt - Defines text replace image page. Note: Browsers always display images. number situations browser might display images, as: - Non-visual browsers (such used people visual impairments) - user chooses display images (saving bandwidth, privacy reasons) - image invalid unsupported type cases, browser may replace image text element's alt attribute. reasons others, provide useful value foralt whenever possible.Setting attribute empty string ( alt=\"\" ) indicates image key part content (it's decoration tracking pixel), non-visual browsers may omit rendering. Visual browsers also hide broken image icon thealt attribute empty image failed display.This attribute also used copying pasting image text, saving linked image bookmark. attributionsrc Experimental- specifies want browser send Attribution-Reporting-Eligible header along image request.On server-side used trigger sending Attribution-Reporting-Register-Source orAttribution-Reporting-Register-Trigger header response, register image-based attribution source attribution trigger, respectively. response header sent back depends value theAttribution-Reporting-Eligible header triggered registration.The corresponding source trigger event set browser receives response containing image file. Note: See Attribution Reporting API details. two versions attribute set: - Boolean, i.e. attributionsrc name. specifies want theAttribution-Reporting-Eligible header sent server thesrc attribute points to. fine handling attribution source trigger registration server. registering attribution trigger property optional, boolean value used omitted. - Value containing one URLs, example: html<img src=\"image-file.png\" alt=\"My image file description\" attributionsrc=\"https://a.example/register-source https://b.example/register-source\" /> useful cases requested resource server control, want handle registering attribution source different server. case, specify one URLs value attributionsrc . resource request occurs theAttribution-Reporting-Eligible header sent URL(s) specified inattributionSrc addition resource origin. URLs respond aAttribution-Reporting-Register-Source orAttribution-Reporting-Register-Trigger header appropriate complete registration.Note: Specifying multiple URLs means multiple attribution sources registered feature. might example different campaigns trying measure success of, involve generating different reports different data. - Boolean, i.e. crossorigin - Indicates fetching image must done using CORS request. Image data CORS-enabled image returned CORS request reused <canvas> element without marked \"tainted\".If crossorigin attribute specified, non-CORS request sent (without theOrigin request header), browser marks image tainted restricts access image data, preventing usage in<canvas> elements.If crossorigin attribute specified, CORS request sent (with theOrigin request header); server opt allowing cross-origin access image data origin site (by sending anyAccess-Control-Allow-Origin response header, including site's origin anyAccess-Control-Allow-Origin response header send), browser blocks image loading, logs CORS error devtools console.Allowed values: anonymous - CORS request sent credentials omitted (that is, cookies, X.509 certificates, Authorization request header). use-credentials - CORS request sent credentials included (that is, cookies, X.509 certificates, Authorization request header). server opt sharing credentials origin site (by sending back theAccess-Control-Allow-Credentials: true response header), browser marks image tainted restricts access image data. attribute invalid value, browsers handle anonymous value used. See CORS settings attributes additional information. decoding - attribute provides hint browser whether perform image decoding along rendering DOM content single presentation step looks \"correct\" ( sync ), render present DOM content first decode image present later (async ). practice,async means next paint wait image decode.It often difficult perceive noticeable effect using decoding static<img> elements. They'll likely initially rendered empty images image files fetched (either network cache) handled independently anyway, \"syncing\" content updates less apparent. However, blocking rendering decoding happens, often quite small, measured \u2014 even difficult observe human eye. See image decoding attribute actually do? detailed analysis (tunetheweb.com, 2023).Using different decoding types result noticeable differences dynamically inserting<img> elements DOM via JavaScript \u2014 seeHTMLImageElement.decoding details.Allowed values: sync - Decode image synchronously along rendering DOM content, present everything together. async - Decode image asynchronously, rendering presenting DOM content. auto - preference decoding mode; browser decides best user. default value. elementtiming - Marks image observation PerformanceElementTiming API. value given becomes identifier observed image element. See also theelementtiming attribute page. fetchpriority - Provides hint relative priority use fetching image. Allowed values: high - Fetch image high priority relative images. low - Fetch image low priority relative images. auto - set preference fetch priority. default. used value invalid value set. See HTMLImageElement.fetchPriority information. height - intrinsic height image, pixels. Must integer without unit. Note: Including height andwidth enables aspect ratio image calculated browser prior image loaded. aspect ratio used reserve space needed display image, reducing even preventing layout shift image downloaded painted screen. Reducing layout shift major component good user experience web performance. ismap - Boolean attribute indicates image part server-side map. so, coordinates user clicked image sent server. loading - Indicates browser load image: eager - Loads image immediately, regardless whether image currently within visible viewport (this default value). lazy - Defers loading image reaches calculated distance viewport, defined browser. intent avoid network storage bandwidth needed handle image reasonably certain needed. generally improves performance content typical use cases. Note: Loading deferred JavaScript enabled. anti-tracking measure, user agent supported lazy loading scripting disabled, would still possible site track user's approximate scroll position throughout session, strategically placing images page's markup server track many images requested when. Note: Images loading set tolazy never loaded intersect visible part element, even loading would change unloaded images awidth andheight of0 . Puttingwidth andheight lazy-loaded images fixes issue best practice, recommended specification. also helps prevent layout shifts. referrerpolicy - string indicating referrer use fetching resource: no-referrer : TheReferer header sent.no-referrer-when-downgrade : TheReferer header sent origins without TLS (HTTPS).origin : sent referrer limited origin referring page: scheme, host, port.origin-when-cross-origin : referrer sent origins limited scheme, host, port. Navigations origin still include path.same-origin : referrer sent origin, cross-origin requests contain referrer information.strict-origin : send origin document referrer protocol security level stays (HTTPS\u2192HTTPS), send less secure destination (HTTPS\u2192HTTP).strict-origin-when-cross-origin (default): Send full URL performing same-origin request, send origin protocol security level stays (HTTPS\u2192HTTPS), send header less secure destination (HTTPS\u2192HTTP).unsafe-url : referrer include origin path (but fragment, password, username). value unsafe, leaks origins paths TLS-protected resources insecure origins. sizes - One strings separated commas, indicating set source sizes. source size consists of: - media condition. must omitted last item list. - source size value. Media Conditions describe properties viewport, image. example, (max-height: 500px) 1000px proposes use source 1000px width, viewport higher 500px.Source size values specify intended display size image. User agents use current source size select one sources supplied srcset attribute, sources described using width (w ) descriptors. selected source size affects intrinsic size image (the image's display size CSS styling applied). thesrcset attribute absent, contains values width descriptor, thesizes attribute effect. src - image URL. Mandatory <img> element. browsers supportingsrcset ,src treated like candidate image pixel density descriptor1x , unless image pixel density descriptor already defined insrcset , unlesssrcset containsw descriptors. srcset - One strings separated commas, indicating possible image sources user agent use. string composed of: - URL image - Optionally, whitespace followed one of: - width descriptor (a positive integer directly followed w ). width descriptor divided source size given thesizes attribute calculate effective pixel density. - pixel density descriptor (a positive floating point number directly followed x ). - width descriptor (a positive integer directly followed descriptor specified, source assigned default descriptor 1x .It incorrect mix width descriptors pixel density descriptors srcset attribute. Duplicate descriptors (for instance, two sources samesrcset described with2x ) also invalid.If srcset attribute uses width descriptors, thesizes attribute must also present, thesrcset ignored.The user agent selects available sources discretion. provides significant leeway tailor selection based things like user preferences bandwidth conditions. See Responsive images tutorial example. - width - intrinsic width image pixels. Must integer without unit. usemap - partial URL (starting # ) image map associated element. Deprecated attributes align Deprecated- Aligns image surrounding context. Use float and/orvertical-align CSS properties instead attribute. Allowed values: border Deprecated- width border around image. Use border CSS property instead. hspace Deprecated- number pixels white space left right image. Use margin CSS property instead. longdesc Deprecated- link detailed description image. Possible values URL element id .Note: attribute mentioned latest W3C version, HTML 5.2, removed WHATWG's HTML Living Standard. uncertain future; authors use WAI-ARIA alternative aria-describedby oraria-details . name Deprecated- name element. Use id attribute instead. vspace Deprecated- number pixels white space image. Use margin CSS property instead. Styling CSS <img> replaced element; display value inline default, default dimensions defined embedded image's intrinsic values, like inline-block . set properties like border /border-radius , padding /margin , width , height , etc. image. <img> baseline, images used inline formatting context vertical-align: baseline , bottom image placed text baseline. use object-position property position image within element's box, object-fit property adjust sizing image within box (for example, whether image fit box fill even clipping required). Depending type, image may intrinsic width height. image types, however, intrinsic dimensions unnecessary. SVG images, instance, intrinsic dimensions root <svg> element width height set it. Accessibility Authoring meaningful alternate descriptions alt attribute's value provide clear concise text replacement image's content. describe presence image file name image. alt attribute purposefully left image textual equivalent, consider alternate methods present image trying communicate. <img alt=\"image\" src=\"penguin.jpg\" /> <img alt=\"A Penguin beach.\" src=\"penguin.jpg\" /> important accessibility test read alt attribute content together preceding textual content see conveys meaning image. example, image preceded sentence \"On travels, saw cute little animal:\", example could read screen reader \"On travels, saw cute little animal: image\", make sense. example could read screen reader \"On travels, saw cute little animal: Penguin beach.\", make sense. images used trigger action, example, images nested inside <a> <button> element, consider describing triggered action inside alt attribute value. example, could write alt=\"next page\" instead alt=\"arrow right\" . could also consider adding optional description inside title attribute; may read screen readers requested user. alt attribute present image, screen readers may announce image's file name instead. confusing experience file name representative image's contents. Identifying SVG image Due VoiceOver bug, VoiceOver correctly announce SVG images images. Include role=\"img\" <img> elements SVG source files ensure assistive technologies correctly announce SVG image content. <img src=\"mdn.svg\" alt=\"MDN\" role=\"img\" /> title attribute title attribute acceptable substitute alt attribute. Additionally, avoid duplicating alt attribute's value title attribute declared image. may cause screen readers announce text twice, creating confusing experience. title attribute also used supplemental captioning information accompany image's alt description. image needs caption, use figure figcaption elements. value title attribute usually presented user tooltip, appears shortly cursor stops moving image. provide additional information user, assume user ever see it: user may keyboard touchscreen. information that's particularly important valuable user, present inline using one methods mentioned instead using title . Examples Alternative text following example embeds image page includes alternative text accessibility. <img src=\"favicon144.png\" alt=\"MDN\" /> Image link example builds upon previous one, showing turn image link. so, nest <img> tag inside <a> . make alternative text describe resource link pointing to, using text link instead. <a href=\"https://developer.mozilla.org\"> <img src=\"favicon144.png\" alt=\"Visit MDN site\" /> </a> Using srcset attribute example include srcset attribute reference high-resolution version logo; loaded instead src image high-resolution devices. image referenced src attribute counted 1x candidate user agents support srcset . <img src=\"favicon72.png\" alt=\"MDN\" srcset=\"favicon144.png 2x\" /> Using srcset sizes attributes src attribute ignored user agents support srcset w descriptors included. (max-width: 600px) media condition matches, 200 pixel-wide image load (it one matches 200px closely), otherwise image load. <img src=\"clock-demo-200px.png\" alt=\"The time 12:45.\" srcset=\"clock-demo-200px.png 200w, clock-demo-400px.png 400w\" sizes=\"(max-width: 600px) 200px, 50vw\" /> Note: see resizing action, view example separate page, actually resize content area. Security privacy concerns Although <img> elements innocent uses, undesirable consequences user security privacy. See Referer header: privacy security concerns information mitigations. Technical summary | Content categories | Flow content, phrasing content, embedded content, palpable content. element usemap attribute, also part interactive content category. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | | | Permitted ARIA roles | | | DOM interface | HTMLImageElement | Specifications | Specification | |---| | HTML Standard # the-img-element | Browser compatibility BCD tables load browser See also <picture> ,<object> , and<embed> elementsobject-fit ,object-position ,image-orientation ,image-rendering , andimage-resolution : Image-related CSS properties.HTMLImageElement interface element- HTML images - Image file type format guide - Responsive images"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input", "title": "<input>: The HTML Input element - HTML: HyperText Markup Language | MDN", "text": "<input>: HTML Input element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <input> HTML element used create interactive controls web-based forms order accept data user; wide variety types input data control widgets available, depending device user agent. <input> element one powerful complex HTML due sheer number combinations input types attributes. Try <input> types <input> works varies considerably depending value type attribute, hence different types covered separate reference pages. attribute specified, default type adopted text . available types follows: | Type | Description | Basic Examples | |---|---|---| | button | push button default behavior displaying value value attribute, empty default. | | | checkbox | check box allowing single values selected/deselected. | | | color | control specifying color; opening color picker active supporting browsers. | | | date | control entering date (year, month, day, time). Opens date picker numeric wheels year, month, day active supporting browsers. | | | datetime-local | control entering date time, time zone. Opens date picker numeric wheels date- time-components active supporting browsers. | | field editing email address. Looks like text input, validation parameters relevant keyboard supporting browsers devices dynamic keyboards. | | | | file | control lets user select file. Use accept attribute define types files control select. | | | hidden | control displayed whose value submitted server. example next column, hidden! | | | image | graphical submit button. Displays image defined src attribute. alt attribute displays image src missing. | | | month | control entering month year, time zone. | | | number | control entering number. Displays spinner adds default validation. Displays numeric keypad devices dynamic keypads. | | | password | single-line text field whose value obscured. alert user site secure. | | | radio | radio button, allowing single value selected multiple choices name value. | | | range | control entering number whose exact value important. Displays range widget defaulting middle value. Used conjunction min max define range acceptable values. | | | reset | button resets contents form default values. recommended. | | | search | single-line text field entering search strings. Line-breaks automatically removed input value. May include delete icon supporting browsers used clear field. Displays search icon instead enter key devices dynamic keypads. | | | submit | button submits form. | | | tel | control entering telephone number. Displays telephone keypad devices dynamic keypads. | | | text | default value. single-line text field. Line-breaks automatically removed input value. | | | time | control entering time value time zone. | | | url | field entering URL. Looks like text input, validation parameters relevant keyboard supporting browsers devices dynamic keyboards. | | | week | control entering date consisting week-year number week number time zone. | | | Obsolete values | || datetime Deprecated | control entering date time (hour, minute, second, fraction second) based UTC time zone. | | Attributes <input> element powerful attributes; type attribute, described examples above, important. Since every <input> element, regardless type, based HTMLInputElement interface, technically share exact set attributes. However, reality, attributes effect specific subset input types. addition, way attributes impact input depends input type, impacting different input types different ways. section provides table listing attributes brief description. table followed list describing attribute greater detail, along input types associated with. common input types defined greater detail below. Attributes unique particular input types\u2014or attributes common input types special behaviors used given input type\u2014are instead documented types' pages. Attributes <input> element include global HTML attributes additionally: | Attribute | Type(s) | Description | |---|---|---| accept | file | Hint expected file type file upload controls | alt | image | alt attribute image type. Required accessibility | autocapitalize | except url , email , password | Controls automatic capitalization inputted text. | autocomplete | except checkbox , radio , buttons | Hint form autofill feature | capture | file | Media capture input method file upload controls | checked | checkbox , radio | Whether command control checked | dirname | hidden , text , search , url , tel , email | Name form field use sending element's directionality form submission | disabled | | Whether form control disabled | form | | Associates control form element | formaction | image , submit | URL use form submission | formenctype | image , submit | Form data set encoding type use form submission | formmethod | image , submit | HTTP method use form submission | formnovalidate | image , submit | Bypass form control validation form submission | formtarget | image , submit | Browsing context form submission | height | image | height attribute <img> ; vertical dimension | list | except hidden , password , checkbox , radio , buttons | Value id attribute <datalist> autocomplete options | max | date , month , week , time , datetime-local , number , range | Maximum value | maxlength | text , search , url , tel , email , password | Maximum length (number characters) value | min | date , month , week , time , datetime-local , number , range | Minimum value | minlength | text , search , url , tel , email , password | Minimum length (number characters) value | multiple | email , file | Boolean. Whether allow multiple values | name | | Name form control. Submitted form part name/value pair | pattern | text , search , url , tel , email , password | Pattern value must match valid | placeholder | text , search , url , tel , email , password , number | Text appears form control value set | popovertarget | button | Designates <input type=\"button\"> control popover element | popovertargetaction | button | Specifies action popover control perform | readonly | except hidden , range , color , checkbox , radio , buttons | Boolean. value editable | required | except hidden , range , color , buttons | Boolean. value required must checked form submittable | size | text , search , url , tel , email , password | Size control | src | image | src attribute <img> ; address image resource | step | date , month , week , time , datetime-local , number , range | Incremental values valid | type | | Type form control | value | except image | value control. specified HTML, corresponds initial value | width | image | width attribute <img> | additional non-standard attributes listed following descriptions standard attributes. Individual attributes accept - Valid file input type only, theaccept attribute defines file types selectable afile upload control. See file input type. alt - Valid image button only, thealt attribute provides alternative text image, displaying value attribute imagesrc missing otherwise fails load. See image input type. autocapitalize - Controls whether inputted text automatically capitalized and, so, manner. See autocapitalize global attribute page information. autocomplete - (Not Boolean attribute!) autocomplete attribute takes value space-separated string describes what, any, type autocomplete functionality input provide. typical implementation autocomplete recalls previous values entered input field, complex forms autocomplete exist. instance, browser could integrate device's contacts list autocompleteemail addresses email input field. Seeautocomplete permitted values.The autocomplete attribute valid onhidden ,text ,search ,url ,tel ,email ,date ,month ,week ,time ,datetime-local ,number ,range ,color , andpassword . attribute effect input types return numeric text data, valid input types exceptcheckbox ,radio ,file , button types.See autocomplete attribute additional information, including information password security howautocomplete slightly different forhidden input types. autofocus - Boolean attribute which, present, indicates input automatically focus page finished loading (or <dialog> containing element displayed).Note: element autofocus attribute may gain focus theDOMContentLoaded event fired.No one element document may autofocus attribute. put one element, first one attribute receives focus.The autofocus attribute cannot used inputs typehidden , since hidden inputs cannot focused.Warning: Automatically focusing form control confuse visually-impaired people using screen-reading technology people cognitive impairments. autofocus assigned, screen-readers \"teleport\" user form control without warning beforehand.Use careful consideration accessibility applying autofocus attribute. Automatically focusing control cause page scroll load. focus also cause dynamic keyboards display touch devices. screen reader announce label form control receiving focus, screen reader announce anything label, sighted user small device equally miss context created preceding content. capture - Introduced HTML Media Capture specification valid file input type only, thecapture attribute defines media\u2014microphone, video, camera\u2014should used capture new file upload withfile upload control supporting scenarios. See file input type. checked - Valid radio andcheckbox types,checked Boolean attribute. present aradio type, indicates radio button currently selected one group same-named radio buttons. present acheckbox type, indicates checkbox checked default (when page loads). indicate whether checkbox currently checked: checkbox's state changed, content attribute reflect change. (Only theHTMLInputElement 'schecked IDL attribute updated.)Note: Unlike input controls, checkboxes radio buttons value included submitted data currently checked . are, name value(s) checked controls submitted.For example, checkbox whose name isfruit avalue ofcherry , checkbox checked, form data submitted includefruit=cherry . checkbox active, listed form data all. defaultvalue checkboxes radio buttons ison . dirname - Valid hidden ,text ,search ,url ,tel , andemail input types, thedirname attribute enables submission directionality element. included, form control submit two name/value pairs: first thename andvalue , second value thedirname attribute name, value ofltr orrtl set browser.html<form action=\"page.html\" method=\"post\"> <label> Fruit: <input type=\"text\" name=\"fruit\" dirname=\"fruit-dir\" value=\"cherry\" /> </label> <input type=\"submit\" /> </form> <!-- page.html?fruit=cherry&fruit-dir=ltr --> form submitted, input cause name /value pair offruit=cherry thedirname / direction pair offruit-dir=ltr sent. information, see thedirname attribute. disabled - Boolean attribute which, present, indicates user able interact input. Disabled inputs typically rendered dimmer color using form indication field available use. Specifically, disabled inputs receive click event, disabled inputs submitted form.Note: Although required specification, Firefox default persist dynamic disabled state <input> across page loads. Use theautocomplete attribute control feature. form - string specifying <form> element input associated (that is, form owner). string's value, present, must match theid a<form> element document. attribute specified, the<input> element associated nearest containing form, any.The form attribute lets place input anywhere document included form elsewhere document.Note: input associated one form. formaction - Valid image andsubmit input types only. See submit input type information. formenctype - Valid image andsubmit input types only. See submit input type information. formmethod - Valid image andsubmit input types only. See submit input type information. formnovalidate - Valid image andsubmit input types only. See submit input type information. formtarget - Valid image andsubmit input types only. See submit input type information. height - Valid image input button only, theheight height image file display represent graphical submit button. See image input type. id - Global attribute valid elements, including input types, defines unique identifier (ID) must unique whole document. purpose identify element linking. value used value <label> 'sfor attribute link label form control. See<label> . inputmode - Global value valid elements, provides hint browsers type virtual keyboard configuration use editing element contents. Values include none ,text ,tel ,url ,email ,numeric ,decimal , andsearch . list - value given list attribute theid a<datalist> element located document. The<datalist> provides list predefined values suggest user input. values list compatible thetype included suggested options. values provided suggestions, requirements: users select predefined list provide different value.It valid text ,search ,url ,tel ,email ,date ,month ,week ,time ,datetime-local ,number ,range , andcolor .Per specifications, list attribute supported thehidden ,password ,checkbox ,radio ,file , button types.Depending browser, user may see custom color palette suggested, tic marks along range, even input opens like <select> allows non-listed values. Check browser compatibility table input types.See <datalist> element. max - Valid date ,month ,week ,time ,datetime-local ,number , andrange , defines greatest value range permitted values. thevalue entered element exceeds this, element fails constraint validation. value themax attribute number, element maximum value.There special case: data type periodic (such dates times), value max may lower value ofmin , indicates range may wrap around; example, allows specify time range 10 PM 4 AM. maxlength - Valid text ,search ,url ,tel ,email , andpassword , defines maximum string length (measured UTF-16 code units) user enter field. must integer value 0 higher. nomaxlength specified, invalid value specified, field maximum length. value must also greater equal value ofminlength .The input fail constraint validation length text entered field greater maxlength UTF-16 code units long. default, browsers prevent users entering characters allowed themaxlength attribute. Constraint validation applied value changed user. See Client-side validation information. min - Valid date ,month ,week ,time ,datetime-local ,number , andrange , defines negative value range permitted values. thevalue entered element less this, element fails constraint validation. value themin attribute number, element minimum value.This value must less equal value max attribute. themin attribute present specified invalid, nomin value applied. themin attribute valid non-empty value less minimum allowed themin attribute, constraint validation prevent form submission. See Client-side validation information.There special case: data type periodic (such dates times), value max may lower value ofmin , indicates range may wrap around; example, allows specify time range 10 PM 4 AM. minlength - Valid text ,search ,url ,tel ,email , andpassword , defines minimum string length (measured UTF-16 code units) user enter entry field. must non-negative integer value smaller equal value specified bymaxlength . nominlength specified, invalid value specified, input minimum length.The input fail constraint validation length text entered field fewer minlength UTF-16 code units long, preventing form submission. Constraint validation applied value changed user. See Client-side validation information. multiple - Boolean multiple attribute, set, means user enter comma separated email addresses email widget choose one file thefile input. See email file input type. name - string specifying name input control. name submitted along control's value form data submitted. Consider name required attribute (even though not). input noname specified, orname empty, input's value submitted form! (Disabled controls, unchecked radio buttons, unchecked checkboxes, reset buttons also sent.)There two special cases: _charset_ : used name an<input> element type hidden, input'svalue automatically set user agent character encoding used submit form.isindex : historical reasons, nameisindex allowed. name attribute creates unique behavior radio buttons.Only one radio button same-named group radio buttons checked time. Selecting radio button group automatically deselects currently-selected radio button group. value one checked radio button sent along name form submitted, tabbing series same-named group radio buttons, one checked, one receive focus. grouped together source order, one group checked, tabbing group starts first one group encountered, skipping checked. words, one checked, tabbing skips unchecked radio buttons group. none checked, radio button group receives focus first button name group reached. one radio buttons group focus, using arrow keys navigate radio buttons name, even radio buttons grouped together source order. input element given name , name becomes property owning form element'sHTMLFormElement.elements property. input whosename set toguest another whosename ishat-size , following code used:jslet form = document.querySelector(\"form\"); let guestName = form.elements.guest; let hatSize = form.elements[\"hat-size\"]; code run, guestName theHTMLInputElement theguest field, andhatSize object thehat-size field.Warning: Avoid giving form elements name corresponds built-in property form, since would override predefined property method reference corresponding input. pattern - Valid text ,search ,url ,tel ,email , andpassword , thepattern attribute used compile regular expression input'svalue must match order value pass constraint validation. must valid JavaScript regular expression, used theRegExp type, documented guide regular expressions. forward slashes specified around pattern text. compiling regular expression:- pattern implicitly wrapped ^(?: and)$ , match required entire input value, i.e.,^(?:<pattern>)$ . - 'v' flag specified pattern treated sequence Unicode code points, instead ASCII. pattern attribute present specified invalid, regular expression applied attribute ignored completely. pattern attribute valid non-empty value match pattern, constraint validation prevent form submission. themultiple present, compiled regular expression matched comma separated value.Note: using pattern attribute, inform user expected format including explanatory text nearby. also include atitle attribute explain requirements match pattern; browsers display title tooltip. visible explanation required accessibility. tooltip enhancement.See Client-side validation information. - pattern implicitly wrapped placeholder - Valid text ,search ,url ,tel ,email ,password , andnumber , theplaceholder attribute provides brief hint user kind information expected field. word short phrase provides hint expected type data, rather explanation prompt. text must include carriage returns line feeds. example field expected capture user's first name, label \"First Name\", suitable placeholder might \"e.g. Mustafa\".Note: placeholder attribute semantically useful ways explain form, cause unexpected technical issues content. See Labels information. popovertarget - Turns <input type=\"button\"> element popover control button; takes ID popover element control value. See Popover API landing page details. popovertargetaction - Specifies action performed popover element controlled control <input type=\"button\"> . Possible values are:\"hide\" - button hide shown popover. try hide already hidden popover, action taken. \"show\" - button show hidden popover. try show already showing popover, action taken. \"toggle\" - button toggle popover showing hidden. popover hidden, shown; popover showing, hidden. popovertargetaction omitted,\"toggle\" default action performed control button. readonly - Boolean attribute which, present, indicates user able edit value input. readonly attribute supported thetext ,search ,url ,tel ,email ,date ,month ,week ,time ,datetime-local ,number , andpassword input types.See HTML attribute: readonly information. required - required Boolean attribute which, present, indicates user must specify value input owning form submitted. Therequired attribute supported bytext ,search ,url ,tel ,email ,date ,month ,week ,time ,datetime-local ,number ,password ,checkbox ,radio , andfile inputs.See Client-side validation HTML attribute: required information. size - Valid email ,password ,tel ,url , andtext , thesize attribute specifies much input shown. Basically creates result setting CSSwidth property specialties. actual unit value depends input type. Forpassword andtext , number characters (orem units) default value of20 , others, pixels (orpx units). CSSwidth takes precedence thesize attribute. src - Valid image input button only, thesrc string specifying URL image file display represent graphical submit button. See image input type. step - Valid date ,month ,week ,time ,datetime-local ,number , andrange , thestep attribute number specifies granularity value must adhere to.If explicitly included: step defaults 1 fornumber andrange .- date/time input type default step value appropriate type; see individual input pages:date ,datetime-local ,month ,time , andweek . value must positive number\u2014integer float\u2014or special value , means stepping implied, value allowed (barring constraints, asmin andmax ).If explicitly set, valid values thenumber , date/time input types, andrange input types equal basis stepping \u2014 themin value increments step value, themax value, specified.For example, <input type=\"number\" min=\"10\" step=\"2\"> , even integer,10 greater, valid. omitted,<input type=\"number\"> , integer valid, floats (like4.2 ) valid, becausestep defaults to1 . For4.2 valid,step would set toany , 0.1, 0.2, themin value would number ending in.2 , as<input type=\"number\" min=\"-5.2\"> Note: data entered user adhere stepping configuration, value considered invalid constraint validation match :invalid pseudoclass.See Client-side validation information. tabindex - Global attribute valid elements, including input types, integer attribute indicating element take input focus (is focusable), participate sequential keyboard navigation. input types except input type hidden focusable, attribute used form controls, would require management focus order elements within document risk harming usability accessibility done incorrectly. title - Global attribute valid elements, including input types, containing text representing advisory information related element belongs to. information typically, necessarily, presented user tooltip. title used primary explanation purpose form control. Instead, use <label> element afor attribute set form control'sid attribute. See Labels below. type - string specifying type control render. example, create checkbox, value checkbox used. omitted (or unknown value specified), input typetext used, creating plaintext input field.Permitted values listed Input types above. value - input control's value. specified HTML, initial value, altered retrieved time using JavaScript access respective HTMLInputElement object'svalue property. Thevalue attribute always optional, though considered mandatory forcheckbox ,radio , andhidden . width - Valid image input button only, thewidth width image file display represent graphical submit button. See image input type. Non-standard attributes following non-standard attributes also available browsers. general rule, avoid using unless can't helped. | Attribute | Description | |---|---| incremental | Whether send repeated search events allow updating live search results user still editing value field. WebKit Blink (Safari, Chrome, Opera, etc.). | mozactionhint Deprecated | string indicating type action taken user presses Enter Return key editing field; used determine appropriate label key virtual keyboard. Since attribute deprecated, use | orient | Sets orientation range slider. Firefox only. | results | maximum number items displayed drop-down list previous search queries. Safari only. | webkitdirectory | Boolean indicating whether allow user choose directory (or directories, multiple also present) | incremental Non-standard- Boolean attribute incremental WebKit Blink extension (so supported Safari, Opera, Chrome, etc.) which, present, tells user agent process input live search. user edits value field, user agent sendssearch events theHTMLInputElement object representing search box. allows code update search results real time user edits search.If incremental specified, thesearch event sent user explicitly initiates search (such pressing Enter Return key editing field).The search event rate-limited sent frequently implementation-defined interval. orient Non-standard- Similar -moz-orient non-standard CSS property impacting <progress> and<meter> elements, theorient attribute defines orientation range slider. Values includehorizontal , meaning range rendered horizontally, andvertical , range rendered vertically. See Creating vertical form controls modern approach creating vertical form controls. results Non-standard- results attribute\u2014supported Safari\u2014is numeric value lets override maximum number entries displayed the<input> element's natively-provided drop-down menu previous search queries.The value must non-negative decimal number. provided, invalid value given, browser's default maximum number entries used. webkitdirectory Non-standard- Boolean webkitdirectory attribute, present, indicates directories available selected user file picker interface. SeeHTMLInputElement.webkitdirectory additional details examples.Though originally implemented WebKit-based browsers, webkitdirectory also usable Microsoft Edge well Firefox 50 later. However, even though relatively broad support, still standard used unless alternative. Methods following methods provided HTMLInputElement interface represents <input> elements DOM. Also available methods specified parent interfaces, HTMLElement , Element , Node , EventTarget . checkValidity() - Returns true element's value passes validity checks; otherwise, returnsfalse fires aninvalid event element. reportValidity() - Returns true element's value passes validity checks; otherwise, returnsfalse , fires aninvalid event element, (if event canceled) reports problem user. select() - Selects entire content <input> element, element's content selectable. elements selectable text content (such visual color picker calendar date input), method nothing. setCustomValidity() - Sets custom message display input element's value valid. setRangeText() - Sets contents specified range characters input element given string. selectMode parameter available allow controlling existing content affected. setSelectionRange() - Selects specified range characters within textual input element. nothing inputs presented text input fields. showPicker() - Displays browser picker input element would normally displayed element selected, triggered button press user interaction. stepDown() - Decrements value numeric input one, default, specified number units. stepUp() - Increments value numeric input one specified number units. CSS Inputs, replaced elements, features applicable non form elements. CSS selectors specifically target form controls based UI features, also known UI pseudo-classes. input element also targeted type attribute selectors. properties especially useful well. UI pseudo-classes | Pseudo-class | Description | |---|---| :enabled | currently enabled element activated (selected, clicked on, typed into, etc.) accept focus also disabled state, can't activated accept focus. | :disabled | currently disabled element enabled state, meaning otherwise could activated (selected, clicked on, typed into, etc.) accept focus disabled. | :read-only | Element editable user | :read-write | Element editable user. | :placeholder-shown | Element currently displaying placeholder text, including <input> <textarea> elements placeholder attribute present has, yet, value. | :default | Form elements default group related elements. Matches checkbox radio input types checked page load render. | :checked | Matches checkbox radio input types currently checked (and (<option> <select> currently selected). | :indeterminate | checkbox elements whose indeterminate property set true JavaScript, radio elements, radio buttons name value form unchecked, <progress> elements indeterminate state | :valid | Form controls constraint validation applied currently valid. | :invalid | Form controls constraint validation applied currently valid. Matches form control whose value match constraints set attributes, required , pattern , step max . | :in-range | non-empty input whose current value within range limits specified min max attributes step . | :out-of-range | non-empty input whose current value within range limits specified min max attributes adhere step constraint. | :required | <input> , <select> , <textarea> element required attribute set it. matches elements required. attribute included non-requirable element make match. | :optional | <input> , <select> , <textarea> element required attribute set it. match elements can't required. | :blank | <input> <textarea> elements currently value. | :user-invalid | Similar :invalid , activated blur. Matches invalid input user interaction, focusing control, leaving control, attempting submit form containing invalid control. | Pseudo-classes example style checkbox label based whether checkbox checked not. example, styling color font-weight <label> comes immediately checked input. applied styles input checked. input:checked + label { color: red; font-weight: bold; } Attribute selectors possible target different types form controls based type using attribute selectors. CSS attribute selectors match elements based either presence attribute value given attribute. /* matches password input */ input[type=\"password\"] { } /* matches form control whose valid values limited range values*/ input[min][max] { } /* matches form control pattern attribute */ input[pattern] { } ::placeholder default, appearance placeholder text translucent light gray. ::placeholder pseudo-element input's placeholder text. styled limited subset CSS properties. ::placeholder { color: blue; } subset CSS properties apply ::first-line pseudo-element used rule using ::placeholder selector. appearance appearance property enables displaying (almost) element platform-native style based operating system's theme well removal platform-native styling none value. could make <div> look like radio button div {appearance: radio;} radio look like checkbox [type=\"radio\"] {appearance: checkbox;} , don't. Setting appearance: none removes platform native borders, functionality. caret-color property specific text entry-related elements CSS caret-color property, lets set color used draw text input caret: HTML <label for=\"textInput\">Note red caret:</label> <input id=\"textInput\" class=\"custom\" size=\"32\" /> CSS input.custom { caret-color: red; font: 16px \"Helvetica\", \"Arial\", \"sans-serif\"; } Result field-sizing field-sizing property enables control sizing behavior form inputs (i.e. given default preferred size default.) property enables override default behavior, allowing form controls adjust size fit contents. property typically used create form fields shrinkwrap content grow text entered. works input types accept direct text input (for example, text url ), input type file , <textarea> elements. object-position object-fit certain cases (typically involving non-textual inputs specialized interfaces), <input> element replaced element. is, position size element's size positioning within frame adjusted using CSS object-position object-fit properties. Styling information adding color elements HTML, see: Also see: Additional features Labels Labels needed associate assistive text <input> . <label> element provides explanatory information form field always appropriate (aside layout concerns have). never bad idea use <label> explain entered <input> <textarea> . Associated labels semantic pairing <input> <label> elements useful assistive technologies screen readers. pairing using <label> 's attribute, bond label input way lets screen readers describe inputs users precisely. suffice plain text adjacent <input> element. Rather, usability accessibility requires inclusion either implicit explicit <label> : <!-- inaccessible --> <p>Enter name: <input id=\"name\" type=\"text\" size=\"30\" /></p> <!-- implicit label --> <p> <label>Enter name: <input id=\"name\" type=\"text\" size=\"30\" /></label> </p> <!-- explicit label --> <p> <label for=\"name\">Enter name: </label> <input id=\"name\" type=\"text\" size=\"30\" /> </p> first example inaccessible: relationship exists prompt <input> element. addition accessible name, label provides larger 'hit' area mouse touch screen users click touch. pairing <label> <input> , clicking either one focus <input> . use plain text \"label\" input, happen. prompt part activation area input helpful people motor control conditions. web developers, important never assume people know things know. diversity people using web\u2014and extension website\u2014practically guarantees site's visitors variation thought processes and/or circumstances leads interpret forms differently without clear properly-presented labels. Placeholders accessible placeholder attribute lets specify text appears within <input> element's content area empty. placeholder never required understand forms. label, used substitute, isn't. placeholder used provide hint inputted value look like, explanation prompt. placeholder accessible screen readers, user enters text form control, form control already value, placeholder disappears. Browsers automatic page translation features may skip attributes translating, meaning placeholder may get translated. Note: use placeholder attribute avoid it. need label <input> element, use <label> element. Client-side validation Warning: Client-side validation useful, guarantee server receive valid data. data must specific format, always verify also server-side, return 400 HTTP response format invalid. addition using CSS style inputs based :valid :invalid UI states based current state input, noted UI pseudo-classes section above, browser provides client-side validation (attempted) form submission. form submission, form control fails constraint validation, supporting browsers display error message first invalid form control; displaying default message based error type, message set you. input types attributes place limits values valid given input. example, <input type=\"number\" min=\"2\" max=\"10\" step=\"2\"> means number 2, 4, 6, 8, 10 valid. Several errors could occur, including rangeUnderflow error value less 2, rangeOverflow greater 10, stepMismatch value number 2 10, even integer (does match requirements step attribute), typeMismatch value number. input types whose domain possible values periodic (that is, highest possible value, values wrap back around beginning rather ending), possible values max min properties reversed, indicates range permitted values starts min , wraps around lowest possible value, continues max reached. particularly useful dates times, want allow range 8 PM 8 AM: <input type=\"time\" min=\"20:00\" max=\"08:00\" name=\"overnight\" /> Specific attributes values lead specific error ValidityState : | Attribute | Relevant property | Description | |---|---|---| max | validityState.rangeOverflow | Occurs value greater maximum value defined max attribute | maxlength | validityState.tooLong | Occurs number characters greater number allowed maxlength property | min | validityState.rangeUnderflow | Occurs value less minimum value defined min attribute | minlength | validityState.tooShort | Occurs number characters less number required minlength property | pattern | validityState.patternMismatch | Occurs pattern attribute included valid regular expression value match it. | required | validityState.valueMissing | Occurs required attribute present value null radio checkbox checked. | step | validityState.stepMismatch | value match step increment. Increment default 1 , integers valid type=\"number\" step included. step=\"any\" never throw error. | type | validityState.typeMismatch | Occurs value correct type, example email contain @ url contain protocol. | form control required attribute, value, empty string, invalid. Even attributes present, exception required , empty string lead error. set limits values accept, supporting browsers natively validate form values alert user mistake form submitted. addition errors described table above, validityState interface contains badInput , valid , customError boolean readonly properties. validity object includes: validityState.valueMissing validityState.typeMismatch validityState.patternMismatch validityState.tooLong validityState.tooShort validityState.rangeUnderflow validityState.rangeOverflow validityState.stepMismatch validityState.badInput validityState.valid validityState.customError Boolean properties, value true indicates specified reason validation may failed true, exception valid property, true element's value obeys constraints. error, supporting browsers alert user prevent form submitted. word caution: custom error set truthy value (anything empty string null ), form prevented submitted. custom error message, none properties return true, valid true, form submitted. function validate(input) { let validityState_object = input.validity; (validityState_object.valueMissing) { input.setCustomValidity(\"A value required\"); } else (validityState_object.rangeUnderflow) { input.setCustomValidity(\"Your value low\"); } else (validityState_object.rangeOverflow) { input.setCustomValidity(\"Your value high\"); } else { input.setCustomValidity(\"\"); } } last line, setting custom validity message empty string vital. user makes error, validity set, fail submit, even values valid, message null . Custom validation error example want present custom error message field fails validate, need use Constraint Validation API available <input> (and related) elements. Take following form: <form> <label for=\"name\">Enter username (upper lowercase letters): </label> <input type=\"text\" name=\"name\" id=\"name\" required pattern=\"[A-Za-z]+\" /> <button>Submit</button> </form> basic HTML form validation features cause produce default error message try submit form either valid filled in, value match pattern . wanted instead display custom error messages, could use JavaScript like following: const nameInput = document.querySelector(\"input\"); nameInput.addEventListener(\"input\", () => { nameInput.setCustomValidity(\"\"); nameInput.checkValidity(); }); nameInput.addEventListener(\"invalid\", () => { (nameInput.value === \"\") { nameInput.setCustomValidity(\"Enter username!\"); } else { nameInput.setCustomValidity( \"Usernames contain upper lowercase letters. Try again!\", ); } }); example renders like so: brief: - check valid state input element every time value changed running checkValidity() method via theinput event handler. - value invalid, invalid event raised, theinvalid event handler function run. Inside function work whether value invalid empty, match pattern, using anif () block, set custom validity error message. - result, input value invalid submit button pressed, one custom error messages shown. - valid, submit expect. happen, custom validity cancelled, invoking setCustomValidity() empty string value. therefore every time theinput event raised. this, custom validity previously set, input register invalid, even currently contains valid value submission. Note: Always validate input constraints client side server side. Constraint validation remove need validation server side. Invalid values still sent older browsers bad actors. Note: Firefox supported proprietary error attribute \u2014 x-moz-errormessage \u2014 many versions, allowed set custom error messages similar way. removed version 66 (see Firefox bug 1513890). Localization allowed inputs certain <input> types depend locale. locales, 1,000.00 valid number, locales valid way enter number 1.000,00. Firefox uses following heuristics determine locale validate user's input (at least type=\"number\" ): - Try language specified lang /xml:lang attribute element parents. - Try language specified Content-Language HTTP header. Or, - none specified, use browser's locale. Accessibility Labels including inputs, accessibility requirement add labels alongside. needed use assistive technologies tell input for. Also, clicking touching label gives focus label's associated form control. improves accessibility usability sighted users, increases area user click touch activate form control. especially useful (and even needed) radio buttons checkboxes, tiny. information labels general see Labels. following example associate <label> <input> element style. need give <input> id attribute. <label> needs attribute whose value input's id . <label for=\"peas\">Do like peas?</label> <input type=\"checkbox\" name=\"peas\" id=\"peas\" /> Size Interactive elements form input provide area large enough easy activate them. helps variety people, including people motor control issues people using non-precise forms input stylus fingers. minimum interactive size 44\u00d744 CSS pixels recommended. Technical summary | Content categories | Flow content, listed, submittable, resettable, form-associated element, phrasing content. type hidden , labelable element, palpable content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | | | Permitted ARIA roles | | | DOM interface | HTMLInputElement | Specifications | Specification | |---| | HTML Standard # the-input-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins", "title": "<ins>: The Inserted Text element - HTML: HyperText Markup Language | MDN", "text": "<ins>: Inserted Text element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <ins> HTML element represents range text added document. use <del> element similarly represent range text deleted document. Try Attributes element includes global attributes. cite - attribute defines URI resource explains change, link meeting minutes ticket troubleshooting system. datetime - attribute indicates time date change must valid date optional time string. value cannot parsed date optional time string, element associated timestamp. format string without time, see Format valid date string. format string includes date time covered Format valid local date time string. Accessibility presence <ins> element announced screen reading technology default configuration. made announced using CSS content property, along ::before ::after pseudo-elements. ins::before, ins::after { clip-path: inset(100%); clip: rect(1px, 1px, 1px, 1px); height: 1px; overflow: hidden; position: absolute; white-space: nowrap; width: 1px; } ins::before { content: \" [insertion start] \"; } ins::after { content: \" [insertion end] \"; } people use screen readers deliberately disable announcing content creates extra verbosity. this, important abuse technique apply situations knowing content inserted would adversely affect understanding. Examples <ins>This text inserted</ins> Result Technical summary | Content categories | Phrasing content, flow content. | |---|---| | Permitted content | Transparent. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | insertion | | Permitted ARIA roles | | | DOM interface | HTMLModElement | Specifications | Specification | |---| | HTML Standard # the-ins-element | Browser compatibility BCD tables load browser See also <del> element marking deletion document"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd", "title": "<kbd>: The Keyboard Input element - HTML: HyperText Markup Language | MDN", "text": "<kbd>: Keyboard Input element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <kbd> HTML element represents span inline text denoting textual user input keyboard, voice input, text entry device. convention, user agent defaults rendering contents <kbd> element using default monospace font, although mandated HTML standard. Try <kbd> may nested various combinations <samp> (Sample Output) element represent various forms input output based visual cues. Attributes element includes global attributes. Usage notes elements used tandem <kbd> represent specific scenarios: - Nesting <kbd> element within another<kbd> element represents actual key unit input portion larger input. See Representing keystrokes within input below. - Nesting <kbd> element inside a<samp> element represents input echoed back user system. See Echoed input, below, example. - Nesting <samp> element inside a<kbd> element, hand, represents input based text presented system, names menus menu items, names buttons displayed screen. See example Representing onscreen input options below. Note: define custom style override browser's default font selection <kbd> element, although user's preferences may potentially override CSS. Examples Basic example <p> Use command <kbd>help my-command</kbd> view documentation command \"my-command\". </p> Result Representing keystrokes within input describe input comprised multiple keystrokes, nest multiple <kbd> elements, outer <kbd> element representing overall input individual keystroke component input enclosed within <kbd> . Unstyled First, let's look looks like plain HTML. HTML <p> also create new document using <kbd><kbd>Ctrl</kbd>+<kbd>N</kbd></kbd> keyboard shortcut. </p> wraps entire key sequence outer <kbd> element, individual key within own, order denote components sequence. Note: need wrapping; choose simplify leaving external <kbd> element. words, simplifying <kbd>Ctrl</kbd>+<kbd>N</kbd> would perfectly valid. Depending style sheet, though, may find useful kind nesting. Result output looks like without style sheet applied: custom styles make sense adding CSS: CSS add new selector nested <kbd> elements, kbd>kbd , apply rendering keyboard keys: kbd > kbd { border-radius: 3px; padding: 1px 2px 0; border: 1px solid black; } HTML update HTML use class keys output presented: <p> also create new document pressing <kbd><kbd>Ctrl</kbd>+<kbd>N</kbd></kbd> shortcut. </p> Result result want! Echoed input Nesting <kbd> element inside <samp> element represents input echoed back user system. <p> syntax error occurs, tool output initial command typed review: </p> <blockquote> <samp><kbd>custom-git ad my-new-file.cpp</kbd></samp> </blockquote> Result Representing onscreen input options Nesting <samp> element inside <kbd> element represents input based text presented system, names menus menu items, names buttons displayed screen. example, explain choose \"New Document\" option \"File\" menu using HTML looks like this: <p> create new file, choose <kbd><kbd><samp>File</samp></kbd> \u21d2<kbd><samp>New Document</samp></kbd></kbd> menu option. </p> <p> forget click <kbd><samp>OK</samp></kbd> button confirm entered name new file. </p> interesting nesting. menu option description, entire input enclosed <kbd> element. Then, inside that, menu menu item names contained within <kbd> <samp> , indicating input selected screen widget. Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-kbd-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label", "title": "<label>: The Label element - HTML: HyperText Markup Language | MDN", "text": "<label>: Label element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <label> HTML element represents caption item user interface. Try Associating <label> form control, <input> <textarea> offers major advantages: - label text visually associated corresponding text input; programmatically associated too. means that, example, screen reader read label user focused form input, making easier assistive technology user understand data entered. - user clicks touches/taps label, browser passes focus associated input (the resulting event also raised input). increased hit area focusing input provides advantage anyone trying activate \u2014 including using touch-screen device. explicitly associate <label> element <input> element, first need add id attribute <input> element. Next, add attribute <label> element, value id <input> element. Alternatively, nest <input> directly inside <label> , case id attributes needed association implicit: <label> like peas? <input type=\"checkbox\" name=\"peas\" /> </label> form control label labeling called labeled control label element. Multiple labels associated form control: <label for=\"username\">Enter username:</label> <input id=\"username\" name=\"username\" type=\"text\" /> <label for=\"username\">Forgot username?</label> Elements associated <label> element include <button> , <input> (except type=\"hidden\" ), <meter> , <output> , <progress> , <select> <textarea> . Attributes element includes global attributes. - value attribute must singleid labelable form-related element document the<label> element. So, givenlabel element associated one form control.Note: programmatically set attribute, usehtmlFor .The first element document id attribute matching value thefor attribute labeled control thislabel element \u2014 element thatid actually labelable element. labelable element, thefor attribute effect. elements also match theid value, later document, considered.Multiple label elements given value theirfor attribute; causes associated form control (the form control thatfor value references) multiple labels.Note: <label> element afor attribute contained control element, long thefor attribute points contained control element. Styling CSS Accessibility Interactive content place interactive elements anchors buttons inside label . makes difficult people activate form input associated label . this: <label for=\"tac\"> <input id=\"tac\" type=\"checkbox\" name=\"terms-and-conditions\" /> agree <a href=\"terms-and-conditions.html\">Terms Conditions</a> </label> Prefer this: <label for=\"tac\"> <input id=\"tac\" type=\"checkbox\" name=\"terms-and-conditions\" /> agree Terms Conditions </label> <p> <a href=\"terms-and-conditions.html\">Read Terms Conditions</a> </p> Headings Placing heading elements within <label> interferes many kinds assistive technology, headings commonly used navigation aid. label's text needs adjusted visually, use CSS classes applied <label> element instead. form, section form needs title, use <legend> element placed within <fieldset> . this: <label for=\"your-name\"> <h3>Your name</h3> <input id=\"your-name\" name=\"your-name\" type=\"text\" /> </label> Prefer this: <label class=\"large-label\" for=\"your-name\"> name <input id=\"your-name\" name=\"your-name\" type=\"text\" /> </label> Buttons Examples Defining implicit label <label>Click <input type=\"text\" /></label> Defining explicit label \"for\" attribute <label for=\"username\">Click focus input field</label> <input type=\"text\" id=\"username\" /> Technical summary | Content categories | Flow content, phrasing content, interactive content, form-associated element, palpable content. | |---|---| | Permitted content | Phrasing content, descendant label elements. labelable elements labeled control allowed. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLLabelElement | Specifications | Specification | |---| | HTML Standard # the-label-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend", "title": "<legend>: The Field Set Legend element - HTML: HyperText Markup Language | MDN", "text": "<legend>: Field Set Legend element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <legend> HTML element represents caption content parent <fieldset> . Try Attributes element includes global attributes. Examples See <form> examples <legend> . Technical summary | Content categories | None. | |---|---| | Permitted content | Phrasing content headings (h1\u2013h6 elements). | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | <fieldset> whose first child <legend> element | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLLegendElement | Specifications | Specification | |---| | HTML Standard # the-legend-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li", "title": "<li>: The List Item element - HTML: HyperText Markup Language | MDN", "text": "<li>: List Item element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <li> HTML element used represent item list. must contained parent element: ordered list (<ol> ), unordered list (<ul> ), menu (<menu> ). menus unordered lists, list items usually displayed using bullet points. ordered lists, usually displayed ascending counter left, number letter. Try Attributes element includes global attributes. value - integer attribute indicates current ordinal value list item defined <ol> element. allowed value attribute number, even list displayed Roman numerals letters. List items follow one continue numbering value set. attribute meaning unordered lists (<ul> ) menus (<menu> ). type Deprecated- character attribute indicates numbering type: : lowercase lettersA : uppercase lettersi : lowercase Roman numeralsI : uppercase Roman numerals1 : numbers type overrides one used parent <ol> element, any.Note: attribute deprecated; use CSS list-style-type property instead. Examples Ordered list <ol> <li>first item</li> <li>second item</li> <li>third item</li> </ol> Result Ordered list custom value <ol type=\"I\"> <li value=\"3\">third item</li> <li>fourth item</li> <li>fifth item</li> </ol> Result Unordered list <ul> <li>first item</li> <li>second item</li> <li>third item</li> </ul> Result Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content. | | Tag omission | end tag omitted list item immediately followed another <li> element, content parent element. | | Permitted parents | <ul> , <ol> , <menu> element. Though conforming usage, obsolete <dir> also parent. | | Implicit ARIA role | listitem child ol , ul menu | | Permitted ARIA roles | menuitem , menuitemcheckbox , menuitemradio , option , none , presentation , radio , separator , tab , treeitem | | DOM interface | HTMLLIElement | Specifications | Specification | |---| | HTML Standard # the-li-element | Browser compatibility BCD tables load browser See also - list-related HTML Elements: <ul> ,<ol> ,<menu> , obsolete<dir> ; - CSS properties may specially useful style <li> element:- list-style property, choose way ordinal displayed, - CSS counters, handle complex nested lists, - margin property, control indent list item. -"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link", "title": "<link>: The External Resource Link element - HTML: HyperText Markup Language | MDN", "text": "<link>: External Resource Link element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <link> HTML element specifies relationships current document external resource. element commonly used link stylesheets, also used establish site icons (both \"favicon\" style icons icons home screen apps mobile devices) among things. Try link external stylesheet, include <link> element inside <head> like this: <link href=\"main.css\" rel=\"stylesheet\" /> example provides path stylesheet inside href attribute rel attribute value stylesheet . rel stands \"relationship\", one key features <link> element \u2014 value denotes item linked related containing document. number common types come across. example, link site's favicon: <link rel=\"icon\" href=\"favicon.ico\" /> number icon rel values, mainly used indicate special icon types use various mobile platforms, e.g.: <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"apple-icon-114.png\" type=\"image/png\" /> sizes attribute indicates icon size, type contains MIME type resource linked. provide useful hints allow browser choose appropriate icon available. also provide media type query inside media attribute; resource loaded media condition true. example: <link href=\"print.css\" rel=\"stylesheet\" media=\"print\" /> <link href=\"mobile.css\" rel=\"stylesheet\" media=\"screen (max-width: 600px)\" /> interesting new performance security features added <link> element too. Take example: <link rel=\"preload\" href=\"myFont.woff2\" as=\"font\" type=\"font/woff2\" crossorigin=\"anonymous\" /> rel value preload indicates browser preload resource (see rel=\"preload\" details), attribute indicating specific class content fetched. crossorigin attribute indicates whether resource fetched CORS request. usage notes: - <link> element occur either the<head> or<body> element, depending whether link type body-ok. example, thestylesheet link type body-ok, therefore<link rel=\"stylesheet\"> permitted body. However, good practice follow; makes sense separate your<link> elements body content, putting the<head> . - using <link> establish favicon site, site uses Content Security Policy (CSP) enhance security, policy applies favicon. encounter problems favicon loading, verify theContent-Security-Policy header'simg-src directive preventing access it. - HTML XHTML specifications define event handlers <link> element, unclear would used. - XHTML 1.0, void elements <link> require trailing slash:<link /> . - WebTV supports use value next forrel preload next page document series. Attributes element includes global attributes. - attribute required rel=\"preload\" set the<link> element, optional whenrel=\"modulepreload\" set, otherwise used. specifies type content loaded the<link> , necessary request matching, application correct content security policy, setting correctAccept request header.Furthermore, rel=\"preload\" uses signal request prioritization. table lists valid values attribute elements resources apply to.Value Applies audio <audio> elementsdocument <iframe> and<frame> elementsembed <embed> elementsfetch fetch, XHR Note: value also requires <link> contain crossorigin attribute, see CORS-enabled fetches.font CSS @font-face Note: value also requires <link> contain crossorigin attribute, see CORS-enabled fetches.image <img> and<picture> elements srcset imageset attributes, SVG<image> elements, CSS*-image rulesobject <object> elementsscript <script> elements, WorkerimportScripts style <link rel=stylesheet> elements, CSS@import track <track> elementsvideo <video> elementsworker Worker, SharedWorker blocking - attribute explicitly indicates certain operations blocked fetching external resource. must used rel attribute containsexpect orstylesheet keywords. operations blocked must space-separated list blocking tokens listed below.render : rendering content screen blocked. crossorigin - enumerated attribute indicates whether CORS must used fetching resource. CORS-enabled images reused <canvas> element without tainted. allowed values are:anonymous - cross-origin request (i.e. Origin HTTP header) performed, credential sent (i.e. cookie, X.509 certificate, HTTP Basic authentication). server give credentials origin site (by setting theAccess-Control-Allow-Origin HTTP header) resource tainted usage restricted. use-credentials - cross-origin request (i.e. Origin HTTP header) performed along credential sent (i.e. cookie, certificate, and/or HTTP Basic authentication performed). server give credentials origin site (throughAccess-Control-Allow-Credentials HTTP header), resource tainted usage restricted. attribute present, resource fetched without CORS request (i.e. without sending Origin HTTP header), preventing non-tainted usage. invalid, handled enumerated keyword anonymous used. See CORS settings attributes additional information. disabled - rel=\"stylesheet\" only, thedisabled Boolean attribute indicates whether described stylesheet loaded applied document. Ifdisabled specified HTML loaded, stylesheet loaded page load. Instead, stylesheet loaded on-demand, thedisabled attribute changed tofalse removed.Setting disabled property DOM causes stylesheet removed document'sDocument.styleSheets list. fetchpriority - Provides hint relative priority use fetching resource particular type. Allowed values: high - Fetch resource high priority relative resources type. low - Fetch resource low priority relative resources type. auto - set preference fetch priority. default. used value invalid value set. See HTMLLinkElement.fetchPriority information. href - attribute specifies URL linked resource. URL absolute relative. hreflang - attribute indicates language linked resource. purely advisory. Allowed values specified RFC 5646: Tags Identifying Languages (also known BCP 47). Use attribute href attribute present. imagesizes - rel=\"preload\" andas=\"image\" only, theimagesizes attribute similar syntax semantics thesizes attribute indicates preload appropriate resource used animg element corresponding values itssrcset andsizes attributes. imagesrcset - rel=\"preload\" andas=\"image\" only, theimagesrcset attribute similar syntax semantics thesrcset attribute indicates preload appropriate resource used animg element corresponding values itssrcset andsizes attributes. integrity - Contains inline metadata \u2014 base64-encoded cryptographic hash resource (file) telling browser fetch. browser use verify fetched resource delivered without unexpected manipulation. attribute must specified rel attribute specified tostylesheet ,preload , ormodulepreload . See Subresource Integrity. media - attribute specifies media linked resource applies to. value must media type / media query. attribute mainly useful linking external stylesheets \u2014 allows user agent pick best adapted one device runs on. referrerpolicy - string indicating referrer use fetching resource: no-referrer means theReferer header sent.no-referrer-when-downgrade means noReferer header sent navigating origin without TLS (HTTPS). user agent's default behavior, policy otherwise specified.origin means referrer origin page, roughly scheme, host, port.origin-when-cross-origin means navigating origins limited scheme, host, port, navigating origin include referrer's path.unsafe-url means referrer include origin path (but fragment, password, username). case unsafe leak origins paths TLS-protected resources insecure origins. rel - attribute names relationship linked document current document. attribute must space-separated list link type values. sizes - attribute defines sizes icons visual media contained resource. must present rel contains value oficon non-standard type Apple'sapple-touch-icon . may following values:any , meaning icon scaled size vector format, likeimage/svg+xml .- white-space separated list sizes, format <width pixels>x<height pixels> or<width pixels>X<height pixels> . sizes must contained resource. Note: icon formats able store one single icon; therefore, time, sizes attribute contains one entry. Microsoft's ICO format Apple's ICNS format store multiple icon sizes single file. ICO better browser support, use format cross-browser support concern. title - title attribute special semantics the<link> element. used a<link rel=\"stylesheet\"> defines default alternate stylesheet. type - attribute used define type content linked to. value attribute MIME type text/html, text/css, on. common use attribute define type stylesheet referenced (such text/css), given CSS stylesheet language used web, possible omit type attribute, actually recommended practice. also used onrel=\"preload\" link types, make sure browser downloads file types supports. Non-standard attributes target Deprecated- Defines frame window name defined linking relationship show rendering linked resource. Obsolete attributes charset Deprecated- attribute defines character encoding linked resource. value space- and/or comma-delimited list character sets defined RFC 2045. default value iso-8859-1 .Note: produce effect obsolete attribute, use Content-Type HTTP header linked resource. rev Deprecated- value attribute shows relationship current document linked document, defined href attribute. attribute thus defines reverse relationship compared value therel attribute. Link type values attribute similar possible values forrel .Note: Instead rev , use therel attribute opposite link type value. example, establish reverse link formade , specifyauthor . Also, attribute stand \"revision\" must used version number, even though many sites misuse way. Examples Including stylesheet include stylesheet page, use following syntax: <link href=\"style.css\" rel=\"stylesheet\" /> Providing alternative stylesheets also specify alternative style sheets. user choose style sheet use choosing View > Page Style menu. provides way users see multiple versions page. <link href=\"default.css\" rel=\"stylesheet\" title=\"Default Style\" /> <link href=\"fancy.css\" rel=\"alternate stylesheet\" title=\"Fancy\" /> <link href=\"basic.css\" rel=\"alternate stylesheet\" title=\"Basic\" /> Providing icons different usage contexts include links several icons page, browser choose one works best particular context using rel sizes values hints. <!-- iPad Pro high-resolution Retina display: --> <link rel=\"apple-touch-icon\" sizes=\"167x167\" href=\"/apple-touch-icon-167x167.png\" /> <!-- 3x resolution iPhone: --> <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon-180x180.png\" /> <!-- non-Retina iPad, iPad mini, etc.: --> <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/apple-touch-icon-152x152.png\" /> <!-- 2x resolution iPhone devices: --> <link rel=\"apple-touch-icon\" href=\"/apple-touch-icon-120x120.png\" /> <!-- basic favicon --> <link rel=\"icon\" href=\"/favicon.ico\" /> information sizes choose Apple icons, see Apple's documentation configuring web applications referenced Apple human interface guidelines. Usually, sufficient provide large image, 192x192, let browser scale needed, may want provide images different levels detail different sizes, Apple design guideline recommends. Providing smaller icons lower resolutions also saves bandwidth. may necessary provide <link> elements all. example, browsers automatically request /favicon.ico root site, Apple also automatically requests /apple-touch-icon-[size].png , /apple-touch-icon.png , etc. However, providing explicit links protects changes conventions. Conditionally loading resources media queries provide media type query inside media attribute; resource loaded media condition true. example: <link href=\"print.css\" rel=\"stylesheet\" media=\"print\" /> <link href=\"mobile.css\" rel=\"stylesheet\" media=\"all\" /> <link href=\"desktop.css\" rel=\"stylesheet\" media=\"screen (min-width: 600px)\" /> <link href=\"highres.css\" rel=\"stylesheet\" media=\"screen (min-resolution: 300dpi)\" /> Stylesheet load events determine style sheet loaded watching load event fire it; similarly, detect error occurred processing style sheet watching error event: <link rel=\"stylesheet\" href=\"mystylesheet.css\" id=\"my-stylesheet\" /> <script> const stylesheet = document.getElementById(\"my-stylesheet\"); stylesheet.onload = () => { // something interesting; sheet loaded }; stylesheet.onerror = () => { console.log(\"An error occurred loading stylesheet!\"); }; </script> Note: load event fires stylesheet imported content loaded parsed, immediately styles start applied content. Preload examples find number <link rel=\"preload\"> examples Preloading content rel=\"preload\" . Blocking rendering till resource fetched include render token inside blocking attribute; rendering page blocked till resource fetched. example: <link blocking=\"render\" rel=\"stylesheet\" href=\"example.css\" crossorigin /> Technical summary | Content categories | Metadata content. itemprop present: Flow content phrasing content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | element accepts metadata elements. itemprop present: element accepts phrasing content. | | Implicit ARIA role | link href attribute | | Permitted ARIA roles | role permitted | | DOM interface | HTMLLinkElement | Specifications | Specification | |---| | HTML Standard # the-link-element | Browser compatibility BCD tables load browser See also Link HTTP header"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main", "title": "<main>: The Main element - HTML: HyperText Markup Language | MDN", "text": "<main>: Main element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <main> HTML element represents dominant content <body> document. main content area consists content directly related expands upon central topic document, central functionality application. Try document one <main> element hidden attribute specified. Attributes element includes global attributes. Usage notes content <main> element unique document. Content repeated across set documents document sections sidebars, navigation links, copyright information, site logos, search forms included unless search form main function page. <main> contribute document's outline; is, unlike elements <body> , headings h2, such, <main> affect DOM's concept structure page. strictly informative. Accessibility Landmark <main> element behaves like main landmark role. Landmarks used assistive technology quickly identify navigate large sections document. Prefer using <main> element declaring role=\"main\" , unless legacy browser support concerns. Skip navigation Skip navigation, also known \"skipnav\", technique allows assistive technology user quickly bypass large sections repeated content (main navigation, info banners, etc.). lets user access main content page faster. Adding id attribute <main> element lets target skip navigation link. <body> <a href=\"#main-content\">Skip main content</a> <!-- navigation header content --> <main id=\"main-content\"> <!-- main page content --> </main> </body> Reader mode Browser reader mode functionality looks presence <main> element, well heading content sectioning elements converting content specialized reader view. Examples <!-- content --> <main> <h1>Apples</h1> <p>The apple pomaceous fruit apple tree.</p> <article> <h2>Red Delicious</h2> <p> bright red apples common found many supermarkets. </p> <p>\u2026</p> <p>\u2026</p> </article> <article> <h2>Granny Smith</h2> <p>These juicy, green apples make great filling apple pies.</p> <p>\u2026</p> <p>\u2026</p> </article> </main> <!-- content --> Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Flow content. | | Tag omission | None; starting ending tags mandatory. | | Permitted parents | flow content expected, hierarchically correct main element. | | Implicit ARIA role | main | | Permitted ARIA roles | role permitted | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-main-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map", "title": "<map>: The Image Map element - HTML: HyperText Markup Language | MDN", "text": "<map>: Image Map element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. Try Attributes element includes global attributes. name - name attribute gives map name referenced. attribute must present must non-empty value space characters. value thename attribute must equal value thename attribute another<map> element document. theid attribute also specified, attributes must value. Examples Image map two areas Click left-hand parrot JavaScript, right-hand parrot CSS. HTML html <!-- Photo Juliana e Mariana Amorim Unsplash --> <map name=\"primary\"> <area shape=\"circle\" coords=\"75,75,75\" href=\"https://developer.mozilla.org/docs/Web/JavaScript\" target=\"_blank\" alt=\"JavaScript\" /> <area shape=\"circle\" coords=\"275,75,75\" href=\"https://developer.mozilla.org/docs/Web/CSS\" target=\"_blank\" alt=\"CSS\" /> </map> <img usemap=\"#primary\" src=\"parrots.jpg\" alt=\"350 x 150 picture two parrots\" /> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | transparent element. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLMapElement | Specifications | Specification | |---| | HTML Standard # the-map-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark", "title": "<mark>: The Mark Text element - HTML: HyperText Markup Language | MDN", "text": "<mark>: Mark Text element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <mark> HTML element represents text marked highlighted reference notation purposes due marked passage's relevance enclosing context. Try Attributes element includes global attributes. Usage notes Typical use cases <mark> include: - used quotation ( <q> ) block quote (<blockquote> ), generally indicates text special interest marked original source material, material needs special scrutiny even though original author think particular importance. Think like using highlighter pen book mark passages find interest. - Otherwise, <mark> indicates portion document's content likely relevant user's current activity. might used, example, indicate words matched search operation. - use <mark> syntax highlighting purposes; instead, use the<span> element appropriate CSS applied it. Note: confuse <mark> <strong> element; <mark> used denote content degree relevance, <strong> indicates spans text importance. Accessibility presence mark element announced screen reading technology default configuration. made announced using CSS content property, along ::before ::after pseudo-elements. mark::before, mark::after { clip-path: inset(100%); clip: rect(1px, 1px, 1px, 1px); height: 1px; overflow: hidden; position: absolute; white-space: nowrap; width: 1px; } mark::before { content: \" [highlight start] \"; } mark::after { content: \" [highlight end] \"; } people use screen readers deliberately disable announcing content creates extra verbosity. this, important abuse technique apply situations knowing content highlighted would adversely affect understanding. Examples Marking text interest first example, <mark> element used mark text within quote particular interest user. <blockquote> period civil war. Rebel spaceships, striking hidden base, first victory evil Galactic Empire. battle, <mark>Rebel spies managed steal secret plans</mark> Empire's ultimate weapon, DEATH STAR, armored space station enough power destroy entire planet. </blockquote> Result Identifying context-sensitive passages example demonstrates using <mark> mark search results within passage. <p> dark time Rebellion. Although Death Star destroyed, <mark class=\"match\">Imperial</mark> troops driven Rebel forces hidden base pursued across galaxy. </p> <p> Evading dreaded <mark class=\"match\">Imperial</mark> Starfleet, group freedom fighters led Luke Skywalker established new secret base remote ice world Hoth. </p> help distinguish use <mark> search results potential usage, example applies custom class \"match\" match. Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-mark-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee", "title": "<marquee>: The Marquee element - HTML: HyperText Markup Language | MDN", "text": "<marquee>: Marquee element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <marquee> HTML element used insert scrolling area text. control happens text reaches edges content area using attributes. HTML <marquee> element deprecated use strongly discouraged. must create effect scrolling text continuous elements, consider using CSS animations CSS transforms instead <marquee> elements smoothly animate content. Additionally, include prefers-reduced-motion CSS @media query stop animation based user preference, thereby improving user experience accessibility. Attributes behavior Deprecated- Sets text scrolled within marquee. Possible values scroll ,slide andalternate . value specified, default value isscroll . bgcolor Deprecated- Sets background color color name hexadecimal value. direction Deprecated- Sets direction scrolling within marquee. Possible values left ,right ,up anddown . value specified, default value isleft . height Deprecated- Sets height pixels percentage value. hspace Deprecated- Sets horizontal margin loop Deprecated- Sets number times marquee scroll. value specified, default value \u22121, means marquee scroll continuously. scrollamount Deprecated- Sets amount scrolling interval pixels. default value 6. scrolldelay Deprecated- Sets interval scroll movement milliseconds. default value 85. Note value smaller 60 ignored value 60 used instead unless truespeed specified. truespeed Deprecated- default, scrolldelay values lower 60 ignored. Iftruespeed present, values ignored. vspace Deprecated- Sets vertical margin pixels percentage value. width Deprecated- Sets width pixels percentage value. Examples <marquee>This text scroll right left</marquee> <marquee direction=\"up\">This text scroll bottom top</marquee> <marquee direction=\"down\" width=\"250\" height=\"200\" behavior=\"alternate\" style=\"border:solid\"> <marquee behavior=\"alternate\">This text bounce</marquee> </marquee> Result Technical summary | DOM interface | HTMLMarqueeElement | |---| Specifications | Specification | |---| | HTML Standard # the-marquee-element-2 | Browser compatibility BCD tables load browser See also - CSS transform property - CSS translate property - CSS transforms module - CSS animations module HTMLMarqueeElement"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu", "title": "<menu>: The Menu element - HTML: HyperText Markup Language | MDN", "text": "<menu>: Menu element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <menu> HTML element described HTML specification semantic alternative <ul> , treated browsers (and exposed accessibility tree) different <ul> . represents unordered list items (which represented <li> elements). Try Attributes element includes global attributes. Usage notes <menu> <ul> elements represent unordered list items. key difference <ul> primarily contains items display, <menu> intended interactive items. Note: early versions HTML specification, <menu> element additional use case context menu. functionality considered obsolete specification. Examples Toolbar example, <menu> used create toolbar editing application. HTML <menu> <li><button onclick=\"copy()\">Copy</button></li> <li><button onclick=\"cut()\">Cut</button></li> <li><button onclick=\"paste()\">Paste</button></li> </menu> Note functionally different from: <ul> <li><button onclick=\"copy()\">Copy</button></li> <li><button onclick=\"cut()\">Cut</button></li> <li><button onclick=\"paste()\">Paste</button></li> </ul> CSS menu, ul { display: flex; list-style: none; padding: 0; width: 400px; } li { flex-grow: 1; } button { width: 100%; } Result Technical summary | Content categories | Flow content. element's children include least one | |---|---| | Permitted content | Zero occurrences | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | list | | Permitted ARIA roles | directory , group , listbox , menu , menubar , none , presentation , radiogroup , tablist , toolbar tree | | DOM interface | HTMLMenuElement | Specifications | Specification | |---| | HTML Standard # the-menu-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta", "title": "<meta>: The metadata element - HTML: HyperText Markup Language | MDN", "text": "<meta>: metadata element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <meta> HTML element represents metadata cannot represented HTML meta-related elements, like <base> , <link> , <script> , <style> <title> . type metadata provided <meta> element one following: - name attribute set, the<meta> element provides document-level metadata, applying whole page. - http-equiv attribute set, the<meta> element pragma directive, providing information equivalent given similarly-named HTTP header. - charset attribute set, the<meta> element charset declaration, giving character encoding document encoded. - itemprop attribute set, the<meta> element provides user-defined metadata. Attributes element includes global attributes. Note: attribute name specific meaning <meta> element, itemprop attribute must set <meta> element existing name , http-equiv charset attributes. charset - attribute declares document's character encoding. attribute present, value must ASCII case-insensitive match string \"utf-8\" , UTF-8 valid encoding HTML5 documents.<meta> elements declare character encoding must located entirely within first 1024 bytes document. content - attribute contains value http-equiv orname attribute, depending used. http-equiv - Defines pragma directive. attribute's name, short http-equivalent , allowed values names particular HTTP headers:content-security-policy - Allows page authors define content policy current page. Content policies mostly specify allowed server origins script endpoints help guard cross-site scripting attacks. Also see Content-Security-Policy . content-type - Declares MIME type document's character encoding. content attribute must value\"text/html; charset=utf-8\" specified. equivalent a<meta> element thecharset attribute specified carries restriction placement within document. Note: used documents served atext/html \u2014 documents served XML MIME type.Also see Content-Type . default-style - Sets name default CSS style sheet set. x-ua-compatible - specified, content attribute must value\"IE=edge\" . User agents required ignore pragma. refresh - instruction specifies: - number seconds page reloaded - content attribute's value non-negative integer. - number seconds page redirect another - content attribute's value non-negative integer followed by;url= valid URL. timer starts page completely loaded, load andpageshow events fired.Also see Refresh .Warning: Pages set refresh value run risk time interval short. People navigating aid assistive technology screen reader may unable read understand page's content automatically redirected. abrupt, unannounced updating page content may also disorienting people experiencing low vision conditions.- MDN Understanding WCAG, Guideline 2.2 explanations - MDN Understanding WCAG, Guideline 3.2 explanations - Understanding Success Criterion 2.2.1 | W3C Understanding WCAG 2.0 - Understanding Success Criterion 2.2.4 | W3C Understanding WCAG 2.0 - Understanding Success Criterion 3.2.5 | W3C Understanding WCAG 2.0 - number seconds page reloaded - media - media attribute defines media theme color defined thecontent attribute applied to. value media query, defaults toall attribute missing. attribute relevant element'sname attribute set totheme-color . Otherwise, effect, included. name - name andcontent attributes used together provide document metadata terms name-value pairs, thename attribute giving metadata name, thecontent attribute giving value.See standard metadata names details set standard metadata names defined HTML specification. Examples <meta charset=\"utf-8\" /> <!-- Redirect page 3 seconds --> <meta http-equiv=\"refresh\" content=\"3;url=https://www.mozilla.org\" /> Technical summary | Content categories | Metadata content. itemprop attribute present: flow content, phrasing content. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLMetaElement | Specifications | Specification | |---| | HTML Standard # the-meta-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name", "title": "Standard metadata names - HTML: HyperText Markup Language | MDN", "text": "Standard metadata names Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <meta> element used provide document metadata terms name-value pairs, name attribute giving metadata name, content attribute giving value. Standard metadata names defined HTML specification HTML specification defines following set standard metadata names: - application-name : name application running web page.Note: - Browsers may use identify application. different <title> element, usually contain application name, may also contain information like document name status. - Simple web pages define application-name. - Browsers may use identify application. different - author : name document's author. - description : short accurate summary content page. Search engines like Google may use field control appearance webpage search result. - generator : identifier software generated page. - keywords : words relevant page's content separated commas. - referrer : controls HTTPReferer header requests sent document:Values content attribute of<meta name=\"referrer\"> no-referrer send HTTP Referer header.origin Send origin document. no-referrer-when-downgrade Send full URL destination least secure current page (HTTP(S)\u2192HTTPS), send referrer less secure (HTTPS\u2192HTTP). default behavior. origin-when-cross-origin Send full URL (stripped parameters) same-origin requests, send origin cases. same-origin Send full URL (stripped parameters) same-origin requests. Cross-origin requests contain referrer header. strict-origin Send origin destination least secure current page (HTTP(S)\u2192HTTPS), send referrer less secure (HTTPS\u2192HTTP). strict-origin-when-cross-origin Send full URL (stripped parameters) same-origin requests. Send origin destination least secure current page (HTTP(S)\u2192HTTPS). Otherwise, send referrer. unsafe-URL Send full URL (stripped parameters) same-origin cross-origin requests. Note: - Dynamically inserting <meta name=\"referrer\"> (withdocument.write() orappendChild() ) makes referrer behavior unpredictable. - several conflicting policies defined, no-referrer policy applied. - Dynamically inserting - theme-color : indicates suggested color user agents use customize display page surrounding user interface. Thecontent attribute contains valid CSS<color> . Themedia attribute valid media query list included set media theme color metadata applies to. - color-scheme : specifies one color schemes document compatible.The browser use information tandem user's browser device settings determine colors use everything background foregrounds form controls scrollbars. primary use <meta name=\"color-scheme\"> indicate compatibility with\u2014and order preference for\u2014light dark color modes.The value content property forcolor-scheme may one following:normal - document unaware color schemes rendered using default color palette. light ,dark ,light dark ,dark light - One color schemes supported document. Specifying color scheme effect specifying once. Indicating multiple color schemes indicates first scheme preferred document, second specified scheme acceptable user prefers it. light - Indicates document supports light mode, light background dark foreground colors. specification, dark valid, forcing document render dark mode truly compatible result unreadable content; major browsers default light mode otherwise configured. example, indicate document prefers dark mode render functionally light mode well: html<meta name=\"color-scheme\" content=\"dark light\" /> works document level way CSS color-scheme property lets individual elements specify preferred accepted color schemes. styles adapt current color scheme using theprefers-color-scheme CSS media feature. Standard metadata names defined specifications CSS Device Adaptation specification defines following metadata name: - viewport : gives hints size initial size viewport.Values content <meta name=\"viewport\"> Value Possible subvalues Description width positive integer number, text device-width Defines pixel width viewport want website rendered at. height positive integer, text device-height Defines height viewport. used browser. initial-scale positive number 0.0 and10.0 Defines ratio device width ( device-width portrait mode ordevice-height landscape mode) viewport size.maximum-scale positive number 0.0 and10.0 Defines maximum amount zoom in. must greater equal minimum-scale behavior undefined. Browser settings ignore rule iOS10+ ignores default.minimum-scale positive number 0.0 and10.0 Defines minimum zoom level. must smaller equal maximum-scale behavior undefined. Browser settings ignore rule iOS10+ ignores default.user-scalable yes orno set , user able zoom webpage. default isyes . Browser settings ignore rule, iOS10+ ignores default.viewport-fit auto ,contain orcover auto value affect initial layout viewport, whole web page viewable.The contain value means viewport scaled fit largest rectangle inscribed within display.The cover value means viewport scaled fill device display. highly recommended make use safe area inset variables ensure important content end outside display.Warning: Disabling zooming capabilities setting user-scalable value ofno prevents people experiencing low vision conditions able read understand page content. metadata names WHATWG Wiki MetaExtensions page contains large set non-standard metadata names formally accepted yet; however, names included already used quite commonly practice \u2014 including following: - creator : name creator document, organization institution. one, several<meta> elements used. - googlebot , synonym ofrobots , followed Googlebot (the indexing crawler Google). - publisher : name document's publisher. - robots : behavior cooperative crawlers, \"robots\", use page. comma-separated list values below:Value Description Used index Allows robot index page (default). noindex Requests robot index page. follow Allows robot follow links page (default). nofollow Requests robot follow links page. Equivalent index, follow Google none Equivalent noindex, nofollow Google noarchive Requests search engine cache page content. Google, Yahoo, Bing nosnippet Prevents displaying description page search engine results. Google, Bing noimageindex Requests page appear referring page indexed image. Google nocache Synonym noarchive .Bing Note: - cooperative robots follow rules. expect prevent email harvesters them. - robot still needs access page order read rules. prevent bandwidth consumption, consider using robots.txt file appropriate. - <meta name=\"robots\"> element androbots.txt file serve different purposes:robots.txt controls crawling pages, affect indexing behavior controlled byrobots meta. page can't crawled may still indexed referenced another document. - want remove page, noindex work, robot visits page again. Ensure therobots.txt file preventing revisits. - values mutually exclusive, like index andnoindex , orfollow andnofollow . cases robot's behavior undefined may vary them. - crawler robots, like Google, Yahoo Bing, support values HTTP header X-Robots-Tag ; allows non-HTML documents like images use rules. Specifications | Specification | |---| | HTML Standard # standard-metadata-names | | Referrer Policy # referrer-policy-delivery-meta | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color", "title": "theme-color - HTML: HyperText Markup Language | MDN", "text": "theme-color Limited availability feature Baseline work widely-used browsers. theme-color value name attribute <meta> element indicates suggested color user agents use customize display page surrounding user interface. specified, content attribute must contain valid CSS <color> . Example <meta name=\"theme-color\" content=\"#4285f4\" /> following image shows effect <meta> element document displayed Chrome running Android mobile device. Image credit: Icons & Browser Colors, created shared Google used according terms described Creative Commons 4.0 Attribution License. provide media type query inside media attribute; color set media condition true. example: <meta name=\"theme-color\" media=\"(prefers-color-scheme: light)\" content=\"cyan\" /> <meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"black\" /> Specifications | Specification | |---| | HTML Standard # meta-theme-color | Browser compatibility BCD tables load browser See also color-scheme CSS propertyprefers-color-scheme media query"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter", "title": "<meter>: The HTML Meter element - HTML: HyperText Markup Language | MDN", "text": "<meter>: HTML Meter element <meter> HTML element represents either scalar value within known range fractional value. Try Attributes element includes global attributes. value - current numeric value. must minimum maximum values ( min attribute andmax attribute) specified. unspecified malformed, value is0 . specified, within range given themin attribute andmax attribute, value equal nearest end range.Note: Unless value attribute between0 and1 (inclusive), themin andmax attributes define range thevalue attribute's value within it. min - lower numeric bound measured range. must less maximum value ( max attribute), specified. unspecified, minimum value is0 . max - upper numeric bound measured range. must greater minimum value ( min attribute), specified. unspecified, maximum value is1 . low - upper numeric bound low end measured range. must greater minimum value ( min attribute), also must less high value maximum value (high attribute andmax attribute, respectively), specified. unspecified, less minimum value, thelow value equal minimum value. high - lower numeric bound high end measured range. must less maximum value ( max attribute), also must greater low value minimum value (low attribute andmin attribute, respectively), specified. unspecified, greater maximum value, thehigh value equal maximum value. optimum - attribute indicates optimal numeric value. must within range (as defined min attribute andmax attribute). used thelow attribute andhigh attribute, gives indication along range considered preferable. example, themin attribute thelow attribute, lower range considered preferred. browser may color meter's bar differently depending whether value less equal optimum value. form - optional attribute used explicitly set <form> owner the<meter> element. omitted, the<meter> associated ancestor<form> element form association set theform attribute another ancestor element, a<fieldset> , any. included, value must theid a<form> tree. Examples Basic Example HTML <p>Battery level: <meter min=\"0\" max=\"100\" value=\"75\">75%</meter></p> Result High low range example Note example min attribute omitted. allowed, default 0 . HTML <p> Student's exam score: <meter min=\"0\" low=\"50\" high=\"80\" max=\"100\" value=\"84\">84%</meter> </p> Result Technical Summary | Content categories | Flow content, phrasing content, labelable content, palpable content. | |---|---| | Permitted content | Phrasing content, must <meter> element among descendants. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | meter | | Permitted ARIA roles | role permitted | | DOM interface | HTMLMeterElement | Specifications | Specification | |---| | HTML Standard # the-meter-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav", "title": "<nav>: The Navigation Section element - HTML: HyperText Markup Language | MDN", "text": "<nav>: Navigation Section element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <nav> HTML element represents section page whose purpose provide navigation links, either within current document documents. Common examples navigation sections menus, tables contents, indexes. Try Attributes element includes global attributes. Usage notes - necessary links contained <nav> element.<nav> intended major block navigation links; typically the<footer> element often list links need a<nav> element. - document may several <nav> elements, example, one site navigation one intra-page navigation.aria-labelledby used case promote accessibility, see example. - User agents, screen readers targeting disabled users, use element determine whether omit initial rendering navigation-only content. Examples example, <nav> block used contain unordered list (<ul> ) links. appropriate CSS, presented sidebar, navigation bar, drop-down menu. <nav class=\"menu\"> <ul> <li><a href=\"#\">Home</a></li> <li><a href=\"#\">About</a></li> <li><a href=\"#\">Contact</a></li> </ul> </nav> semantics nav element providing links. However nav element contain list, contain kinds content well. navigation block, links provided prose: <nav> <h2>Navigation</h2> <p> home page. north lies <a href=\"/blog\">my blog</a>, whence sounds battle heard. east see large mountain, upon many <a href=\"/school\">school papers</a> littered. Far mountain spy little figure appears me, desperately scribbling <a href=\"/school/thesis\">thesis</a>. </p> <p> west several exits. One fun-looking exit labeled <a href=\"https://games.example.com/\">\"games\"</a>. Another boring-looking exit labeled <a href=\"https://isp.example.net/\">ISP\u2122</a>. </p> <p> south lies dark dank <a href=\"/about\">contacts page</a>. Cobwebs cover disused entrance, one point see rat run quickly page. </p> </nav> Technical summary | Content categories | Flow content, sectioning content, palpable content. | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | navigation | | Permitted ARIA roles | role permitted | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-nav-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr", "title": "<nobr>: The Non-Breaking Text element - HTML: HyperText Markup Language | MDN", "text": "<nobr>: Non-Breaking Text element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <nobr> HTML element prevents text contains automatically wrapping across multiple lines, potentially resulting user scroll horizontally see entire width text. Warning: Although element widely supported, never standard HTML, use it. Instead, use CSS property white-space like this: <span style=\"white-space: nowrap;\">Long line breaks</span> Specifications | Specification | |---| | HTML Standard # nobr | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noembed", "title": "<noembed>: The Embed Fallback element - HTML: HyperText Markup Language | MDN", "text": "<noembed>: Embed Fallback element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <noembed> HTML element obsolete, non-standard way provide alternative, \"fallback\", content browsers support <embed> element support type embedded content author wishes use. element deprecated HTML 4.01 favor placing fallback content opening closing tags <object> element. Note: element currently still works many browsers, obsolete used. Use <object> instead, fallback content opening closing tags element. Examples message inside <noembed> tag appear browser support <embed> tag. Show alternative content <embed type=\"vide/webm\" src=\"/media/examples/flower.mp4\" width=\"200\" height=\"200\"> <noembed> <h1>Alternative content</h1> </noembed> </embed> Specifications | Specification | |---| | HTML Standard # noembed | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noframes", "title": "<noframes>: The Frame Fallback element - HTML: HyperText Markup Language | MDN", "text": "<noframes>: Frame Fallback element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <noframes> HTML element provides content presented browsers support (or disabled support for) <frame> element. Although commonly-used browsers support frames, exceptions, including certain special-use browsers including mobile browsers, well text-mode browsers. <noframes> element contain HTML elements allowed within body HTML document, except <frameset> <frame> elements, since using frames supported make sense. <noframes> used present message explaining user's browser support frames, ideally used present alternate form site use frames still offers similar functionality. Note: element obsolete used, since <frame> <frameset> elements also obsolete. frames needed all, presented using <iframe> element. Attributes Like HTML elements, element supports global attributes. attributes available. Example example, see frameset two frames. addition, <noframes> used present explanatory message user agent support frames. <!doctype html> <html lang=\"en-US\"> <head> <!-- Document metadata goes --> </head> <frameset rows=\"45%, 55%\"> <frame src=\"https://developer.mozilla.org/en/HTML/Element/frameset\" /> <frame src=\"https://developer.mozilla.org/en/HTML/Element/frame\" /> <noframes> <p> seems browser support frames configured allow them. </p> </noframes> </frameset> </html> Specifications | Specification | |---| | HTML Standard # noframes | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript", "title": "<noscript>: The Noscript element - HTML: HyperText Markup Language | MDN", "text": "<noscript>: Noscript element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <noscript> HTML element defines section HTML inserted script type page unsupported scripting currently turned browser. Attributes element includes global attributes. Examples html <noscript> <!-- anchor linking external file --> <a href=\"https://www.mozilla.org/\">External Link</a> </noscript> <p>Rocks!</p> Result scripting enabled Rocks! Result scripting disabled Rocks! Technical summary | Content categories | Metadata content, flow content, phrasing content. | |---|---| | Permitted content | scripting disabled descendant <head> element: order, zero <link> elements, zero <style> elements, zero <meta> elements.When scripting disabled descendant <head> element: transparent content, <noscript> element must among descendants.Otherwise: flow content phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content, ancestor <noscript> element, <head> element (but HTML document), ancestor <noscript> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-noscript-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object", "title": "<object>: The External Object element - HTML: HyperText Markup Language | MDN", "text": "<object>: External Object element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <object> HTML element represents external resource, treated image, nested browsing context, resource handled plugin. Try Attributes element includes global attributes. archive Deprecated- space-separated list URIs archives resources object. border Deprecated- width border around control, pixels. classid Deprecated- URI object's implementation. used together with, place of, data attribute. codebase Deprecated- base path used resolve relative URIs specified classid, data, archive. specified, default base URI current document. codetype Deprecated- content type data specified classid. data - address resource valid URL. least one data type must defined. declare Deprecated- presence Boolean attribute makes element declaration only. object must instantiated subsequent <object> element. Repeat the<object> element completely time resource reused. form - form element, any, object element associated (its form owner). value attribute must ID <form> element document. height - height displayed resource, CSS pixels. \u2014 (Absolute values only. percentages) name - name valid browsing context (HTML5), name control (HTML 4). standby Deprecated- message browser show loading object's implementation data. type - content type resource specified data. least one data type must defined. usemap Deprecated- hash-name reference <map> element; '#' followed value aname map element. width - width display resource, CSS pixels. \u2014 (Absolute values only. percentages) Examples Embed video HTML <object type=\"video/webm\" data=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\" width=\"600\" height=\"140\"> <img src=\"path/image.jpg\" alt=\"useful image description\" /> </object> Result video example fails load, user provided image fallback content. <img> tag used display image. include src attribute set path image want embed. also include alt attribute, provides image accessible name. image also fails load, content alt attribute displayed. Technical summary | Content categories | Flow content; phrasing content; embedded content, palpable content; element usemap attribute, interactive content; listed, submittable form-associated element. | |---|---| | Permitted content | zero <param> elements, transparent. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | application , document , img | | DOM interface | HTMLObjectElement | Specifications | Specification | |---| | HTML Standard # the-object-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol", "title": "<ol>: The Ordered List element - HTML: HyperText Markup Language | MDN", "text": "<ol>: Ordered List element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <ol> HTML element represents ordered list items \u2014 typically rendered numbered list. Try Attributes element also accepts global attributes. reversed - Boolean attribute specifies list's items reverse order. Items numbered high low. start - integer start counting list items. Always Arabic numeral (1, 2, 3, etc.), even numbering type letters Roman numerals. example, start numbering elements letter \"d\" Roman numeral \"iv,\" usestart=\"4\" . type - Sets numbering type: lowercase lettersA uppercase lettersi lowercase Roman numeralsI uppercase Roman numerals1 numbers (default) specified type used entire list unless different type attribute used enclosed<li> element.Note: Unless type list number matters (like legal technical documents items referenced number/letter), use CSS list-style-type property instead. Usage notes Typically, ordered list items display preceding marker, number letter. <ol> <ul> (or synonym <menu> ) elements may nest deeply desired, alternating <ol> , <ul> (or <menu> ) needed. <ol> <ul> elements represent list items. difference <ol> element, order meaningful. example: - Steps recipe - Turn-by-turn directions - list ingredients decreasing proportion nutrition information labels determine list use, try changing order list items; meaning changes, use <ol> element \u2014 otherwise use <ul> otherwise, <menu> list menu. Examples Basic example <ol> <li>Fee</li> <li>Fi</li> <li>Fo</li> <li>Fum</li> </ol> Result Using Roman Numeral type <ol type=\"i\"> <li>Introduction</li> <li>List Grievances</li> <li>Conclusion</li> </ol> Result Using start attribute <p>Finishing places contestants winners' circle:</p> <ol start=\"4\"> <li>Speedwalk Stu</li> <li>Saunterin' Sam</li> <li>Slowpoke Rodriguez</li> </ol> Result Nesting lists <ol> <li>first item</li> <li> second item <!-- closing </li> tag here! --> <ol> <li>second item first subitem</li> <li>second item second subitem</li> <li>second item third subitem</li> </ol> </li> <!-- Here's closing </li> tag --> <li>third item</li> </ol> Result Unordered list inside ordered list <ol> <li>first item</li> <li> second item <!-- closing </li> tag here! --> <ul> <li>second item first subitem</li> <li>second item second subitem</li> <li>second item third subitem</li> </ul> </li> <!-- Here's closing </li> tag --> <li>third item</li> </ol> Result Technical summary | Content categories | Flow content, <ol> element's children include least one <li> element, palpable content. | |---|---| | Permitted content | Zero <li> , <script> <template> elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | list | | Permitted ARIA roles | directory , group , listbox , menu , menubar , none , presentation , radiogroup , tablist , toolbar , tree | | DOM interface | HTMLOListElement | Specifications | Specification | |---| | HTML Standard # the-ol-element | Browser compatibility BCD tables load browser See also - CSS properties may specially useful style <ol> element:- list-style property, choose way ordinal displays - CSS counters, handle complex nested lists - line-height property, simulate deprecatedcompact attribute - margin property, control list indentation -"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup", "title": "<optgroup>: The Option Group element - HTML: HyperText Markup Language | MDN", "text": "<optgroup>: Option Group element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. Try Note: Optgroup elements may nested. Attributes element includes global attributes. disabled - Boolean attribute set, none items option group selectable. Often browsers grey control receive browsing events, like mouse clicks focus-related ones. label - name group options, browser use labeling options user interface. attribute mandatory element used. Examples html <select> <optgroup label=\"Group 1\"> <option>Option 1.1</option> </optgroup> <optgroup label=\"Group 2\"> <option>Option 2.1</option> <option>Option 2.2</option> </optgroup> <optgroup label=\"Group 3\" disabled> <option>Option 3.1</option> <option>Option 3.2</option> <option>Option 3.3</option> </optgroup> </select> Result Technical summary | Content categories | None. | |---|---| | Permitted content | Zero <option> elements. | | Tag omission | start tag mandatory. end tag optional element immediately followed another <optgroup> element, parent element content. | | Permitted parents | <select> element. | | Implicit ARIA role | group | | Permitted ARIA roles | role permitted | | DOM interface | HTMLOptGroupElement | Specifications | Specification | |---| | HTML Standard # the-optgroup-element | Browser compatibility BCD tables load browser See also - form-related elements: <form> ,<legend> ,<label> ,<button> ,<select> ,<datalist> ,<option> ,<fieldset> ,<textarea> ,<input> ,<output> ,<progress> and<meter> ."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option", "title": "<option>: The HTML Option element - HTML: HyperText Markup Language | MDN", "text": "<option>: HTML Option element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <option> HTML element used define item contained <select> , <optgroup> , <datalist> element. such, <option> represent menu items popups lists items HTML document. Try Attributes element includes global attributes. disabled - Boolean attribute set, option checkable. Often browsers grey control receive browsing event, like mouse clicks focus-related ones. attribute set, element still disabled one ancestors disabled <optgroup> element. label - attribute text label indicating meaning option. label attribute defined, value element text content. selected - present, Boolean attribute indicates option initially selected. <option> element descendant a<select> element whosemultiple attribute set, one single<option> this<select> element may theselected attribute. value - content attribute represents value submitted form, option selected. attribute omitted, value taken text content option element. Styling CSS Styling <option> element highly limited. Options inherit font set parent. Firefox, color background-color set, however Chrome Safari possible set properties. find details styling guide advanced form styling. Examples See <select> examples. Technical summary | Content categories | None. | |---|---| | Permitted content | Text, possibly escaped characters (like \u00e9 ). | | Tag omission | start tag mandatory. end tag optional element immediately followed another <option> element <optgroup> , parent element content. | | Permitted parents | <select> , <optgroup> <datalist> element. | | Implicit ARIA role | option | | Permitted ARIA roles | role permitted | | DOM interface | HTMLOptionElement | Specifications | Specification | |---| | HTML Standard # the-option-element | Browser compatibility BCD tables load browser See also - form-related elements: <form> ,<legend> ,<label> ,<button> ,<select> ,<datalist> ,<optgroup> ,<fieldset> ,<textarea> ,<input> ,<output> ,<progress> and<meter> ."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output", "title": "<output>: The Output element - HTML: HyperText Markup Language | MDN", "text": "<output>: Output element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since October 2018. <output> HTML element container element site app inject results calculation outcome user action. Attributes element includes global attributes. - space-separated list elements' id s, indicating elements contributed input values (or otherwise affected) calculation. form - <form> element associate output (its form owner). value attribute must theid a<form> document. (If attribute set, the<output> associated ancestor<form> element, any.)This attribute lets associate <output> elements to<form> anywhere document, inside a<form> . also override ancestor<form> element. The<output> element's name content submitted form submitted. name - element's name. Used form.elements API. <output> value, name, contents submitted form submission. Accessibility Many browsers implement element aria-live region. Assistive technology thereby announce results UI interactions posted inside without requiring focus switched away controls produce results. Examples following example, form provides slider whose value range 0 100 , <input> element enter second number. two numbers added together, result displayed <output> element time value controls changes. <form id=\"example-form\"> <input type=\"range\" id=\"b\" name=\"b\" value=\"50\" /> + <input type=\"number\" id=\"a\" name=\"a\" value=\"10\" /> = <output name=\"result\" for=\"a b\">60</output> </form> const form = document.getElementById(\"example-form\"); const = form.elements[\"a\"]; const b = form.elements[\"b\"]; const result = form.elements[\"result\"]; function updateResult() { const aValue = parseInt(a.value); const bValue = parseInt(b.value); result.value = aValue + bValue; } form.addEventListener(\"input\", updateResult); updateResult(); Result Technical summary | Content categories | Flow content, phrasing content, listed, labelable, resettable form-associated element, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | status | | Permitted ARIA roles | | | DOM interface | HTMLOutputElement | Specifications | Specification | |---| | HTML Standard # the-output-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p", "title": "<p>: The Paragraph element - HTML: HyperText Markup Language | MDN", "text": "<p>: Paragraph element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <p> HTML element represents paragraph. Paragraphs usually represented visual media blocks text separated adjacent blocks blank lines and/or first-line indentation, HTML paragraphs structural grouping related content, images form fields. Paragraphs block-level elements, notably automatically close another block-level element parsed closing </p> tag. See \"Tag omission\" below. Try Attributes element includes global attributes. Note: align attribute <p> tags obsolete used. Accessibility Breaking content paragraphs helps make page accessible. Screen-readers assistive technology provide shortcuts let users skip next previous paragraph, letting skim content like white space lets visual users skip around. Using empty <p> elements add space paragraphs problematic people navigate screen-reading technology. Screen readers may announce paragraph's presence, content contained within \u2014 none. confuse frustrate person using screen reader. extra space desired, use CSS properties like margin create effect: p { margin-bottom: 2em; /* increase white space paragraph */ } Examples HTML <p> first paragraph text. first paragraph text. first paragraph text. first paragraph text. </p> <p> second paragraph. second paragraph. second paragraph. second paragraph. </p> Result Styling paragraphs default, browsers separate paragraphs single blank line. Alternate separation methods, first-line indentation, achieved CSS: HTML <p> Separating paragraphs blank lines easiest readers scan, also separated indenting first lines. often used take less space, save paper print. </p> <p> Writing intended edited, school papers rough drafts, uses blank lines indentation separation. finished works, combining considered redundant amateurish. </p> <p> old writing, paragraphs separated special character: \u00b6, <i>pilcrow</i>. Nowadays, considered claustrophobic hard read. </p> <p> hard read? See yourself: <button data-toggle-text=\"Oh no! Switch back!\"> Use pilcrow paragraphs </button> </p> CSS p { margin: 0; text-indent: 3ch; } p.pilcrow { text-indent: 0; display: inline; } p.pilcrow + p.pilcrow::before { content: \" \u00b6 \"; } JavaScript document.querySelector(\"button\").addEventListener(\"click\", (event) => { document.querySelectorAll(\"p\").forEach((paragraph) => { paragraph.classList.toggle(\"pilcrow\"); }); [event.target.innerText, event.target.dataset.toggleText] = [ event.target.dataset.toggleText, event.target.innerText, ]; }); Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | start tag required. end tag may omitted <p> element immediately followed <address> , <article> , <aside> , <blockquote> , <details> , <div> , <dl> , <fieldset> , <figcaption> , <figure> , <footer> , <form> , h1, h2, h3, h4, h5, h6, <header> , <hgroup> , <hr> , <main> , <menu> , <nav> , <ol> , <pre> , <search> , <section> , <table> , <ul> another <p> element, content parent element parent element <a> , <audio> , <del> , <ins> , <map> , <noscript> <video> element, autonomous custom element. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | paragraph | | Permitted ARIA roles | | | DOM interface | HTMLParagraphElement | Specifications | Specification | |---| | HTML Standard # the-p-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param", "title": "<param>: The Object Parameter element - HTML: HyperText Markup Language | MDN", "text": "<param>: Object Parameter element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <param> HTML element defines parameters <object> element. Attributes element includes global attributes. name Deprecated- Name parameter. value Deprecated- Specifies value parameter. type Deprecated- used valuetype set toref . Specifies MIME type values found URI specified value. valuetype Deprecated- Specifies type value attribute. Possible values are:data : Default value. value passed object's implementation string.ref : value URI resource run-time values stored.object : ID another<object> document. Technical summary | Content categories | None. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | <object> flow content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLParamElement | Specifications | Specification | |---| | HTML Standard # the-param-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture", "title": "<picture>: The Picture element - HTML: HyperText Markup Language | MDN", "text": "<picture>: Picture element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since March 2016. <picture> HTML element contains zero <source> elements one <img> element offer alternative versions image different display/device scenarios. browser consider child <source> element choose best match among them. matches found\u2014or browser support <picture> element\u2014the URL <img> element's src attribute selected. selected image presented space occupied <img> element. Try decide URL load, user agent examines <source> 's srcset , media , type attributes select compatible image best matches current layout capabilities display device. <img> element serves two purposes: - describes size attributes image presentation. - provides fallback case none offered <source> elements able provide usable image. Common use cases <picture> : - Art direction. Cropping modifying images different media conditions (for example, loading simpler version image many details, smaller displays). - Offering alternative image formats, cases certain formats supported. Note: example, newer formats like AVIF WEBP many advantages, might supported browser. list supported image formats found in: Image file type format guide. - Saving bandwidth speeding page load times loading appropriate image viewer's display. providing higher-density versions image high-DPI (Retina) display, use srcset <img> element instead. lets browsers opt lower-density versions data-saving modes, write explicit media conditions. Attributes element includes global attributes. Usage notes use object-position property adjust positioning image within element's frame, object-fit property control image resized fit within frame. Note: Use properties child <img> element, <picture> element. Examples examples demonstrate different attributes <source> element change selection image inside <picture> . media attribute media attribute specifies media condition (similar media query) user agent evaluate <source> element. <source> 's media condition evaluates false , browser skips evaluates next element inside <picture> . <picture> <source srcset=\"mdn-logo-wide.png\" media=\"(min-width: 600px)\" /> <img src=\"mdn-logo-narrow.png\" alt=\"MDN\" /> </picture> srcset attribute srcset attribute used offer list possible images based size display's pixel density. composed comma-separated list image descriptors. image descriptor composed URL image, either: - width descriptor, followed w (such as300w ); - pixel density descriptor, followed x (such as2x ) serve high-res image high-DPI screens. Make sure note that: - width pixel density descriptors used together - missing pixel density descriptor implies 1x - duplicate descriptor values allowed (2x & 2x, 100w & 100w) following example illustrates usage srcset attribute <source> element specify high-density standard-resolution image: <picture> <source srcset=\"logo.png, logo-1.5x.png 1.5x\" /> <img src=\"logo.png\" alt=\"MDN Web Docs logo\" height=\"320\" width=\"320\" /> </picture> srcset attribute also used <img> element without needing <picture> element. following example demonstrates use srcset attribute specify standard-resolution high-density images, respectively: <img srcset=\"logo.png, logo-2x.png 2x\" src=\"logo.png\" height=\"320\" width=\"320\" alt=\"MDN Web Docs logo\" /> sizes attribute mandatory using srcset, recommended use order provide additional information browser help select best image source. Without sizes, browser use default size image specified dimensions pixels. may best fit devices, especially image displayed different screen sizes different contexts. Please note sizes effect width dimension descriptors provided srcset instead pixel ratio values (200w instead 2x example). information using srcset , see Responsive images documentation. type attribute type attribute specifies MIME type resource URL(s) <source> element's srcset attribute. user agent support given type, <source> element skipped. <picture> <source srcset=\"photo.avif\" type=\"image/avif\" /> <source srcset=\"photo.webp\" type=\"image/webp\" /> <img src=\"photo.jpg\" alt=\"photo\" /> </picture> Technical summary | Content categories | Flow content, phrasing content, embedded content | |---|---| | Permitted content | Zero <source> elements, followed one <img> element, optionally intermixed script-supporting elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element allows embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLPictureElement | Specifications | Specification | |---| | HTML Standard # the-picture-element | Browser compatibility BCD tables load browser See also <img> element<source> element- Positioning sizing picture within frame: object-position andobject-fit - Image file type format guide"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext", "title": "<plaintext>: The Plain Text element (Deprecated) - HTML: HyperText Markup Language | MDN", "text": "<plaintext>: Plain Text element (Deprecated) Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <plaintext> HTML element renders everything following start tag raw text, ignoring following HTML. closing tag, since everything considered raw text. Warning: use element. <plaintext> deprecated since HTML 2, browsers implemented it. Browsers implement consistently.<plaintext> obsolete; browsers accept may instead treat a<pre> element still interprets HTML within.- <plaintext> first element page (other non-displayed elements, like<head> ), use HTML all. Instead serve text file thetext/plain MIME-type. - Instead <plaintext> , use the<pre> element or, semantically accurate (such inline text), the<code> element. Escape any< ,> and& characters, prevent browsers inadvertently parsing element content HTML. - monospaced font applied HTML element via CSS font-family style themonospace generic value. Attributes element attributes global attributes common elements. DOM interface element implements HTMLElement interface. Specifications | Specification | |---| | HTML Standard # plaintext | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/portal", "title": "<portal>: The Portal element - HTML: HyperText Markup Language | MDN", "text": "<portal>: Portal element Experimental: experimental technology Check Browser compatibility table carefully using production. <portal> HTML element enables embedding another HTML page current one purposes allowing smoother navigation new pages. <portal> similar <iframe> . <iframe> allows separate browsing context embedded. However, embedded content <portal> limited <iframe> . cannot interacted with, therefore suitable embedding widgets document. Instead, <portal> acts preview content another page. navigated therefore allowing seamless transition embedded content. Attributes element includes global attributes. referrerpolicy - Sets referrer policy use requesting page URL given value src attribute. src - URL page embed. Accessibility preview displayed <portal> interactive, therefore receive input events focus. Therefore embedded contents portal exposed elements accessibility tree. portal navigated activated like button, default behavior clicking portal activate it. Portals given default label title embedded page. title present visible text preview concatenated create label. aria-label attribute used override this. Portals used prerendering hidden hidden HTML attribute CSS display property value none . using animations portal activation prefers-reduced-motion media feature respected. Examples Basic example following example embed contents https://example.com preview. <portal id=\"exampleportal\" src=\"https://example.com/\"></portal> Technical summary | Implicit ARIA role | button | |---|---| | DOM interface | HTMLPortalElement | Specifications | Specification | |---| | Portals # the-portal-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre", "title": "<pre>: The Preformatted Text element - HTML: HyperText Markup Language | MDN", "text": "<pre>: Preformatted Text element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <pre> HTML element represents preformatted text presented exactly written HTML file. text typically rendered using non-proportional, monospaced, font. Whitespace inside element displayed written. default, <pre> block-level element, i.e. default display value block . Try display reserved characters < , > , & , \" within <pre> tag, characters must escaped using respective character references. <pre> elements commonly contain <code> , <samp> , <kbd> elements, represent computer code, computer output, user input, respectively. Attributes element includes global attributes. width Deprecated Non-standard- Contains preferred count characters line have. Though technically still implemented, attribute visual effect; achieve effect, use CSS width instead. wrap Non-standard Deprecated- hint indicating overflow must happen. modern browser hint ignored visual effect results present; achieve effect, use CSS white-space instead. Accessibility important provide alternate description images diagrams created using preformatted text. alternate description clearly concisely describe image diagram's content. People experiencing low vision conditions browsing aid assistive technology screen reader may understand preformatted text characters representing read sequence. combination <figure> <figcaption> elements, supplemented ARIA role aria-label attributes pre element allow preformatted ASCII art announced image alternative text, figcaption serving image's caption. Example <figure> <pre role=\"img\" aria-label=\"ASCII COW\"> ___________________________ < I'm expert field. > --------------------------- \\ ^__^ \\ (oo)\\_______ (__)\\ )\\/\\ ||----w | || || </pre> <figcaption id=\"cow-caption\"> cow saying, \"I'm expert field.\" cow illustrated using preformatted text characters. </figcaption> </figure> Examples Basic example HTML <p>Using CSS change font color easy.</p> <pre><code> body { color: red; } </code></pre> Result Escaping reserved characters HTML <pre><code> let = 5; (i < 10 && > 0) return \"Single Digit Number\" </code></pre> Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLPreElement | Specifications | Specification | |---| | HTML Standard # the-pre-element | Browser compatibility BCD tables load browser See also - CSS: white-space ,word-break - Character reference - Related element: <code> ,<samp> ,<kbd>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress", "title": "<progress>: The Progress Indicator element - HTML: HyperText Markup Language | MDN", "text": "<progress>: Progress Indicator element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <progress> HTML element displays indicator showing completion progress task, typically displayed progress bar. Try Attributes element includes global attributes. max - attribute describes much work task indicated progress element requires. Themax attribute, present, must value greater than0 valid floating point number. default value is1 . value - attribute specifies much task completed. must valid floating point number 0 andmax , between0 and1 ifmax omitted. novalue attribute, progress bar indeterminate; indicates activity ongoing indication long expected take. Note: Unlike <meter> element, minimum value always 0, min attribute allowed <progress> element. Note: :indeterminate pseudo-class used match indeterminate progress bars. change progress bar indeterminate giving value must remove value attribute element.removeAttribute('value') . Accessibility Labelling cases provide accessible label using <progress> . use standard ARIA labelling attributes aria-labelledby aria-label would element role=\"progressbar\" , using <progress> alternatively use <label> element. Note: Text placed element's tags accessible label, recommended fallback old browsers support element. Examples <label> Uploading Document: <progress value=\"70\" max=\"100\">70 %</progress> </label> <!-- --> <br /> <label for=\"progress-bar\">Uploading Document</label> <progress id=\"progress-bar\" value=\"70\" max=\"100\">70 %</progress> Result Describing particular region <progress> element describing loading progress section page, use aria-describedby point status, set aria-busy=\"true\" section updated, removing aria-busy attribute finished loading. Examples <div aria-busy=\"true\" aria-describedby=\"progress-bar\"> <!-- content region loading --> </div> <!-- ... --> <progress id=\"progress-bar\" aria-label=\"Content loading\u2026\"></progress> Result Examples <progress value=\"70\" max=\"100\">70 %</progress> Result Technical summary | Content categories | Flow content, phrasing content, labelable content, palpable content. | |---|---| | Permitted content | Phrasing content, must <progress> element among descendants. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | progressbar | | Permitted ARIA roles | role permitted | | DOM interface | HTMLProgressElement | Specifications | Specification | |---| | HTML Standard # the-progress-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q", "title": "<q>: The Inline Quotation element - HTML: HyperText Markup Language | MDN", "text": "<q>: Inline Quotation element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <q> HTML element indicates enclosed text short inline quotation. modern browsers implement surrounding text quotation marks. element intended short quotations require paragraph breaks; long quotations use <blockquote> element. Try Attributes element includes global attributes. cite - value attribute URL designates source document message information quoted. attribute intended point information explaining context reference quote. Examples html <p> According Mozilla's website, <q cite=\"https://www.mozilla.org/en-US/about/history/details/\"> Firefox 1.0 released 2004 became big success. </q> </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLQuoteElement | Specifications | Specification | |---| | HTML Standard # the-q-element | Browser compatibility BCD tables load browser See also - <blockquote> element long quotations. - <cite> element source citations."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb", "title": "<rb>: The Ruby Base element - HTML: HyperText Markup Language | MDN", "text": "<rb>: Ruby Base element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <rb> HTML element used delimit base text component <ruby> annotation, i.e. text annotated. One <rb> element wrap separate atomic segment base text. Attributes element includes global attributes. Usage notes - Ruby annotations showing pronunciation East Asian characters, like using Japanese furigana Taiwanese bopomofo characters. <rb> element used separate segment ruby base text. - Even though <rb> void element, common include opening tag element source code, ruby markup less complex easier read. browser fill full element rendered version. - need include one <rt> element base segment/<rb> element want annotate. Examples Using rb example, provide annotation original character equivalent \"Kanji\": <ruby> <rb>\u6f22</rb><rb>\u5b57 </rb><rp>(</rp><rt>kan</rt><rt>ji</rt><rp>)</rp> </ruby> Note we've included two <rb> elements, delimit two separate parts ruby base text. annotation hand delimited two <rt> elements. Result Separate annotations Note could also write example two base text parts annotated completely separately. case need include <rb> elements: <ruby> \u6f22 <rp>(</rp><rt>Kan</rt><rp>)</rp> \u5b57 <rp>(</rp><rt>ji</rt><rp>)</rp> </ruby> Result See article <ruby> element examples. Technical summary | Content categories | None. | |---|---| | Permitted content | child <ruby> element. | | Tag omission | end tag omitted element immediately followed <rt> , <rtc> , <rp> element another <rb> element, content parent element. | | Permitted parents | <ruby> element. | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # rb | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp", "title": "<rp>: The Ruby Fallback Parenthesis element - HTML: HyperText Markup Language | MDN", "text": "<rp>: Ruby Fallback Parenthesis element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <rp> HTML element used provide fall-back parentheses browsers support display ruby annotations using <ruby> element. One <rp> element enclose opening closing parentheses wrap <rt> element contains annotation's text. Try Attributes element includes global attributes. Usage notes - Ruby annotations showing pronunciation East Asian characters, like using Japanese furigana Taiwanese bopomofo characters. <rp> element used case lack of<ruby> element support; the<rp> content provides displayed order indicate presence ruby annotation, usually parentheses. Examples Using ruby annotations Without ruby support browser support ruby annotations, result looks like instead: Technical summary | Content categories | None. | |---|---| | Permitted content | Text | | Tag omission | end tag omitted element immediately followed <rt> another <rp> element, content parent element. | | Permitted parents | <ruby> element. <rp> must positioned immediately <rt> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-rp-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt", "title": "<rt>: The Ruby Text element - HTML: HyperText Markup Language | MDN", "text": "<rt>: Ruby Text element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <rt> HTML element specifies ruby text component ruby annotation, used provide pronunciation, translation, transliteration information East Asian typography. <rt> element must always contained within <ruby> element. Try See article <ruby> element examples. Attributes element includes global attributes. Examples Using ruby annotations example provides Romaji transliteration kanji characters within <ruby> element: html <ruby> \u6f22 <rt>Kan</rt> \u5b57 <rt>ji</rt> </ruby> Result Technical summary | Content categories | None. | |---|---| | Permitted content | Phrasing content. | | Tag omission | end tag may omitted <rt> element immediately followed <rt> <rp> element, content parent element | | Permitted parents | <ruby> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-rt-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc", "title": "<rtc>: The Ruby Text Container element - HTML: HyperText Markup Language | MDN", "text": "<rtc>: Ruby Text Container element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <rtc> HTML element embraces semantic annotations characters presented ruby <rb> elements used inside <ruby> element. <rb> elements pronunciation (<rt> ) semantic (<rtc> ) annotations. Try Attributes element includes global attributes. Examples html <div class=\"info\"> <ruby> <rtc> <rb>\u65e7</rb><rt>ji\u00f9</rt> <rb>\u91d1</rb><rt>j\u012bn</rt> <rb>\u5c71</rb><rt>sh\u0101n</rt> </rtc> <rtc>San Francisco</rtc> </ruby> </div> Result Technical summary | Content categories | None. | |---|---| | Permitted content | Phrasing content <rt> elements. | | Tag omission | closing tag omitted immediately followed <rb> , <rtc> <rt> element opening tag parent closing tag. | | Permitted parents | <ruby> element. | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # rtc | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby", "title": "<ruby>: The Ruby Annotation element - HTML: HyperText Markup Language | MDN", "text": "<ruby>: Ruby Annotation element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <ruby> HTML element represents small annotations rendered above, below, next base text, usually used showing pronunciation East Asian characters. also used annotating kinds text, usage less common. term ruby originated unit measurement used typesetters, representing smallest size text printed newsprint remaining legible. Try Attributes element includes global attributes. Examples Example 1: Character html <ruby> \u6f22 <rp>(</rp><rt>Kan</rt><rp>)</rp> \u5b57 <rp>(</rp><rt>ji</rt><rp>)</rp> </ruby> Result Example 2: Word html <ruby> \u660e\u65e5 <rp>(</rp><rt>Ashita</rt><rp>)</rp> </ruby> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-ruby-element | Browser compatibility BCD tables load browser See also <rt> <rp> <rb> <rtc> text-transform : full-size-kana"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s", "title": "<s>: The Strikethrough element - HTML: HyperText Markup Language | MDN", "text": "<s>: Strikethrough element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <s> HTML element renders text strikethrough, line it. Use <s> element represent things longer relevant longer accurate. However, <s> appropriate indicating document edits; that, use <del> <ins> elements, appropriate. Try Attributes element includes global attributes. Accessibility presence element announced screen reading technology default configuration. made announced using CSS content property, along ::before ::after pseudo-elements. s::before, s::after { clip-path: inset(100%); clip: rect(1px, 1px, 1px, 1px); height: 1px; overflow: hidden; position: absolute; white-space: nowrap; width: 1px; } s::before { content: \" [start stricken text] \"; } s::after { content: \" [end stricken text] \"; } people use screen readers deliberately disable announcing content creates extra verbosity. this, important abuse technique apply situations knowing content struck would adversely affect understanding. Examples .sold-out { text-decoration: line-through; } <s>Today's Special: Salmon</s> SOLD OUT<br /> <span class=\"sold-out\">Today's Special: Salmon</span> SOLD Result Technical summary | Content categories | Phrasing content, flow content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | deletion | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-s-element | Browser compatibility BCD tables load browser See also - <strike> element, alter ego the<s> element, obsolete used websites anymore. - <del> element used instead data deleted. - CSS text-decoration-line property used achieve former visual aspect the<s> element."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp", "title": "<samp>: The Sample Output element - HTML: HyperText Markup Language | MDN", "text": "<samp>: Sample Output element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <samp> HTML element used enclose inline text represents sample (or quoted) output computer program. contents typically rendered using browser's default monospaced font (such Courier Lucida Console). Try Attributes element includes global attributes. Usage notes use CSS rule override browser's default font face <samp> element; however, possible browser's preferences may take precedence CSS specify. CSS override default font face would look like this: samp { font-family: \"Courier\"; } Note: need element serve container output generated website app's JavaScript code, instead use <output> element. Examples Basic example basic example, paragraph includes example output program. <p> process complete, utility output text <samp>Scan complete. Found <em>N</em> results.</samp> proceed next step. </p> Result Sample output including user input nest <kbd> element within <samp> block present example includes text entered user. example, consider text presenting transcript Linux (or macOS) console session: HTML <pre> <samp><span class=\"prompt\">mike@interwebz:~$</span> <kbd>md5 -s \"Hello world\"</kbd> MD5 (\"Hello world\") = 3e25960a79dbc69b674cd4ec67a72c62 <span class=\"prompt\">mike@interwebz:~$</span> <span class=\"cursor\">\u2588</span></samp></pre> Note use <span> allow customization appearance specific portions sample text shell prompts cursor. Note also use <kbd> represent command user entered prompt sample text. CSS CSS achieves appearance want is: .prompt { color: #b00; } samp > kbd { font-weight: bold; } .cursor { color: #00b; } gives prompt cursor fairly subtle colorization emboldens keyboard input within sample text. Result resulting output this: Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-samp-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script", "title": "<script>: The Script element - HTML: HyperText Markup Language | MDN", "text": "<script>: Script element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <script> HTML element used embed executable code data; typically used embed refer JavaScript code. <script> element also used languages, WebGL's GLSL shader programming language JSON. Attributes element includes global attributes. async - classic scripts, async attribute present, classic script fetched parallel parsing evaluated soon available.For module scripts, async attribute present scripts dependencies fetched parallel parsing evaluated soon available.Warning: attribute must used src attribute absent (i.e. inline scripts) classic scripts, case would effect.This attribute allows elimination parser-blocking JavaScript browser would load evaluate scripts continuing parse. defer similar effect case.If attribute specified defer attribute, element act theasync attribute specified.This boolean attribute: presence boolean attribute element represents true value, absence attribute represents false value. See Browser compatibility notes browser support. See also Async scripts asm.js. attributionsrc Experimental- Specifies want browser send Attribution-Reporting-Eligible header along script resource request. server-side used trigger sending anAttribution-Reporting-Register-Source orAttribution-Reporting-Register-Trigger header response, register JavaScript-based attribution source attribution trigger, respectively. response header sent back depends value theAttribution-Reporting-Eligible header triggered registration.Note: Alternatively, JavaScript-based attribution sources triggers registered sending fetch() request containing theattributionReporting option (either set directly thefetch() call aRequest object passed thefetch() call), sending anXMLHttpRequest withsetAttributionReporting() invoked request object.There two versions attribute set: - Boolean, i.e. attributionsrc name. specifies want theAttribution-Reporting-Eligible header sent server thesrc attribute points to. fine handling attribution source trigger registration server. registering attribution trigger property optional, empty string value used omitted. - Value containing one URLs, example: html<script src=\"myscript.js\" attributionsrc=\"https://a.example/register-source https://b.example/register-source\"></script> useful cases requested resource server control, want handle registering attribution source different server. case, specify one URLs value attributionsrc . resource request occurs theAttribution-Reporting-Eligible header sent URL(s) specified inattributionSrc addition resource origin. URLs respond aAttribution-Reporting-Register-Source orAttribution-Reporting-Register-Trigger header appropriate complete registration.Note: Specifying multiple URLs means multiple attribution sources registered feature. might example different campaigns trying measure success of, involve generating different reports different data. See Attribution Reporting API details. - blocking - attribute explicitly indicates certain operations blocked fetching script. operations blocked must space-separated list blocking tokens listed below. render : rendering content screen blocked. crossorigin - Normal script elements pass minimal information thewindow.onerror scripts pass standard CORS checks. allow error logging sites use separate domain static media, use attribute. See CORS settings attributes descriptive explanation valid arguments. defer - Boolean attribute set indicate browser script meant executed document parsed, firing DOMContentLoaded event.Scripts defer attribute prevent theDOMContentLoaded event firing script loaded finished evaluating.Warning: attribute must used src attribute absent (i.e. inline scripts), case would effect.The defer attribute effect module scripts \u2014 defer default.Scripts defer attribute execute order appear document.This attribute allows elimination parser-blocking JavaScript browser would load evaluate scripts continuing parse. async similar effect case.If attribute specified async attribute, element act theasync attribute specified. fetchpriority - Provides hint relative priority use fetching external script. Allowed values: high - Fetch external script high priority relative external scripts. low - Fetch external script low priority relative external scripts. auto - set preference fetch priority. default. used value invalid value set. See HTMLScriptElement.fetchPriority information. integrity - attribute contains inline metadata user agent use verify fetched resource delivered without unexpected manipulation. attribute must specified src attribute specified. See Subresource Integrity. nomodule - Boolean attribute set indicate script executed browsers support ES modules \u2014 effect, used serve fallback scripts older browsers support modular JavaScript code. nonce - cryptographic nonce (number used once) allow scripts script-src Content-Security-Policy. server must generate unique nonce value time transmits policy. critical provide nonce cannot guessed bypassing resource's policy otherwise trivial. referrerpolicy - Indicates referrer send fetching script, resources fetched script: no-referrer : TheReferer header sent.no-referrer-when-downgrade : TheReferer header sent origins without TLS (HTTPS).origin : sent referrer limited origin referring page: scheme, host, port.origin-when-cross-origin : referrer sent origins limited scheme, host, port. Navigations origin still include path.same-origin : referrer sent origin, cross-origin requests contain referrer information.strict-origin : send origin document referrer protocol security level stays (HTTPS\u2192HTTPS), send less secure destination (HTTPS\u2192HTTP).strict-origin-when-cross-origin (default): Send full URL performing same-origin request, send origin protocol security level stays (HTTPS\u2192HTTPS), send header less secure destination (HTTPS\u2192HTTP).unsafe-url : referrer include origin path (but fragment, password, username). value unsafe, leaks origins paths TLS-protected resources insecure origins. Note: empty string value ( \"\" ) default value, fallback value ifreferrerpolicy supported. Ifreferrerpolicy explicitly specified the<script> element, adopt higher-level referrer policy, i.e. one set whole document domain. higher-level policy available, empty string treated equivalent tostrict-origin-when-cross-origin . src - attribute specifies URI external script; used alternative embedding script directly within document. type - attribute indicates type script represented. value attribute one following: - Attribute set (default), empty string, JavaScript MIME type - Indicates script \"classic script\", containing JavaScript code. Authors encouraged omit attribute script refers JavaScript code rather specify MIME type. JavaScript MIME types listed IANA media types specification. importmap - value indicates body element contains import map. import map JSON object developers use control browser resolves module specifiers importing JavaScript modules. module - value causes code treated JavaScript module. processing script contents deferred. charset anddefer attributes effect. information usingmodule , see JavaScript modules guide. Unlike classic scripts, module scripts require use CORS protocol cross-origin fetching. speculationrules Experimental- value indicates body element contains speculation rules. Speculation rules take form JSON object determine resources prefetched prerendered browser. part Speculation Rules API. - value - embedded content treated data block, processed browser. Developers must use valid MIME type JavaScript MIME type denote data blocks. attributes ignored, including src attribute. Deprecated attributes charset Deprecated- present, value must ASCII case-insensitive match utf-8 . unnecessary specify thecharset attribute, documents must use UTF-8, thescript element inherits character encoding document. language Deprecated Non-standard- Like type attribute, attribute identifies scripting language use. Unlike thetype attribute, however, attribute's possible values never standardized. Thetype attribute used instead. Notes Scripts without async , defer type=\"module\" attributes, well inline scripts without type=\"module\" attribute, fetched executed immediately browser continues parse page. script served text/javascript MIME type, browsers lenient block script served image type (image/* ), video type (video/* ), audio type (audio/* ), text/csv . script blocked, error event sent element; otherwise, load event sent. Examples Basic usage examples show import (an external) script using <script> element. <script src=\"javascript.js\"></script> following examples show put (an inline) script inside <script> element. <script> alert(\"Hello World!\"); </script> async defer Scripts loaded using async attribute download script without blocking page script fetched. However, download complete, script execute, blocks page rendering. means rest content web page prevented processed displayed user script finishes executing. get guarantee scripts run specific order. best use async scripts page run independently depend script page. Scripts loaded defer attribute load order appear page. run page content loaded, useful scripts depend DOM place (e.g. modify one elements page). visual representation different script loading methods means page: image HTML spec, copied cropped reduced version, CC 4.0 license terms. example, following script elements: <script async src=\"js/vendor/jquery.js\"></script> <script async src=\"js/script2.js\"></script> <script async src=\"js/script3.js\"></script> can't rely order scripts load in. jquery.js may load script2.js script3.js case, functions scripts depending jquery produce error jquery defined time script runs. async used bunch background scripts load in, want get place soon possible. example, maybe game data files load, needed game actually begins, want get showing game intro, titles, lobby, without blocked script loading. Scripts loaded using defer attribute (see below) run order appear page execute soon script content downloaded: <script defer src=\"js/vendor/jquery.js\"></script> <script defer src=\"js/script2.js\"></script> <script defer src=\"js/script3.js\"></script> second example, sure jquery.js load script2.js script3.js script2.js load script3.js . run page content loaded, useful scripts depend DOM place (e.g. modify one elements page). summarize: async anddefer instruct browser download script(s) separate thread, rest page (the DOM, etc.) downloading, page loading blocked fetch process.- scripts async attribute execute soon download complete. blocks page guarantee specific execution order. - scripts defer attribute load order execute everything finished loading. - scripts run immediately dependencies, use async . - scripts need wait parsing depend scripts and/or DOM place, load using defer put corresponding<script> elements order want browser execute them. Module fallback Browsers support module value type attribute ignore script nomodule attribute. enables use module scripts providing nomodule -marked fallback scripts non-supporting browsers. <script type=\"module\" src=\"main.js\"></script> <script nomodule src=\"fallback.js\"></script> Importing modules importmap importing modules scripts, use type=importmap feature, module must imported using module specifier either absolute relative URL. example below, first module specifier (\"./shapes/square.js\") resolves relative base URL document, second absolute URL. import { name squareName, draw } \"./shapes/square.js\"; import { name circleName } \"https://example.com/shapes/circle.js\"; import map allows provide mapping that, matched, replace text module specifier. import map defines keys square circle used aliases module specifiers shown above. <script type=\"importmap\"> { \"imports\": { \"square\": \"./shapes/square.js\", \"circle\": \"https://example.com/shapes/circle.js\" } } </script> allows us import modules using names module specifier (rather absolute relative URLs). import { name squareName, draw } \"square\"; import { name circleName } \"circle\"; examples import maps, see Importing modules using import maps section JavaScript modules guide. Embedding data HTML also use <script> element embed data HTML server-side rendering specifying valid non-JavaScript MIME type type attribute. <!-- Generated server --> <script id=\"data\" type=\"application/json\"> { \"userId\": 1234, \"userName\": \"Maria Cruz\", \"memberSince\": \"2000-01-01T00:00:00.000Z\" } </script> <!-- Static --> <script> const userInfo = JSON.parse(document.getElementById(\"data\").text); console.log(\"User information: %o\", userInfo); </script> Blocking rendering till script fetched executed include render token inside blocking attribute; rendering page blocked till script fetched executed. example below, block rendering async script, script block parsing guaranteed evaluated rendering starts. <script blocking=\"render\" async src=\"async-script.js\"></script> Technical summary | Content categories | Metadata content, Flow content, Phrasing content. | |---|---| | Permitted content | Dynamic script text/javascript . | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts metadata content, element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLScriptElement | Specifications | Specification | |---| | HTML Standard # the-script-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type", "title": "<script>: type attribute - HTML: HyperText Markup Language | MDN", "text": "<script>: type attribute Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. type attribute <script> element indicates type script represented element: classic script, import map, JavaScript module, speculation rules, data block. Value value attribute indicates type data represented script, one following: - Attribute set (default), empty string, JavaScript MIME type - Indicates script \"classic script\", containing JavaScript code. Authors encouraged omit attribute script refers JavaScript code rather specify MIME type. JavaScript MIME types listed IANA media types specification. importmap - value indicates body element contains import map. import map JSON object developers use control browser resolves module specifiers importing JavaScript modules. module - value causes code treated JavaScript module. processing script contents deferred. charset anddefer attributes effect. information usingmodule , see JavaScript modules guide. Unlike classic scripts, module scripts require use CORS protocol cross-origin fetching. speculationrules Experimental- value indicates body element contains speculation rules. Speculation rules take form JSON object determine resources prefetched prerendered browser. part Speculation Rules API. - value - embedded content treated data block, processed browser. Developers must use valid MIME type JavaScript MIME type denote data blocks. attributes ignored, including src attribute. Note: earlier browsers, type identified scripting language embedded imported (via src attribute) code. Specifications | Specification | |---| | HTML Standard # attr-script-type | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap", "title": "<script type=\"importmap\"> - HTML: HyperText Markup Language | MDN", "text": "<script type=\"importmap\"> Baseline 2023Newly available Since March 2023, feature works across latest devices browser versions. feature might work older devices browsers. importmap value type attribute <script> element indicates body element contains import map. import map JSON object allows developers control browser resolves module specifiers importing JavaScript modules. provides mapping text used module specifier import statement import() operator, corresponding value replace text resolving specifier. JSON object must conform Import map JSON representation format. import map used resolve module specifiers static dynamic imports, therefore must declared processed <script> elements import modules using specifiers declared map. Note import map applies module specifiers import statement import() operator modules loaded documents; apply path specified src attribute <script> element modules loaded workers worklets. information, see Importing modules using import maps section JavaScript modules guide. Syntax <script type=\"importmap\"> // JSON object defining import </script> src , async , nomodule , defer , crossorigin , integrity , referrerpolicy attributes must specified. first import map document inline definition processed; additional import maps external import maps ignored. Exceptions TypeError - import map definition JSON object, importmap key defined value JSON object, thescopes key defined value JSON object. Browsers generate console warnings cases import map JSON conform import map schema. error event fired script elements type=\"importmap\" processed. might occur, example, module loading already started import map processed, multiple import maps defined page. Description importing JavaScript module, import statement import() operator \"module specifier\" indicates module imported. browser must able resolve specifier absolute URL order import module. example, following statements import elements module specifier \"./modules/shapes/square.js\" , path relative base URL document, module specifier \"https://example.com/shapes/circle.js\" , absolute URL. import { name squareName, draw } \"./modules/shapes/square.js\"; import { name circleName } \"https://example.com/shapes/circle.js\"; Import maps allow developers specify (almost) text want module specifier; map provides corresponding value replace text module specifier resolved. Bare modules import map defines imports key \"module specifier map\" properties square circle . <script type=\"importmap\"> { \"imports\": { \"square\": \"./module/shapes/square.js\", \"circle\": \"https://example.com/shapes/circle.js\" } } </script> import map import modules above, using \"bare modules\" module specifiers: import { name squareName, draw } \"square\"; import { name circleName } \"circle\"; Mapping path prefixes module specifier map key also used remap path prefix module specifier. Note case property mapped path must trailing forward slash (/ ). <script type=\"importmap\"> { \"imports\": { \"shapes/\": \"./module/shapes/\", \"other-shapes/\": \"https://example.com/modules/shapes/\" } } </script> could import circle module shown. import { name circleName } \"shapes/circle.js\"; Paths module specifier map key Module specifier keys single word names (\"bare names\"). also contain end path separators, absolute URLs, relative URL paths start / , ./ , ../ . { \"imports\": { \"modules/shapes/\": \"./module/src/shapes/\", \"modules/square\": \"./module/src/other/shapes/square.js\", \"https://example.com/modules/square.js\": \"./module/src/other/shapes/square.js\", \"../modules/shapes/\": \"/modules/shapes/\" } } several module specifier keys module specifier map might match, specific key selected (i.e. one longer path/value). module specifier ./foo/../js/app.js would resolved ./js/app.js matching. means module specifier key ./js/app.js would match module specifier even though exactly same. Scoped module specifier maps use scopes key provide mappings used script importing module contains particular URL path. URL loading script matches supplied path, mapping associated scope used. allows different versions module used depending code importing. example, map use scoped map loading module URL includes path: \"/modules/custom-shapes/\". <script type=\"importmap\"> { \"imports\": { \"square\": \"./module/shapes/square.js\" }, \"scopes\": { \"/modules/custom-shapes/\": { \"square\": \"https://example.com/modules/shapes/square.js\" } } } </script> multiple scopes match referrer URL, specific scope path used (the scope key name longest name). browser falls back next specific scoped path matching specifier, on, eventually falling back module specifier map imports key. Integrity metadata map use integrity key provide mapping module integrity metadata. enables ensure integrity dynamically statically imported modules. integrity also enables provide fallback top-level preloaded modules, case already include integrity attribute. map keys represent module URLs, absolute relative (starting / , ./ , ../ ). map values represent integrity metadata, identical used integrity attribute values. example, map defines integrity metadata square.js module (directly) bare specifier (transitively, via imports key). <script type=\"importmap\"> { \"imports\": { \"square\": \"./module/shapes/square.js\" }, \"integrity\": { \"./module/shapes/square.js\": \"sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC\" } } </script> Import map JSON representation following \"formal\" definition import map JSON representation. import map must valid JSON object define optional keys imports , scopes integrity . key's value must object, may empty. imports Optional- value module specifier map, provides mappings module specifier text might appear import statement orimport() operator, text replace specifier resolved.This fallback map searched matching module specifiers scopes path URLs match, module specifier maps matchingscopes paths contain key matches module specifier.<module specifier map> - \"module specifier map\" valid JSON object keys text may present module specifier importing module, corresponding values URLs paths replace text module specifier resolved address. module specifier map JSON object following requirements: - None keys may empty. - values must strings, defining either valid absolute URL valid URL string starts / ,./ , or../ . - key ends / , corresponding value must also end with/ . key trailing/ used prefix mapping (or remapping) modules addresses. - object properties' ordering irrelevant: multiple keys match module specifier, specific key used (in words, specifier \"olive/branch/\" would match \"olive/\"). integrity Optional- Defines valid JSON object keys strings containing valid absolute relative URLs (starting / ,./ , or../ ), corresponding values valid integrity metadata.If URL script importing preloading module matches key integrity object, corresponding integrity metadata applied script's fetch options, unless already integrity metadata attached them. scopes Optional- Scopes define path-specific module specifier maps, allowing choice map depend path code importing module. scopes object valid JSON object property <scope key> , URL path, corresponding value a<module specifier map> .If URL script importing module matches <scope key> path, the<module specifier map> value associated key checked matching specifiers first. multiple matching scope keys, value associated specific/nested scope paths checked matching module specifiers first. fallback module specifier map inimports used matching module specifier keys matching scoped module specifier maps.Note scope change address resolved; relative addresses always resolved import map base URL. Specifications | Specification | |---| | HTML Standard # import-map | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/speculationrules", "title": "<script type=\"speculationrules\"> - HTML: HyperText Markup Language | MDN", "text": "<script type=\"speculationrules\"> Limited availability feature Baseline work widely-used browsers. Experimental: experimental technology Check Browser compatibility table carefully using production. speculationrules value type attribute <script> element indicates body element contains speculation rules. Speculation rules take form JSON structure determine resources prefetched prerendered browser. part Speculation Rules API. Note: Speculation rules defined inside external text files referenced Speculation-Rules HTTP header, using JSON representation provided below. Specifying HTTP header useful cases developers able directly modify document itself. Syntax <script type=\"speculationrules\"> // JSON object defining rules </script> Note: src , async , nomodule , defer , crossorigin , integrity , referrerpolicy attributes must specified. Exceptions TypeError - speculation rules definition valid JSON object. Description <script type=\"speculationrules\"> element must contain valid JSON structure defines speculation rules. following examples show separate prefetch prerender rules: <script type=\"speculationrules\"> { \"prefetch\": [ { \"urls\": [\"next.html\", \"next2.html\"], \"requires\": [\"anonymous-client-ip-when-cross-origin\"], \"referrer_policy\": \"no-referrer\" } ] } </script> <script type=\"speculationrules\"> { \"prerender\": [ { \"where\": { \"href_matches\": \"/next\" }, \"eagerness\": \"eager\" } ] } </script> Speculation rules JSON representation JSON structure contains one fields top level, one representing action define speculation rules for. present supported actions are: \"prefetch\" Optional Experimental- Rules potential future navigations associated document response body downloaded, leading significant performance improvements documents navigated to. Note none subresources referenced page downloaded. \"prerender\" Optional Experimental- Rules potential future navigations associated documents fully downloaded, rendered, loaded invisible tab. includes loading subresources, running JavaScript, even loading subresources performing data fetches started JavaScript. documents navigated to, navigations instant, leading major performance improvements. Note: Consult Speculation Rules API main page full details use prefetch prerender effectively. action field contains array, turn contains one objects. object contains single rule defining set URLs related parameters. object contain following properties: \"source\" - string indicating source URLs rule applies. optional value always inferred properties. one of: \"document\" - Specifies URLs matched navigation links associated document (as defined <a> and<area> elements), based conditions described a\"where\" key. Note presence a\"where\" key implies\"source\": \"document\" , optional. \"list\" - Specifies URLs come list, specified \"urls\" key. Note presence a\"urls\" key implies\"source\": \"list\" , optional. \"urls\" Experimental- array strings representing list URLs apply rule to. absolute relative URLs. Relative URLs parsed relative document base URL (if inline document) relative external resource URL (if externally fetched). \"urls\" and\"where\" cannot set rule. \"where\" Experimental- object representing conditions rule matches URLs contained associated document. Effectively, \"where\" object represents test performed every link page see whether speculation rule applied it.\"where\" and\"urls\" cannot set rule.This object contain exactly one following properties: \"href_matches\" - string containing URL pattern, array containing multiple URL pattern strings, follow standard URL Pattern API syntax. Links document whose URLs match pattern(s) rule applied. \"relative_to\" - case \"href_matches\" condition, specify want condition matched relative to. works exactly way rule-level\"relative_to\" key, except affects single\"href_matches\" condition inside a\"where\" key. \"selector_matches\" - string containing CSS selector, array containing multiple CSS selectors. Links document matched selectors rule applied. \"and\" - array containing one objects containing conditions ( \"href_matches\" ,\"selector_matches\" ,\"and\" ,\"not\" , or\"or\" ), must match rule applied them. \"not\" - object containing one condition ( \"href_matches\" ,\"selector_matches\" ,\"and\" ,\"not\" , or\"or\" ) which, matches, rule applied it. links match condition rule applied. \"or\" - array containing one objects containing conditions ( \"href_matches\" ,\"selector_matches\" ,\"and\" ,\"not\" , or\"or\" ), match rule applied them. \"where\" conditions nested multiple levels deep create complex conditions, choose split separate rules keep simple. See examples explanation, multiple examples use. \"eagerness\" Experimental- string providing hint browser eagerly prefetch/prerender link targets order balance performance advantages resource overheads. Possible values are: \"immediate\" - author thinks link likely followed, and/or document may take significant time fetch. Prefetch/prerender start soon possible, subject considerations user preferences resource limits. \"eager\" - author wants prefetch/prerender large number navigations, early possible. Prefetch/prerender start slight suggestion link may followed. example, user could move mouse cursor towards link, hover/focus moment, pause scrolling link prominent place. \"moderate\" - author looking balance eager andconservative . Prefetch/prerender start reasonable suggestion user follow link near future. example, user could scroll link viewport hover/focus time. \"conservative\" - author wishes get benefit speculative loading fairly small tradeoff resources. Prefetch/prerender start user starting click link, example mousedown orpointerdown . \"eagerness\" explicitly specified, list (\"urls\" ) rules default toimmediate document (\"where\" ) rules default toconservative . browser takes hint consideration along heuristics, may select link author hinted less eager another, less eager candidate considered better choice. \"expects_no_vary_search\" Experimental- string providing hint browser No-Vary-Search header value set responses documents receiving prefetch/prerender requests for. browser use determine ahead time whether useful wait existing prefetch/prerender finish, start new fetch request speculation rule matched. See the\"expects_no_vary_search\" example explanation used. \"referrer_policy\" Experimental- string representing specific referrer policy string use requesting URLs specified rule \u2014 see Referrer-Policy possible values. purpose allow referring page set stricter policy specifically speculative request policy page already set (either default, usingReferrer-Policy ).Note: cross-site prefetch requires referrer policy least strict default \"strict-origin-when-cross-origin\" value \u2014 so\"strict-origin-when-cross-origin\" ,\"same-origin\" ,\"strict-origin\" , or\"no-referrer\" . laxer policy set speculation rules override stricter policy set referring page long still sufficiently strict cross-site case.Note: case document rules, matched link's specified referrer policy (e.g. using referrerpolicy attribute) used, unless rule specifies policy overrides it. \"relative_to\" Experimental- string specifying want links matched URL matched relative to. value one of: document - URLs matched relative document speculation rules set on. ruleset - URLs matched relative file rules specified in. default value. key setting relevant rules defined external file (set using Speculation-Rules header). rules specified inside document set (i.e. inline<script> element), makes difference. \"requires\" Experimental- array strings representing capabilities browser parsing rule, must available rule applied specified URLs. Warning: Prefetches automatically fail browsers cannot meet specified requirement, even support Speculation Rules API. Possible values are: \"anonymous-client-ip-when-cross-origin\" - (prefetch-only) Specifies rule matches user agent prevent client IP address visible origin server cross-origin prefetch request issued. Exactly works dependent browser implementation specifics. example: - Chrome's implementation hides IP address using Google-owned proxy, therefore default works Google-controlled referrers (since case, sending URLs destination Google additional privacy leak). used non-Google-owned site, rules include match users turn \"Enhanced preloading\" chrome://settings/preloading . - Chromium-based browsers provide solutions. Thorough testing target browsers advised. - future Safari implementation may possibly use something along lines iCloud Private Relay. - future Firefox implementation might use something based Mozilla VPN product. - Chrome's implementation hides IP address using Google-owned proxy, therefore default works Google-controlled referrers (since case, sending URLs destination Google additional privacy leak). used non-Google-owned site, rules include match users turn \"Enhanced preloading\" Note: speculation rules use <script> element, need explicitly allowed Content-Security-Policy script-src directive site includes it. done adding \"inline-speculation-rules\" value along hash- nonce-source. Examples Prefetch prerender set rules basic examples shown description section included separate speculation rules defined prefetch prerender. possible define single set rules: <script type=\"speculationrules\"> { \"prefetch\": [ { \"urls\": [\"next.html\", \"next2.html\"], \"requires\": [\"anonymous-client-ip-when-cross-origin\"], \"referrer_policy\": \"no-referrer\" } ], \"prerender\": [ { \"where\": { \"selector_matches\": \".product-link\" }, \"eagerness\": \"eager\" } ] } </script> Note: code snippet provides list (\"urls\" ) rule document (\"where\" ) rule example. Multiple rule sets also allowable include multiple sets rules single HTML file: <script type=\"speculationrules\"> { \"prefetch\": [ { \"urls\": [\"next.html\", \"next2.html\"], \"requires\": [\"anonymous-client-ip-when-cross-origin\"], \"referrer_policy\": \"no-referrer\" } ] } </script> <script type=\"speculationrules\"> { \"prerender\": [ { \"where\": { \"selector_matches\": \".product-link\" }, \"eagerness\": \"eager\" } ] } </script> multiple rules single result set: <script type=\"speculationrules\"> { \"prerender\": [ { \"urls\": [\"one.html\"] }, { \"urls\": [\"two.html\"] } ] } </script> Dynamic rule insertion example feature detects speculation rules and, supported, dynamically adds prerender speculation rule via JavaScript: ( HTMLScriptElement.supports && HTMLScriptElement.supports(\"speculationrules\") ) { const specScript = document.createElement(\"script\"); specScript.type = \"speculationrules\"; const specRules = { prerender: [ { urls: [\"/next.html\"], }, ], }; specScript.textContent = JSON.stringify(specRules); console.log(\"added speculation rules to: next.html\"); document.body.append(specScript); } see action prerender demos page. syntax examples document-sourced rule contains \"where\" property, object containing criteria define links document matched. Effectively, \"where\" object represents test performed every link page see whether speculation rule applied it. basic version match single URL pattern CSS selector: { \"where\": { \"href_matches\": \"/next\" } } { \"where\": { \"selector_matches\": \".important-link\" } } \"href_matches\" \"selector_matches\" also set array values, multiple URL patterns CSS selectors matched simultaneously: { \"where\": { \"href_matches\": [\"/next\", \"/profile\"] } } { \"where\": { \"selector_matches\": [\".important-link\", \"#unique-link\"] } } URL patterns selectors also contain wildcard (* ) characters, allowing single value match multiple URLs. example, object could match user/ , user/settings , user/stats , etc. { \"where\": { \"href_matches\": \"/user/*\" } } Search parameters (or query strings) also targeted href_matches . example, object could match same-origin URLs category search parameter (as first subsequent parameter): { \"where\": { \"href_matches\": \"/*\\\\?*(^|&)category=*\" } } condition negated placing inside \"not\" condition \u2014 means that, matched, link speculation rule applied it, matched, will. following example cause links match URL pattern /logout rule applied them, links match /logout : { \"where\": { \"not\": { \"href_matches\": \"/logout\" } } } Combining multiple \"where\" conditions \"and\" \"or\" Multiple conditions combined inside \"and\" \"or\" conditions \u2014 take value arrays containing multiple conditions, (respectively) match speculation rules apply link. Using \"and\" \"or\" , conditions nested multiple levels deep \u2014 specified limit allowed nesting levels. useful think \"where\" object equivalent statement. { and: [A, B, { or: [C, { not: }] }] } equivalent (A && B && (C || !D)) { apply speculation rule } following complete speculation rule example, same-origin pages marked prefetching except known problematic \u2014 /logout page, links marked class .no-prerender : <script type=\"speculationrules\"> { \"prefetch\": [ { \"where\": { \"and\": [ { \"href_matches\": \"/*\" }, { \"not\": { \"href_matches\": \"/logout\" } }, { \"not\": { \"selector_matches\": \".no-prerender\" } } ] } } ] } </script> Note: pattern include cross-site links, supported prefetching (provided user cookies set destination site, protect tracking) prerendering. \"relative_to\" example rule sets externally fetched (i.e. via Speculation-Rules ) response header, URLs list rules URL patterns document rules parsed relative containing external text file's URL default. parse URLs list rule relative document's base URL, \"relative_to\" used like this: { \"urls\": [\"/home\", \"/about\"], \"relative_to\": \"document\" } document rules, \"relative_to\" paired directly \"href_matches\" document's base URL would used patterns particular condition: { \"where\": { \"or\": [ { \"href_matches\": \"/home\", \"relative_to\": \"document\" }, { \"href_matches\": \"/about\" } ] } } example, first \"href_matches\" matched relative document's base URL. relative_to mainly relevant speculation rules JSON file different origin document wish apply to: - document located https://example.com/some/subpage.html rules athttps://example.com/resources/rules.json , then/home always equates tohttps://example.com/home regardless whetherrelative_to set todocument orruleset . - However, document located https://example.com/some/subpage.html rules athttps://other.example/resources/rules.json (for example, third-party cookieless resource origin), then:\"relative_to\": \"document\" cause/home equate tohttps://example.com/home .\"relative_to\": \"ruleset\" cause/home equate tohttps://other.example/home . typical use case \"relative_to\" . - Another potential (but rarer) use case URLs specified form home instead of/home . document located athttps://example.com/some/subpage.html rules athttps://example.com/resources/rules.json , then:\"relative_to\": \"document\" would causehome equate tohttps://example.com/some/home .\"relative_to\": \"ruleset\" would causehome equate tohttps://example.com/resources/home . \"expects_no_vary_search\" example Consider case user directory landing page, /users , id parameter added bring information specific user, example /users?id=345 . Whether URL considered identical caching purposes depends behavior application: - parameter effect loading completely new page containing information specified user, URL cached separately. - parameter effect highlighting specified user page, perhaps revealing pullout panel displaying data, URL considered caching purposes. could result performance improvements around loading user pages could achieved via No-Vary-Search value ofparams=(\"id\") . affect speculation rules? Consider following code: <script type=\"speculationrules\"> { \"prefetch\": [ { \"urls\": [\"/users\"] } ] } </script> <a href=\"/users?id=345\">User Bob</a> would happen case user starts navigation /users?id=345 headers prefetch /users received yet? point, browser know No-Vary-Search value be, anything. No-Vary-Search value set, application behavior like Option 1 above, prefetch would wasted browser would need go fetch separate /users?id=345 page scratch. solve this, provide hint page author expects No-Vary-Search value be. speculation rule \"expects_no_vary_search\" field, contains string representation expected header value: <script type=\"speculationrules\"> { \"prefetch\": [ { \"urls\": [\"/users\"], \"expects_no_vary_search\": \"params=(\\\"id\\\")\" } ] } </script> <a href=\"/users?id=345\">User Bob</a> indicates Option 2 described server expected produce. navigation starts ongoing prefetch /users , informs browser appropriate wait prefetch, instead immediately starting another fetch /users?id=345 . Document rules also used conjunction \"expects_no_vary_search\" , depending pattern used. example, case of: <script type=\"speculationrules\"> { \"prefetch\": [ { { \"where\": { \"href_matches\": \"/users?id=*\" } }, \"expects_no_vary_search\": \"params=(\\\"id\\\")\" } ] } </script> <a href=\"/users?id=012\">User Bill</a> <a href=\"/users?id=345\">User Bob</a> <a href=\"/users?id=678\">User Ben</a> link hovered over, browser start prefetching specific link. user hovers another link prefetch completes, expects_no_vary_search pattern tells browser need cancel current prefetch, /users URLs id URL parameter values effectively point page context (and caching purposes). eagerness example following set document rules shows eagerness used hint eagerness browser prerender matching set links. <script type=\"speculationrules\"> { \"prerender\": [ { \"where\": { \"href_matches\": \"/*\" }, \"eagerness\": \"conservative\" }, { \"where\": { \"selector_matches\": \".product-link\" }, \"eagerness\": \"eager\" } ] } </script> hinting that: - same-site links contained document conservatively prerendered (i.e. user starts activate them). - product links (in case, class of.product-link ) document eagerly prerendered (i.e. user makes kind move towards navigating them). Note: effects eagerness settings less useful list rules. default, list rule URLs prefetched/prerendered immediately soon rules parsed, expect \u2014 intended explicit listing high-priority URLs want make available soon possible. reason, eager effect immediate current implementations. Lower eagerness settings prefetching/prerendering links interacted with, likely use document rules find page. Specifications | Specification | |---| | Speculation Rules # speculation-rules-script | Browser compatibility BCD tables load browser See also - Prerender pages Chrome instant page navigations developer.chrome.com - Speculative loading - Speculation Rules API"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/search", "title": "<search>: The generic search element - HTML: HyperText Markup Language | MDN", "text": "<search>: generic search element Baseline 2023Newly available Since October 2023, feature works across latest devices browser versions. feature might work older devices browsers. <search> HTML element container representing parts document application form controls content related performing search filtering operation. <search> element semantically identifies purpose element's contents search filtering capabilities. search filtering functionality website application, current web page document, entire Internet subsection thereof. Attributes element includes global attributes. Usage notes <search> element presenting search results. Rather, search filtered results presented part main content web page. said, suggestions links part \"quick search\" functionality within search filtering functionality appropriately nested within contents <search> element search features. Accessibility Examples Header search form example demonstrates use <search> container search within website header perform simple site-wide search. <search> semantic container <form> submits user-entered search query server. HTML <header> <h1>Movie website</h1> <search> <form action=\"./search/\"> <label for=\"movie\">Find Movie</label> <input type=\"search\" id=\"movie\" name=\"q\" /> <button type=\"submit\">Search</button> </form> </search> </header> Result Web app search example demonstrates potential DOM content dynamically including JavaScript search functionality web application. search functionality implemented entirely JavaScript, form submitted, neither <form> element submit <button> required. semantics, <search> element included contain search filtering capabilities. HTML <search> <label> Find filter query <input type=\"search\" id=\"query\" /> </label> <label> <input type=\"checkbox\" id=\"exact-only\" /> Exact matches </label> <section> <h3>Results:</h3> <ul id=\"results\"> <!-- search result content --> </ul> <output id=\"no-results\"> <!-- results content --> </output> </section> </search> Result Note: Remember users JavaScript, none users JavaScript running JavaScript successfully downloaded, parsed, executed. Ensure users access content site JavaScript disabled. Multiple searches example demonstrates page two search features. first global site search located header. second search filter based page context, example car search. HTML <body> <header> <h1>Car rental agency</h1> <search title=\"Website\">...</search> </header> <main> <h2>Cars available rent</h2> <search title=\"Cars\"> <h3>Filter results</h3> ... </search> <article> <!-- search result content --> </article> </main> </body> Result Technical summary | Content categories | Flow content, palpable content. | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Implicit ARIA role | search | | Permitted ARIA roles | form , group , none , presentation , region , search | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-search-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section", "title": "<section>: The Generic Section element - HTML: HyperText Markup Language | MDN", "text": "<section>: Generic Section element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <section> HTML element represents generic standalone section document, specific semantic element represent it. Sections always heading, exceptions. Try Attributes element includes global attributes. Usage notes mentioned above, <section> generic sectioning element, used specific element represent it. example, navigation menu wrapped <nav> element, list search results map display controls specific elements, could put inside <section> . Also consider cases: - contents element represent standalone, atomic unit content makes sense syndicated standalone piece (e.g. blog post blog comment, newspaper article), <article> element would better choice. - contents represent useful tangential information works alongside main content, directly part (like related links, author bio), use <aside> . - contents represent main content area document, use <main> . - using element styling wrapper, use <div> instead. reiterate, <section> identified, typically including heading (h1 - h6 element) child <section> element, wherever possible. See examples might see <section> without heading. Examples Basic usage example <div> <h2>Heading</h2> <p>Bunch awesome content</p> </div> Result <section> <h2>Heading</h2> <p>Bunch awesome content</p> </section> Result Using section without heading Circumstances might see <section> used without heading typically found web application/UI sections rather traditional document structures. document, really make sense separate section content without heading describe contents. headings useful readers, particularly useful users assistive technologies like screen readers, also good SEO. Consider however secondary navigation mechanism. global navigation already wrapped <nav> element, could conceivably wrap previous/next menu <section> : <section> <a href=\"#\">Previous article</a> <a href=\"#\">Next article</a> </section> kind button bar controlling app? might necessarily want heading, still distinct section document: <section> <button class=\"reply\">Reply</button> <button class=\"reply-all\">Reply all</button> <button class=\"fwd\">Forward</button> <button class=\"del\">Delete</button> </section> Result Depending content, including heading could also good SEO, option consider. Technical summary | Content categories | Flow content, Sectioning content, palpable content. | |---|---| | Permitted content | Flow content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. Note <section> element must descendant <address> element. | | Implicit ARIA role | region element accessible name, otherwise generic | | Permitted ARIA roles | alert , alertdialog , application , banner , complementary , contentinfo , dialog , document , feed , log , main , marquee , navigation , none , note , presentation , search , status , tabpanel | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-section-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select", "title": "<select>: The HTML Select element - HTML: HyperText Markup Language | MDN", "text": "<select>: HTML Select element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <select> HTML element represents control provides menu options. Try example shows typical <select> usage. given id attribute enable associated <label> accessibility purposes, well name attribute represent name associated data point submitted server. menu option defined <option> element nested inside <select> . <option> element value attribute containing data value submit server option selected. value attribute included, value defaults text contained inside element. include selected attribute <option> element make selected default page first loads. selected attribute specified, first <option> element selected default. <select> element represented JavaScript HTMLSelectElement object, object value property contains value selected <option> . <select> element unique attributes use control it, multiple specify whether multiple options selected, size specify many options shown once. also accepts general form input attributes required , disabled , autofocus , etc. nest <option> elements inside <optgroup> elements create separate groups options inside dropdown. also include <hr> elements create separators add visual breaks options. examples, see native form widgets: Drop-down content. Attributes element includes global attributes. autocomplete - string providing hint user agent's autocomplete feature. See HTML autocomplete attribute complete list values details use autocomplete. autofocus - Boolean attribute lets specify form control input focus page loads. one form element document autofocus attribute. disabled - Boolean attribute indicates user cannot interact control. attribute specified, control inherits setting containing element, example <fieldset> ; containing element thedisabled attribute set, control enabled. form - <form> element associate the<select> (its form owner). value attribute must theid a<form> document. (If attribute set, the<select> associated ancestor<form> element, any.)This attribute lets associate <select> elements to<form> anywhere document, inside a<form> . also override ancestor<form> element. multiple - Boolean attribute indicates multiple options selected list. specified, one option selected time. multiple specified, browsers show scrolling list box instead single line dropdown. name - attribute used specify name control. required - Boolean attribute indicating option non-empty string value must selected. size - control presented scrolling list box (e.g. multiple specified), attribute represents number rows list visible one time. Browsers required present select element scrolled list box. default value is0 .Note: According HTML specification, default value size 1 ; however, practice, found break websites, browser currently that, Mozilla opted continue return0 time Firefox. Usage notes Selecting multiple options desktop computer, number ways select multiple options <select> element multiple attribute: Mouse users hold Ctrl, Command, Shift keys (depending makes sense operating system) click multiple options select/deselect them. Warning: mechanism selecting multiple non-contiguous items via keyboard described currently seems work Firefox. macOS, Ctrl + Ctrl + shortcuts conflict OS default shortcuts Mission Control Application windows, turn work. Keyboard users select multiple contiguous items by: - Focusing <select> element (e.g. using Tab). - Selecting item top bottom range want select using cursor keys go options. - Holding Shift key using cursor keys increase decrease range items selected. Keyboard users select multiple non-contiguous items by: - Focusing <select> element (e.g. using Tab). - Holding Ctrl key using cursor keys change \"focused\" select option, i.e. one selected choose so. \"focused\" select option highlighted dotted outline, way keyboard-focused link. - Pressing Space select/deselect \"focused\" select options. Styling CSS <select> element notoriously difficult style productively CSS. affect certain aspects like element \u2014 example, manipulating box model, displayed font, etc., use appearance property remove default system appearance . However, properties produce consistent result across browsers, hard things like line different types form element one another column. <select> element's internal structure complex, hard control. want get full control, consider using library good facilities styling form widgets, try rolling dropdown menu using non-semantic elements, JavaScript, WAI-ARIA provide semantics. useful information styling <select> , see: - Styling HTML forms - Advanced styling HTML forms - field-sizing property, controls how<select> elements sized relation contained options. Accessibility <hr> within <select> considered purely decorative, currently exposed within accessibility tree therefore exposed assistive technologies. Examples Basic select following example creates three-value dropdown menu, second option selected default. <!-- second value selected initially --> <select name=\"choice\"> <option value=\"first\">First Value</option> <option value=\"second\" selected>Second Value</option> <option value=\"third\">Third Value</option> </select> Result Select grouping options following example creates dropdown menu grouping using <optgroup> <hr> make easier user understand content dropdown. <label for=\"hr-select\">Your favorite food</label> <br /> <select name=\"foods\" id=\"hr-select\"> <option value=\"\">Choose food</option> <hr /> <optgroup label=\"Fruit\"> <option value=\"apple\">Apples</option> <option value=\"banana\">Bananas</option> <option value=\"cherry\">Cherries</option> <option value=\"damson\">Damsons</option> </optgroup> <hr /> <optgroup label=\"Vegetables\"> <option value=\"artichoke\">Artichokes</option> <option value=\"broccoli\">Broccoli</option> <option value=\"cabbage\">Cabbages</option> </optgroup> <hr /> <optgroup label=\"Meat\"> <option value=\"beef\">Beef</option> <option value=\"chicken\">Chicken</option> <option value=\"pork\">Pork</option> </optgroup> <hr /> <optgroup label=\"Fish\"> <option value=\"cod\">Cod</option> <option value=\"haddock\">Haddock</option> <option value=\"salmon\">Salmon</option> <option value=\"turbot\">Turbot</option> </optgroup> </select> Result Advanced select multiple features follow example complex, showing features use <select> element: <label> Please choose one pets: <select name=\"pets\" multiple size=\"4\"> <optgroup label=\"4-legged pets\"> <option value=\"dog\">Dog</option> <option value=\"cat\">Cat</option> <option value=\"hamster\" disabled>Hamster</option> </optgroup> <optgroup label=\"Flying pets\"> <option value=\"parrot\">Parrot</option> <option value=\"macaw\">Macaw</option> <option value=\"albatross\">Albatross</option> </optgroup> </select> </label> Result see that: - Multiple options selectable we've included multiple attribute. - size attribute causes 4 lines display time; scroll view options. - We've included <optgroup> elements divide options different groups. purely visual grouping, visualization generally consists group name bolded, options indented. - \"Hamster\" option includes disabled attribute therefore can't selected all. Technical summary | Content categories | Flow content, phrasing content, interactive content, listed, labelable, resettable, submittable form-associated element | |---|---| | Permitted content | Zero <option> , <optgroup> <hr> elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | combobox multiple attribute size attribute greater 1, otherwise listbox | | Permitted ARIA roles | menu multiple attribute size attribute greater 1, otherwise role permitted | | DOM interface | HTMLSelectElement | Specifications | Specification | |---| | HTML Standard # the-select-element | Browser compatibility BCD tables load browser See also - Events fired <select> :change ,input - <option> element - <optgroup> element"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot", "title": "<slot>: The Web Component Slot element - HTML: HyperText Markup Language | MDN", "text": "<slot>: Web Component Slot element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since January 2020. <slot> HTML element\u2014part Web Components technology suite\u2014is placeholder inside web component fill markup, lets create separate DOM trees present together. Attributes element includes global attributes. name - slot's name. named slot <slot> element aname attribute. Examples html <template id=\"element-details-template\"> <style> details { font-family: \"Open Sans Light\", Helvetica, Arial, sans-serif; } .name { font-weight: bold; color: #217ac0; font-size: 120%; } h4 { margin: 10px 0 -8px 0; background: #217ac0; color: white; padding: 2px 6px; border: 1px solid #cee9f9; border-radius: 4px; } .attributes { margin-left: 22px; font-size: 90%; } .attributes p { margin-left: 16px; font-style: italic; } </style> <details> <summary> <code class=\"name\"> <<slot name=\"element-name\">NEED NAME</slot>> </code> <span class=\"desc\"><slot name=\"description\">NEED DESCRIPTION</slot></span> </summary> <div class=\"attributes\"> <h4>Attributes</h4> <slot name=\"attributes\"><p>None</p></slot> </div> </details> <hr /> </template> Note: see complete example action element-details (see running live). addition, find explanation Using templates slots. Technical summary | Content categories | Flow content, phrasing content | |---|---| | Permitted content | Transparent | | Events | slotchange | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLSlotElement | Specifications | Specification | |---| | HTML Standard # the-slot-element | | DOM Standard # shadow-tree-slots | Browser compatibility BCD tables load browser See also - HTML <template> element - HTML slot attribute - CSS ::slotted pseudo-element - CSS :has-slotted pseudo-class - CSS scoping module"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small", "title": "<small>: the side comment element - HTML: HyperText Markup Language | MDN", "text": "<small>: side comment element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <small> HTML element represents side-comments small print, like copyright legal text, independent styled presentation. default, renders text within one font-size smaller, small x-small . Try Attributes element includes global attributes. Examples Basic usage html <p> first sentence. <small>This whole sentence small letters.</small> </p> Result CSS alternative html <p> first sentence. <span style=\"font-size:0.8em\">This whole sentence small letters.</span> </p> Result Notes Technical summary | Content categories | Flow content, phrasing content. | |---|---| | Permitted content | Phrasing content | | Tag omission | None; must start tag end tag. | | Permitted parents | element accepts phrasing content, element accepts flow content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-small-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source", "title": "<source>: The Media or Image Source element - HTML: HyperText Markup Language | MDN", "text": "<source>: Media Image Source element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <source> HTML element specifies one media resources <picture> , <audio> , <video> elements. void element, means content require closing tag. element commonly used offer media content multiple file formats order provide compatibility broad range browsers given differing support image file formats media file formats. Try Attributes element supports global attributes. addition, following attributes used it: type - Specifies MIME media type image media type, optionally including codecs parameter. src - Specifies URL media resource. Required parent <source> is<audio> or<video> . allowed parent is<picture> . srcset - Specifies comma-separated list one image URLs descriptors. Required parent <source> is<picture> . allowed parent is<audio> or<video> .The list consists strings separated commas, indicating set possible images browser use. string composed of: - URL specifying image location. - optional width descriptor\u2014a positive integer directly followed \"w\" , as300w . - optional pixel density descriptor\u2014a positive floating number directly followed \"x\" , as2x . string list must either width descriptor pixel density descriptor valid. two descriptors used together; one used consistently throughout list. value descriptor list must unique. browser chooses adequate image display given point time based descriptors. descriptors specified, default value used 1x . thesizes attribute also present, string must include width descriptor. browser supportsrcset , thensrc used default image source. sizes - Specifies list source sizes describe final rendered width image. Allowed parent <source> is<picture> . allowed parent is<audio> or<video> .The list consists source sizes separated commas. source size media condition-length pair. laying page out, browser uses information determine image defined srcset display. Note thatsizes take effect width descriptors provided withsrcset , pixel density descriptors (i.e.,200w used instead of2x ). media - Specifies media query resource's intended media. height - Specifies intrinsic height image pixels. Allowed parent <source> a<picture> . allowed parent is<audio> or<video> .The height value must integer without units. width - Specifies intrinsic width image pixels. Allowed parent <source> a<picture> . allowed parent is<audio> or<video> .The width value must integer without units. Usage notes <source> element void element, means content also closing tag. is, never use </source> HTML. browser goes list <source> elements find format supports. uses first one display. <source> element: - type attribute specified, browser retrieves media's type server determines displayed. media can't rendered, browser checks next<source> list. - type attribute specified, browser immediately compares media types display. type supported, browser skips querying server directly checks next<source> element. none <source> elements provide usable source: - case <picture> element, browser fall back using image specified the<picture> element's<img> child. - case <audio> or<video> element, browser fall back displaying content included element's opening closing tags. information image formats supported web browsers guidance selecting appropriate formats use, see Image file type format guide. details video audio media types use, see Media type format guide. Examples Using type attribute <video> example demonstrates offer video different formats: WebM browsers support it, Ogg support Ogg, QuickTime browsers support QuickTime. <audio> <video> element supported browser, notice displayed instead. browser supports element support specified formats, error event raised default media controls (if enabled) indicate error. details media file formats use browser support, refer Media type format guide. <video controls> <source src=\"foo.webm\" type=\"video/webm\" /> <source src=\"foo.ogg\" type=\"video/ogg\" /> <source src=\"foo.mov\" type=\"video/quicktime\" /> I'm sorry; browser support HTML video. </video> Using media attribute <video> example demonstrates offer alternate source file viewports certain width. user's browsing environment meets specified media condition, associated <source> element chosen. contents src attribute requested rendered. media condition match, browser move next <source> list. second <source> option code media condition, selected browsing contexts. <video controls> <source src=\"foo-large.webm\" media=\"(min-width: 800px)\" /> <source src=\"foo.webm\" /> I'm sorry; browser support HTML video. </video> examples, HTML video audio article Learn area great resource. Using media attribute <picture> example, two <source> elements included within <picture> , providing versions image use available space exceeds certain widths. available width less smallest widths, browser fall back image specified <img> element. <picture> <source srcset=\"mdn-logo-wide.png\" media=\"(min-width: 800px)\" /> <source srcset=\"mdn-logo-medium.png\" media=\"(min-width: 600px)\" /> <img src=\"mdn-logo-narrow.png\" alt=\"MDN Web Docs\" /> </picture> <picture> element, must always include <img> fallback image. Also, make sure add alt attribute accessibility, unless image purely decorative irrelevant content. Using height width attributes <picture> example, three <source> elements height width attributes included <picture> element. media query allows browser select image display height width attributes based viewport size. <picture> <source srcset=\"landscape.png\" media=\"(min-width: 1000px)\" width=\"1000\" height=\"400\" /> <source srcset=\"square.png\" media=\"(min-width: 800px)\" width=\"800\" height=\"800\" /> <source srcset=\"portrait.png\" media=\"(min-width: 600px)\" width=\"600\" height=\"800\" /> <img src=\"fallback.png\" alt=\"Image used browser support sources\" width=\"500\" height=\"400\" /> </picture> Technical summary | Content categories | None. | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | media element\u2014 <audio> <video> \u2014and must placed flow content <track> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLSourceElement | Specifications | Specification | |---| | HTML Standard # the-source-element | Browser compatibility BCD tables load browser See also <audio> element<picture> element<video> element- Image file type format guide - Media type format guide - Web performance"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span", "title": "<span>: The Content Span element - HTML: HyperText Markup Language | MDN", "text": "<span>: Content Span element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <span> HTML element generic inline container phrasing content, inherently represent anything. used group elements styling purposes (using class id attributes), share attribute values, lang . used semantic element appropriate. <span> much like <div> element, <div> block-level element whereas <span> inline-level element. Try Attributes element includes global attributes. Example Example 1 HTML html <p><span>Some text</span></p> Result Example 2 HTML html <li> <span> <a href=\"portfolio.html\" target=\"_blank\">See portfolio</a> </span> </li> CSS css li span { background: gold; } Result Technical summary | Content categories | Flow content, phrasing content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content, element accepts flow content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLSpanElement | Specifications | Specification | |---| | HTML Standard # the-span-element | Browser compatibility BCD tables load browser See also - HTML <div> element"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike", "title": "<strike> - HTML: HyperText Markup Language | MDN", "text": "<strike> Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <strike> HTML element places strikethrough (horizontal line) text. Warning: element deprecated HTML 4 XHTML 1, obsoleted HTML Living Standard. semantically appropriate, i.e., represents deleted content, use <del> instead. cases use <s> . Attributes element includes global attributes. Examples <strike>: <strike>Today's Special: Salmon</strike> SOLD OUT<br /> <s>: <s>Today's Special: Salmon</s> SOLD Result Technical summary | DOM interface | HTMLElement | |---| Specifications | Specification | |---| | HTML Standard # strike | Browser compatibility BCD tables load browser See also - <s> element. - <del> element used data deleted. - CSS text-decoration property used style text strikethrough."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong", "title": "<strong>: The Strong Importance element - HTML: HyperText Markup Language | MDN", "text": "<strong>: Strong Importance element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <strong> HTML element indicates contents strong importance, seriousness, urgency. Browsers typically render contents bold type. Try Attributes element includes global attributes. Usage notes <strong> element content \"strong importance,\" including things great seriousness urgency (such warnings). could sentence great importance whole page, could merely try point words greater importance compared nearby content. Typically element rendered default using bold font weight. However, used apply bold styling; use CSS font-weight property purpose. Use <b> element draw attention certain text without indicating higher level importance. Use <em> element mark text stress emphasis. Another accepted use <strong> denote labels paragraphs represent notes warnings within text page. <b> vs. <strong> often confusing new developers many ways express thing rendered website. <b> <strong> perhaps one common sources confusion, causing developers ask \"Should use <b> <strong> ? thing?\" exactly. <strong> element content greater importance, <b> element used draw attention text without indicating important. may help realize valid semantic elements HTML coincidence default styling (boldface) browsers (although older browsers actually underline <strong> ). element meant used certain types scenarios, want bold text decoration, instead actually use CSS font-weight property. intended meaning purpose enclosed text determines element use. Communicating meaning semantics about. <em> vs. <strong> Adding confusion fact HTML 4 defined <strong> indicating stronger emphasis, HTML 5 defines <strong> representing \"strong importance contents.\" important distinction make. <em> used change meaning sentence spoken emphasis (\"I love carrots\" vs. \"I love carrots\"), <strong> used give portions sentence added importance (e.g., \"Warning! dangerous.\") <strong> <em> nested increase relative degree importance stress emphasis, respectively. Examples Basic example <p> proceeding, <strong>make sure put safety goggles</strong>. </p> Result Labeling warnings <p> <strong>Important:</strong> proceeding, make sure add plenty butter. </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None; must start tag end tag. | | Permitted parents | element accepts phrasing content, element accepts flow content. | | Implicit ARIA role | strong | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-strong-element | Browser compatibility BCD tables load browser See also - <b> element - <em> element - font-weight property"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style", "title": "<style>: The Style Information element - HTML: HyperText Markup Language | MDN", "text": "<style>: Style Information element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <style> HTML element contains style information document, part document. contains CSS, applied contents document containing <style> element. Try <style> element must included inside <head> document. general, better put styles external stylesheets apply using <link> elements. include multiple <style> <link> elements document, applied DOM order included document \u2014 make sure include correct order, avoid unexpected cascade issues. manner <link> elements, <style> elements include media attributes contain media queries, allowing selectively apply internal stylesheets document depending media features viewport width. Attributes element includes global attributes. blocking - attribute explicitly indicates certain operations blocked fetching critical subresources. @import -ed stylesheets generally considered critical subresources, whereasbackground-image fonts not. operations blocked must space-separated list blocking tokens listed below.render : rendering content screen blocked. media - attribute defines media style applied to. value media query, defaults attribute missing. nonce - cryptographic nonce (number used once) used allow inline styles style-src Content-Security-Policy. server must generate unique nonce value time transmits policy. critical provide nonce cannot guessed bypassing resource's policy otherwise trivial. title - attribute specifies alternative style sheet sets. Deprecated attributes type Deprecated- attribute provided: is, permitted values empty string case-insensitive match text/css . Examples basic stylesheet following example, apply short stylesheet document: <!doctype html> <html lang=\"en-US\"> <head> <meta charset=\"UTF-8\" /> <title>Test page</title> <style> p { color: red; } </style> </head> <body> <p>This paragraph.</p> </body> </html> Result Multiple style elements example we've included two <style> elements \u2014 notice conflicting declarations later <style> element override earlier one, equal specificity. <!doctype html> <html lang=\"en-US\"> <head> <meta charset=\"UTF-8\" /> <title>Test page</title> <style> p { color: white; background-color: blue; padding: 5px; border: 1px solid black; } </style> <style> p { color: blue; background-color: yellow; } </style> </head> <body> <p>This paragraph.</p> </body> </html> Result Including media query example build previous one, including media attribute second <style> element applied viewport less 500px width. <!doctype html> <html lang=\"en-US\"> <head> <meta charset=\"UTF-8\" /> <title>Test page</title> <style> p { color: white; background-color: blue; padding: 5px; border: 1px solid black; } </style> <style media=\"all (max-width: 500px)\"> p { color: blue; background-color: yellow; } </style> </head> <body> <p>This paragraph.</p> </body> </html> Result Technical summary | Content categories | Metadata content. | |---|---| | Permitted content | Text content matching type attribute, text/css . | | Tag omission | Neither tag omissible. | | Permitted parents | element accepts metadata content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLStyleElement | Specifications | Specification | |---| | HTML Standard # the-style-element | Browser compatibility BCD tables load browser See also - <link> element, allows us apply external stylesheets document. - Alternative Style Sheets"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub", "title": "<sub>: The Subscript element - HTML: HyperText Markup Language | MDN", "text": "<sub>: Subscript element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <sub> HTML element specifies inline text displayed subscript solely typographical reasons. Subscripts typically rendered lowered baseline using smaller text. Try Attributes element includes global attributes. Usage notes <sub> element used typographical reasons\u2014that is, change position text comply typographical conventions standards, rather solely presentation appearance purposes. example, using <sub> style name company uses altered baselines wordmark would appropriate; instead, CSS used. example, could use vertical-align property declaration like vertical-align: sub or, precisely control baseline shift, vertical-align: -25% . Appropriate use cases <sub> include (but necessarily limited to): - Marking footnote numbers. See Footnote numbers example. - Marking subscript mathematical variable numbers (although may also consider using MathML formula this). See Variable subscripts. - Denoting number atoms given element within chemical formula (such every developer's best friend, C8H10N4O2, otherwise known \"caffeine\"). See Chemical formulas. Examples Footnote numbers Traditional footnotes denoted using numbers rendered subscript. common use case <sub> : <p> According computations Nakamura, Johnson, Mason<sub>1</sub> result complete annihilation particles. </p> Result Variable subscripts mathematics, families variables related concept (such distances along axis) represented using variable name subscript following. example: <p> horizontal coordinates' positions along X-axis represented <var>x<sub>1</sub></var> \u2026 <var>x<sub>n</sub></var>. </p> Result Chemical formulas writing chemical formula, H20, number atoms given element within described molecule represented using subscripted number; case water, subscripted \"2\" indicates two atoms hydrogen molecule. Another example: <p> Almost every developer's favorite molecule C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>, commonly known \"caffeine.\" </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | subscript | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-sub-and-sup-elements | Browser compatibility BCD tables load browser See also - <sup> HTML element produces superscript. Note cannot usesup andsub time: need use MathML produce superscript directly subscript next chemical symbol element, representing atomic number nuclear number. - <msub> ,<msup> , and<msubsup> MathML elements. - CSS vertical-align property."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary", "title": "<summary>: The Disclosure Summary element - HTML: HyperText Markup Language | MDN", "text": "<summary>: Disclosure Summary element <summary> HTML element specifies summary, caption, legend <details> element's disclosure box. Clicking <summary> element toggles state parent <details> element open closed. Try Attributes element includes global attributes. Usage notes <summary> element's contents heading content, plain text, HTML used within paragraph. <summary> element may used first child <details> element. user clicks summary, parent <details> element toggled open closed, toggle event sent <details> element, used let know state change occurs. content <details> provides accessible description <summary> . Default label text <details> element's first child <summary> element, user agent use default string (typically \"Details\") label disclosure box. Default style Per HTML specification, default style <summary> elements includes display: list-item . makes possible change remove icon displayed disclosure widget next label default, typically triangle. also change style display: block remove disclosure triangle. See Browser compatibility section details, browsers support full functionality element yet. WebKit-based browsers, Safari, possible control icon display non-standard CSS pseudo-element ::-webkit-details-marker . remove disclosure triangle, use summary::-webkit-details-marker { display: none } . Examples examples showing <summary> use. find examples documentation <details> element. Basic example basic example showing use <summary> <details> element: <details open> <summary>Overview</summary> <ol> <li>Cash hand: $500.00</li> <li>Current invoice: $75.30</li> <li>Due date: 5/6/19</li> </ol> </details> Result Summaries headings use heading elements <summary> , like this: <details open> <summary><h4>Overview</h4></summary> <ol> <li>Cash hand: $500.00</li> <li>Current invoice: $75.30</li> <li>Due date: 5/6/19</li> </ol> </details> Result currently spacing issues could addressed using CSS. Warning: <summary> element default role button (which strips roles child elements), example work users assistive technologies screen readers. <h4> role removed thus treated heading users. HTML summaries example adds semantics <summary> element indicate label important: <details open> <summary><strong>Overview</strong></summary> <ol> <li>Cash hand: $500.00</li> <li>Current invoice: $75.30</li> <li>Due date: 5/6/19</li> </ol> </details> Result Changing summary's icon <summary> element's marker, disclosure triangle, customized CSS. marker targeted using ::marker pseudo-element. accepts list-style shorthand property longhand component properties, list-style-type . enables changing triangle image (usually list-style-image ) string (including emojis). example, replace content one disclosure widget remove icon another setting list-style: none adding custom disclosure icon via generated content. CSS first disclosure widget, style ::marker , changing content based <details> element's [open] attribute. second widget, remove marker list-style properties, add styled generated content ::after pseudo-element. also include styles ::-webkit-details-marker target Safari. selector browser-specific pseudo-element included :is() pseudo-class invalidate selector list. details { font-size: 1rem; font-family: \"Open Sans\", Calibri, sans-serif; border: solid; padding: 2px 6px; margin-bottom: 1em; } details:first-of-type summary::marker, :is(::-webkit-details-marker) { content: \"+ \"; font-family: monospace; color: red; font-weight: bold; } details[open]:first-of-type summary::marker { content: \"- \"; } details:last-of-type summary { list-style: none; &::after { content: \"+\"; color: white; background-color: darkgreen; border-radius: 1em; font-weight: bold; padding: 0 5px; margin-inline-start: 5px; } [open] &::after { content: \"-\"; } } details:last-of-type summary::-webkit-details-marker { display: none; } CSS includes [open] attribute selector, matching open attribute present (when <details> open). :first-of-type :last-of-type pseudo-classes target first sibling elements type. included prefixed -webkit- pseudo-element within :is() pseudo-class takes forgiving selector list, prefixed pseudo-element invalid browser, whole selector block invalid. also used CSS nesting. See CSS selectors module. HTML <h1>Quotes Helen Keller</h1> <details> <summary>On women's rights</summary> <p> <q>We prayed, coaxed, begged, vote, hope men, chivalry, would bestow equal rights upon women take partnership affairs state. hoped common sense would triumph prejudices stupidity. thought boasted sense justice would overcome errors often fetter human spirit; always gone away empty-handed. shall beg more.</q> </p> </details> <details> <summary>On optimism</summary> <p> <q>Optimism faith leads achievement; nothing done without hope.</q> </p> </details> Result Technical summary | Content categories | none | |---|---| | Permitted content | Phrasing content, optionally intermixed Heading content | | Tag omission | None; start tag end tag mandatory. | | Permitted parents | <details> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-summary-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup", "title": "<sup>: The Superscript element - HTML: HyperText Markup Language | MDN", "text": "<sup>: Superscript element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <sup> HTML element specifies inline text displayed superscript solely typographical reasons. Superscripts usually rendered raised baseline using smaller text. Try Attributes element includes global attributes. Usage notes <sup> element used typographical reasons\u2014that is, change position text comply typographical conventions standards, rather solely presentation appearance purposes. example, style wordmark business product uses raised baseline done using CSS (most likely vertical-align ) rather <sup> . would done using, example, vertical-align: super or, shift baseline 50%, vertical-align: 50% . Appropriate use cases <sup> include (but necessarily limited to): - Displaying exponents, \"x3\". may worth considering use MathML these, especially complex cases. See Exponents Examples below. - Displaying superior lettering, used languages rendering certain abbreviations. example, French, word \"mademoiselle\" abbreviated \"Mlle\"; acceptable use case. See Superior lettering examples. - Representing ordinal numbers, \"4th\" instead \"fourth.\" See Ordinal numbers examples. Examples Exponents Exponents, powers number, among common uses superscripted text. example: <p> One common equations physics <var>E</var>=<var>m</var ><var>c</var><sup>2</sup>. </p> Result Superior lettering Superior lettering technically thing superscript. However, common use <sup> present superior lettering HTML. Among common uses superior lettering presentation certain abbreviations French: <p>Robert pr\u00e9sent\u00e9 son rapport \u00e0 M<sup>lle</sup> Bernard.</p> Result Ordinal numbers Ordinal numbers, \"fourth\" English \"quinto\" Spanish may abbreviated using numerals language-specific text rendered superscript: <p> ordinal number \"fifth\" abbreviated various languages follows: </p> <ul> <li>English: 5<sup>th</sup></li> <li>French: 5<sup>\u00e8me</sup></li> </ul> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | superscript | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-sub-and-sup-elements | Browser compatibility BCD tables load browser See also - <sub> HTML element produces subscripts. Note cannot usesub andsup time: need use MathML produce superscript subscript next chemical symbol element, representing atomic number nuclear number. - <msub> ,<msup> , and<msubsup> MathML elements. - CSS vertical-align property."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table", "title": "<table>: The Table element - HTML: HyperText Markup Language | MDN", "text": "<table>: Table element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <table> HTML element represents tabular data\u2014that is, information presented two-dimensional table comprised rows columns cells containing data. Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment table within parent element. possible enumerated values left ,center , andright . Use themargin-inline-start andmargin-inline-end CSS properties instead, attribute deprecated. bgcolor Deprecated- Defines background color table. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. border Deprecated- Defines, non-negative integer value (in pixels), size frame surrounding table. set 0 , theframe attribute set void. Use theborder CSS property instead, attribute deprecated. cellpadding Deprecated- Defines space content cell border. attribute obsolete: instead using it, apply padding CSS property the<th> and<td> elements. cellspacing Deprecated- Defines size space two cells. attribute obsolete: instead using it, set border-spacing CSS property the<table> element. Note effect the<table> element'sborder-collapse CSS property set tocollapse . frame Deprecated- Defines side frame surrounding table must displayed. possible enumerated values void ,above ,below ,hsides ,vsides ,lhs ,rhs ,box andborder . Use theborder-style andborder-width CSS properties instead, attribute deprecated. rules Deprecated- Defines rules (borders) displayed table. possible enumerated values none (default value),groups (<thead> ,<tbody> , and<tfoot> elements),rows (horizontal lines),cols (vertical lines), andall (border around every cell). Use theborder CSS property appropriate table-related elements, well the<table> itself, instead, attribute deprecated. summary Deprecated- Defines alternative text summarizes content table. Use <caption> element instead, attribute deprecated. width Deprecated- Specifies width table. Use width CSS property instead, attribute deprecated.Note: HTML specification includes height a<table> attribute, browsers support non-standard interpretation ofheight . unitless value sets minimum absolute height pixels. set percent value, minimum table height relative parent container's height. Use themin-height CSS property instead, attribute deprecated. Visual layout table contents Following elements part table structure: <table> box establishes table formatting context. Elements inside <table> generate rectangular boxes. box occupies number table cells according following rules: - row boxes fill table source code order top bottom. row box occupies one row cells. - row group box occupies one row boxes. - Column boxes placed next source code order. Depending value dir attribute, columns laid left-to-right right-to-left direction. column box occupies one columns table cells. - column group box occupies one column boxes. - cell box may span multiple rows columns. User agents trim cells fit available number rows columns. Table cells padding. Boxes make table margins. Table layers transparency styling purpose table elements may thought put six superimposed layers: background set element one layer visible layers transparent background. missing cell rendered anonymous table-cell box occupied place. Accessibility Captions supplying <caption> element whose value clearly concisely describes table's purpose, helps people decide need check rest table content skip it. helps people navigating aid assistive technology screen reader, people experiencing low vision conditions, people cognitive concerns. Scoping rows columns scope attribute header cells (<th> elements) redundant simple contexts, scope inferred. However, assistive technologies may fail draw correct inferences, specifying header scope may improve user experiences. complex tables, scope specified provide necessary information cells related header. - MDN Tables visually impaired users - Tables two headers \u2022 Tables \u2022 W3C WAI Web Accessibility Tutorials - Tables irregular headers \u2022 Tables \u2022 W3C WAI Web Accessibility Tutorials - H63: Using scope attribute associate header cells data cells data tables | W3C Techniques WCAG 2.0 Complicated tables Assistive technologies screen readers may difficulty parsing tables complex header cells can't associated strictly horizontal vertical way. typically indicated presence colspan rowspan attributes. Ideally, consider alternate ways present table's content, including breaking apart collection smaller, related tables rely using colspan rowspan attributes. addition helping people use assistive technology understand table's content, may also benefit people cognitive concerns may difficulty understanding associations table layout describing. table cannot broken apart, use combination id headers attributes programmatically associate table cell header(s) (<th> elements) cell associated with. Examples examples include tables progressively increasing complexity. See also beginner's Styling tables guide table styling information including common, useful techniques. Since structure <table> involves use several table-related HTML elements along various associated attributes, following examples intended provide simplified explanation covers basics common standards. Additional detailed information found corresponding linked pages. table examples demonstrate create accessible table structured HTML styled CSS. HTML tables structured, markup quickly grow. reason, important clearly define table's purpose final appearance create appropriate structure. logical structure developed semantic markup easier style, enables useful accessible tables understood navigated everyone, including search engines users assistive technologies. first example basic, subsequent examples growing complexity. First, develop basic HTML table structure table. first two examples contain table section groups defined head, body, foot, involve cell spanning explicitly defined cell relationships. even caption provided. work examples, progressively enhanced include table features complex data table possess. Basic table example includes basic table three rows two columns. demonstrate default browser table styles, CSS included example. HTML table rows defined <tr> elements, columns defined table header data cells within them. first row contains header cells (<th> elements) serve column headers data cells (<td> elements). element (<th> <td> ) per row respective column\u2014that is, first element row first column, second element row second column. <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>Maria Sanchez</td> <td>28</td> </tr> <tr> <td>Michael Johnson</td> <td>34</td> </tr> </table> Result custom CSS user stylesheet applied table. styling results purely user-agent stylesheet. Expanded table header cells example extends basic table, extending content adding basic CSS styles. HTML table comprises four rows (<tr> elements) now, four columns each. first row row header cells (The first row contains <th> elements). Subsequent rows include header column (<th> elements first child elements row) three data columns (<td> elements). table sectioning elements used, browser automatically defines content group structure, i.e., rows wrapped within body table implicit <tbody> element. <table> <tr> <th>Name</th> <th>ID</th> <th>Member Since</th> <th>Balance</th> </tr> <tr> <th>Margaret Nguyen</th> <td>427311</td> <td><time datetime=\"2010-06-03\">June 3, 2010</time></td> <td>0.00</td> </tr> <tr> <th>Edvard Galinski</th> <td>533175</td> <td><time datetime=\"2011-01-13\">January 13, 2011</time></td> <td>37.00</td> </tr> <tr> <th>Hoshi Nakamura</th> <td>601942</td> <td><time datetime=\"2012-07-23\">July 23, 2012</time></td> <td>15.00</td> </tr> </table> CSS CSS, provide basic styling create lines around components table make data structure clearer. CSS adds solid border around <table> around table's cells, including specified <th> <td> elements, demarcating every header data cells. table { border: 2px solid rgb(140 140 140); } th, td { border: 1px solid rgb(160 160 160); } Result Specifying table cell relations moving extend table advanced ways, advisable improve accessibility defining relationships header data cells (<th> <td> elements). HTML accomplished introducing scope attribute <th> elements setting values corresponding col (column) row value. <table> <tr> <th scope=\"col\">Name</th> <th scope=\"col\">ID</th> <th scope=\"col\">Member Since</th> <th scope=\"col\">Balance</th> </tr> <tr> <th scope=\"row\">Margaret Nguyen</th> <td>427311</td> <td><time datetime=\"2010-06-03\">June 3, 2010</time></td> <td>0.00</td> </tr> <tr> <th scope=\"row\">Edvard Galinski</th> <td>533175</td> <td><time datetime=\"2011-01-13\">January 13, 2011</time></td> <td>37.00</td> </tr> <tr> <th scope=\"row\">Hoshi Nakamura</th> <td>601942</td> <td><time datetime=\"2012-07-23\">July 23, 2012</time></td> <td>15.00</td> </tr> </table> CSS visual result unchanged\u2014the adaptation provides valuable contextual information assistive technologies screen readers help identify cells headers relate to. Note: table structure even complex, (additional) use headers attribute <th> <td> elements may improve accessibility help assistive technologies identify relationships cells; see Complicated tables. Explicitly specifying table section groups addition improving accessibility specifying cell relations, semantics table improved introducing table section groups. HTML Since first row (<tr> element) contains column header cells provides header rest table's contents, enclosed <thead> element explicitly specify row head section table. Moreover, automatically accomplished browser also defined explicitly\u2014the body section table, contains main data table, specified enclosing corresponding rows <tbody> element. explicit use <tbody> element helps browser create intended table structure, avoiding unwanted results. <table> <thead> <tr> <th scope=\"col\">Name</th> <th scope=\"col\">ID</th> <th scope=\"col\">Member Since</th> <th scope=\"col\">Balance</th> </tr> </thead> <tbody> <tr> <th scope=\"row\">Margaret Nguyen</th> <td>427311</td> <td><time datetime=\"2010-06-03\">June 3, 2010</time></td> <td>0.00</td> </tr> <tr> <th scope=\"row\">Edvard Galinski</th> <td>533175</td> <td><time datetime=\"2011-01-13\">January 13, 2011</time></td> <td>37.00</td> </tr> <tr> <th scope=\"row\">Hoshi Nakamura</th> <td>601942</td> <td><time datetime=\"2012-07-23\">July 23, 2012</time></td> <td>15.00</td> </tr> </tbody> </table> again, CSS visual result unchanged\u2014specifying table section groups provides valuable contextual information assistive technologies, including screen readers search engines, well styling CSS, shown later example. Column row spanning example, extend table even adding column introducing multi-row head section. HTML Building table created far, new column \"Membership End Date\" added body row <td> element. additional row (<tr> element) also added within head section (<thead> element) introduce \"Membership Dates\" header heading \"Joined\" \"Canceled\" columns. creation second header row involves adding colspan rowspan attributes <th> elements allocate header cells correct columns rows. <table> <thead> <tr> <th scope=\"col\" rowspan=\"2\">Name</th> <th scope=\"col\" rowspan=\"2\">ID</th> <th scope=\"col\" colspan=\"2\">Membership Dates</th> <th scope=\"col\" rowspan=\"2\">Balance</th> </tr> <tr> <th scope=\"col\">Joined</th> <th scope=\"col\">Canceled</th> </tr> </thead> <tbody> <tr> <th scope=\"row\">Margaret Nguyen</th> <td>427311</td> <td><time datetime=\"2010-06-03\">June 3, 2010</time></td> <td>n/a</td> <td>0.00</td> </tr> <tr> <th scope=\"row\">Edvard Galinski</th> <td>533175</td> <td><time datetime=\"2011-01-13\">January 13, 2011</time></td> <td><time datetime=\"2017-04-08\">April 8, 2017</time></td> <td>37.00</td> </tr> <tr> <th scope=\"row\">Hoshi Nakamura</th> <td>601942</td> <td><time datetime=\"2012-07-23\">July 23, 2012</time></td> <td>n/a</td> <td>15.00</td> </tr> </tbody> </table> Result head section two rows, one headers (<th> elements) \"Name\", \"ID\", \"Membership Dates\", \"Balance\", \"Membership Dates\" header two subheaders second row: \"Joined\" \"Canceled\". accomplished by: - first row's \"Name\", \"ID\", \"Balance\" header cells span table header rows using rowspan attribute, making two rows tall. - first row's \"Membership Dates\" header cell spans two columns using colspan attribute, causing two columns wide. - second row contains two header cells \"Joined\" \"Canceled\" three columns merged cells first row span two rows. two header cells correctly positioned \"Membership Dates\" header. Table caption column summary common advisable practice provide summary table's content, allowing users quickly determine table's relevance. Furthermore, \"Balance\" column summarized displaying sum balances individual members. HTML table summary added using table caption (<caption> element) first child element <table> . caption provides accessible description table. Lastly, table foot section (<tfoot> element) added body, row summarizes \"Balance\" column displaying sum. elements attributes introduced earlier applied. <table> <caption> Status club members 2021 </caption> <thead> <tr> <th scope=\"col\" rowspan=\"2\">Name</th> <th scope=\"col\" rowspan=\"2\">ID</th> <th scope=\"col\" colspan=\"2\">Membership Dates</th> <th scope=\"col\" rowspan=\"2\">Balance</th> </tr> <tr> <th scope=\"col\">Joined</th> <th scope=\"col\">Canceled</th> </tr> </thead> <tbody> <tr> <th scope=\"row\">Margaret Nguyen</th> <td>427311</td> <td><time datetime=\"2010-06-03\">June 3, 2010</time></td> <td>n/a</td> <td>0.00</td> </tr> <tr> <th scope=\"row\">Edvard Galinski</th> <td>533175</td> <td><time datetime=\"2011-01-13\">January 13, 2011</time></td> <td><time datetime=\"2017-04-08\">April 8, 2017</time></td> <td>37.00</td> </tr> <tr> <th scope=\"row\">Hoshi Nakamura</th> <td>601942</td> <td><time datetime=\"2012-07-23\">July 23, 2012</time></td> <td>n/a</td> <td>15.00</td> </tr> </tbody> <tfoot> <tr> <th scope=\"row\" colspan=\"4\">Total balance</th> <td>52.00</td> </tr> </tfoot> </table> Result Basic table styling Let's apply basic style table adjust typeface add background-color head foot rows. HTML unchanged time, let's dive right CSS. CSS font property added <table> element set visually appealing typeface (or abominable sans-serif typeface, depending personal opinion), interesting part second style, <tr> elements located within <thead> <tfoot> styled adding light blue background-color . way quickly apply background color cells specific sections simultaneously. table { border: 2px solid rgb(140 140 140); font: 16px \"Open Sans\", Helvetica, Arial, sans-serif; } thead > tr, tfoot > tr { background-color: rgb(228 240 245); } th, td { border: 1px solid rgb(160 160 160); } Result Advanced table styling we'll go all-out, styles rows header body areas both, including alternating row colors, cells different colors depending position within row, forth. Let's take look result first time. Result Here's final table look like: change HTML again. See proper preparation HTML structure do? CSS CSS much involved time. complicated, there's lot going on. Let's break down. border-collapse border-spacing properties added eliminate spacing cells collapse borders touch one another single border instead winding double borders. Additionally, <caption> placed bottom table using caption-side property: table { border-collapse: collapse; border-spacing: 0; border: 2px solid rgb(140 140 140); font: 16px \"Open Sans\", Helvetica, Arial, sans-serif; } caption { caption-side: bottom; padding: 10px; font-weight: bold; } Next, padding property used give table cells space around content. vertical-align property aligns content header cells bottom cell, seen cells head span two rows: th, td { border: 1px solid rgb(160 160 160); padding: 4px 6px; } th { vertical-align: bottom; } next CSS rule sets background-color <tr> elements table's head (as specified using <thead> ). bottom border head set two-pixel wide line. Notice, however, we're using :nth-of-type selector apply border-bottom property second row head. Why? head made two rows spanned cells. means actually two rows there; applying style first row would give us expected result: thead > tr { background-color: rgb(228 240 245); } thead > tr:nth-of-type(2) { border-bottom: 2px solid rgb(140 140 140); } Let's style two header cells \"Joined\" \"Canceled\" green red hues represent \"good\" new member \"bummer\" canceled membership. dig last row table's head section using :last-of-type selector give first header cell (the \"Joined\" header) greenish color, second header cell (the \"Canceled\" header) reddish hue: thead > tr:last-of-type > th:nth-of-type(1) { background-color: rgb(225 255 225); } thead > tr:last-of-type > th:nth-of-type(2) { background-color: rgb(255 225 225); } Since first column stand well, custom styling added too. CSS rule styles first header cell row table's body text-align property left-justify member names, somewhat different background-color : tbody > tr > th:first-of-type { text-align: left; background-color: rgb(225 229 244); } common help improve readability table data alternating row colors\u2014this sometimes referred \"zebra striping\". Let's add bit background-color every even row: tbody > tr:nth-of-type(even) { background-color: rgb(237 238 242); } Since standard practice right-justify currency values tables, let's here. sets text-align property last <td> body row right : tbody > tr > td:last-of-type { text-align: right; } Finally, styling similar head applied foot section table make stand well: tfoot > tr { border-top: 2px dashed rgb(140 140 140); background-color: rgb(228 240 245); } tfoot th, tfoot td { text-align: right; font-weight: bold; } Displaying large tables small spaces common issue tables web natively work well small screens amount content large, way make scrollable obvious, especially markup may come CMS cannot modified wrapper. example provides one way display tables small spaces. We've hidden HTML content large, nothing remarkable it. CSS useful inspect example. CSS looking styles notice table's display property set block . allows scrolling, table loses integrity, table cells try become small possible. mitigate issue we've set white-space nowrap <tbody> . However, <thead> avoid long titles forcing columns wider need display data. keep table headers page scrolling we've set position sticky <th> elements. Note set border-collapse collapse , header cannot separated correctly rest table. Given <table> fixed size, overflow set auto important part here, makes table scrollable. table, th, td { border: 1px solid black; } table { overflow: auto; width: 100%; max-width: 400px; height: 240px; display: block; margin: 0 auto; border-spacing: 0; } tbody { white-space: nowrap; } th, td { padding: 5px 10px; border-top-width: 0; border-left-width: 0; } th { position: sticky; top: 0; background: #fff; vertical-align: bottom; } th:last-child, td:last-child { border-right-width: 0; } tr:last-child td { border-bottom-width: 0; } Result Technical summary | Content categories | Flow content | |---|---| | Permitted content | order: | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content | | Implicit ARIA role | table | | Permitted ARIA roles | | | DOM interface | HTMLTableElement | Specifications | Specification | |---| | HTML Standard # the-table-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<tbody> ,<td> ,<tfoot> ,<th> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color tableborder ,border-collapse ,border-spacing : CSS properties control aspect cell borders, rules, framemargin ,padding : CSS properties align table set spacing cell contenttext-align : CSS property horizontally align table cell contentvertical-align : CSS property vertically align table cell contentwidth : CSS property control width table"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody", "title": "<tbody>: The Table Body element - HTML: HyperText Markup Language | MDN", "text": "<tbody>: Table Body element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <tbody> HTML element encapsulates set table rows (<tr> elements), indicating comprise body table's (main) data. Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment body cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Use thetext-align CSS property instead, attribute deprecated. bgcolor Deprecated- Defines background color body cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- Specifies alignment content character body cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored. charoff Deprecated- Specifies number characters offset body cell content alignment character specified char attribute. valign Deprecated- Specifies vertical alignment body cell. possible enumerated values baseline ,bottom ,middle , andtop . Use thevertical-align CSS property instead, attribute deprecated. Usage notes - <tbody> placed any<caption> ,<colgroup> , and<thead> elements. - <tr> elements specified direct children the<table> (see \"tag omission\" technical summary description valid), markup generated browser include a<tbody> element encapsulates them. result, CSS selectors astable > tr select elements. See also specifying body example. - permitted use one <tbody> per table long consecutive. allows divide rows (<tr> elements) large tables sections, may separately formatted desired. marked consecutive elements, browsers correct author error, ensuring any<thead> and<tfoot> elements rendered first last elements table, respectively. - Along related <thead> and<tfoot> elements, the<tbody> element provides useful semantic information used rendering either screen print. Specifying table content groups also provides valuable contextual information assistive technologies, including screen readers search engines. - printing document, case multipage table, <thead> and<tfoot> elements usually specify information remains same\u2014or least similar\u2014on page, the<tbody> element's contents generally differ page page. - table presented screen context (such window) large enough display entire table, user agent may let user scroll contents <thead> ,<tbody> ,<tfoot> , and<caption> blocks separately one another parent<table> . Examples See <table> complete table example introducing common standards best practices. specifying body example demonstrates browser automatically encapsulates <tr> elements within <tbody> element rows nested within table grouping element (<tbody> , <tfoot> , <thead> ) are, example, direct children <table> element. HTML Here, basic table table rows (<tr> elements) containing data (<td> elements) students created. <table> <tr> <td>3741255</td> <td>Jones, Martha</td> <td>Computer Science</td> <td>240</td> </tr> <tr> <td>3971244</td> <td>Nim, Victor</td> <td>Russian Literature</td> <td>220</td> </tr> <tr> <td>4100332</td> <td>Petrov, Alexandra</td> <td>Astrophysics</td> <td>260</td> </tr> </table> CSS Note CSS example, background-color specified <tbody> element tbody used part additional CSS selector. Alternatively, browser developer tools used check presence <tbody> element DOM. tbody { background-color: #e4f0f5; } tbody > tr > td:last-of-type { width: 60px; text-align: center; } Result Basic body structure example extends enhances basic table previous example. HTML introduce table head (<thead> element) explicitly use <tbody> element structure table semantic sections. table head contains column headers (<th> elements). <tbody> element represents body section table, contains number rows (<tr> elements) table's main data, data student. use table content groups semantic markup useful visual presentation (via CSS styling) contextual information assistive technologies; moreover, explicit use <tbody> element helps browser create intended table structure, avoiding unwanted results. <table> <thead> <tr> <th>Student ID</th> <th>Name</th> <th>Major</th> <th>Credits</th> </tr> </thead> <tbody> <tr> <td>3741255</td> <td>Jones, Martha</td> <td>Computer Science</td> <td>240</td> </tr> <tr> <td>3971244</td> <td>Nim, Victor</td> <td>Russian Literature</td> <td>220</td> </tr> <tr> <td>4100332</td> <td>Petrov, Alexandra</td> <td>Astrophysics</td> <td>260</td> </tr> </tbody> </table> CSS CSS nearly unchanged previous example, except basic styling highlight table head headers columns stand data table body. example above, tbody type selector used style body cells. tbody { background-color: #e4f0f5; } tbody > tr > td:last-of-type { text-align: center; } thead { border-bottom: 2px solid rgb(160 160 160); background-color: #2c5e77; color: #fff; } Result Multiple bodies example extends enhances table example even introducing multiple body sections. Using multiple <tbody> elements allows creating row groupings within table. table body potentially head row rows; however, may one <thead> element per table! that, <tr> <th> elements used create headers within <tbody> . HTML Building table previous basic example, students added and, instead listing student's major row, students grouped major. Note major enclosed within <tbody> block, first row (<tr> element) serving head block, displaying major title within <th> element uses colspan attribute span header across three columns table. remaining row within major's <tbody> represents one student. <table> <thead> <tr> <th>Student ID</th> <th>Name</th> <th>Credits</th> </tr> </thead> <tbody> <tr> <th colspan=\"3\">Computer Science</th> </tr> <tr> <td>3741255</td> <td>Jones, Martha</td> <td>240</td> </tr> <tr> <td>4077830</td> <td>Pierce, Benjamin</td> <td>200</td> </tr> <tr> <td>5151701</td> <td>Kirk, James</td> <td>230</td> </tr> </tbody> <tbody> <tr> <th colspan=\"3\">Russian Literature</th> </tr> <tr> <td>3971244</td> <td>Nim, Victor</td> <td>220</td> </tr> </tbody> <tbody> <tr> <th colspan=\"3\">Astrophysics</th> </tr> <tr> <td>4100332</td> <td>Petrov, Alexandra</td> <td>260</td> </tr> <tr> <td>8892377</td> <td>Toyota, Hiroko</td> <td>240</td> </tr> </tbody> </table> CSS CSS unchanged. However, slightly subtle style added header cells contained directly within <tbody> (as opposed reside <thead> ). used headers indicating table section's corresponding major. tbody > tr > th { border-top: 2px solid rgb(160 160 160); border-bottom: 1px solid rgb(140 140 140); background-color: #e4f0f5; font-weight: normal; } tbody { background-color: whitesmoke; } thead { background-color: #2c5e77; color: #fff; } Result Technical summary | Content categories | None. | |---|---| | Permitted content | Zero <tr> elements. | | Tag omission | <tbody> element's start tag omitted first thing inside <tbody> element <tr> element, element immediately preceded <tbody> , <thead> , <tfoot> element whose end tag omitted. (It can't omitted element empty.) <tbody> element's end tag omitted <tbody> element immediately followed <tbody> <tfoot> element, content parent element. | | Permitted parents | Within required parent <table> element, <tbody> element added <caption> , <colgroup> , <thead> elements. | | Implicit ARIA role | rowgroup | | Permitted ARIA roles | | | DOM interface | HTMLTableSectionElement | Specifications | Specification | |---| | HTML Standard # the-tbody-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<table> ,<td> ,<tfoot> ,<th> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color body cellborder : CSS property control borders body cellstext-align : CSS property horizontally align body cell contentvertical-align : CSS property vertically align body cell content"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td", "title": "<td>: The Table Data Cell element - HTML: HyperText Markup Language | MDN", "text": "<td>: Table Data Cell element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <td> HTML element defines cell table contains data may used child <tr> element. Try Attributes element includes global attributes. colspan - Contains non-negative integer value indicates many columns data cell spans extends. default value 1 . User agents dismiss values higher 1000 incorrect, setting default value (1 ). headers - Contains list space-separated strings, corresponding id attribute the<th> elements provide headings table cell. rowspan - Contains non-negative integer value indicates many rows data cell spans extends. default value 1 ; value set to0 , extends end table grouping section (<thead> ,<tbody> ,<tfoot> , even implicitly defined), cell belongs to. Values higher than65534 clipped to65534 . Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. abbr Deprecated- Contains short abbreviated description data cell's content. user-agents, speech readers, may present description content itself. Put abbreviated content inside cell place (longer) description title attribute, attribute deprecated. Or, preferably, include content within data cell, use CSS visually clip overflowing text. align Deprecated- Specifies horizontal alignment data cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Use thetext-align CSS property instead, attribute deprecated. axis Deprecated- Contains list space-separated strings, corresponding id attribute group cells data cell applies to. bgcolor Deprecated- Defines background color data cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- nothing. originally intended specify alignment content character data cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored. charoff Deprecated- nothing. originally intended specify number characters offset data cell content alignment character specified char attribute. height Deprecated- Defines recommended data cell height. Use height CSS property instead, attribute deprecated. scope Deprecated- Defines cells header (defined <th> ) element relates to. possible enumerated values arerow ,col ,rowgroup , andcolgroup . use attribute the<th> element define row column header, attribute deprecated the<td> element. valign Deprecated- Specifies vertical alignment data cell. possible enumerated values baseline ,bottom ,middle , andtop . Use thevertical-align CSS property instead, attribute deprecated. width Deprecated- Defines recommended data cell width. Use width CSS property instead, attribute deprecated. Usage notes - <td> may used within a<tr> element. - using colspan androwspan attributes span data cells across multiple columns rows, cells without attributes defined (with default value of1 ) automatically fitted free available spaces table structure span 1x1 cells, illustrated following figure:Note: attributes must used overlap cells. Examples See <table> complete table example introducing common standards best practices. Basic data cells example uses <td> elements along table-related elements introduce basic table data phonetic alphabet. HTML table rows (<tr> elements) contain header cells (<th> elements) data cell <td> elements. <th> element first child row forms first column table, <th> providing row header data cells within row. corresponding <td> element contains data aligned respective column header row header cell. Note: Normally, table head group column headers would implemented make easier understand information columns. <thead> <tbody> elements would used group rows headers data respective table head body sections. implemented example focus data cells reduce complexity example. <table> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>AL fah</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td>DELL tah</td> </tr> </table> CSS basic CSS used style table cells. CSS attribute selectors :nth-of-type pseudo-class used alternate appearance cells make information table easier understand identify. td, th { border: 1px solid rgb(160 160 160); padding: 8px 10px; } tr:nth-of-type(odd) td { background-color: #eee; } tr th[scope=\"row\"] { background-color: #d6ecd4; } Result Column row spanning example extends enhances basic table previous example adding additional \"ABC\" cell. HTML additional data cell (<td> element) introduced within first row (<tr> element). creates fourth column table. Using rowspan attribute, \"ABC\" cell spanned across first three rows table. last data cells subsequent rows span two columns. done using colspan attribute, aligning correctly within table structure. Note additional row (<tr> element) added table illustrate this. <table> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>AL fah</td> <td rowspan=\"3\">ABC</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td colspan=\"2\">DELL tah</td> </tr> <tr> <th scope=\"row\">E</th> <td>Echo</td> <td colspan=\"2\">ECK oh</td> </tr> </table> CSS :first-of-type :last-of-type pseudo-classes used CSS select style added \"ABC\" data cell. tr:first-of-type td:last-of-type { width: 60px; background-color: #505050; color: #fff; font-weight: bold; text-align: center; } td, th { border: 1px solid rgb(160 160 160); padding: 8px 10px; } tr:nth-of-type(odd) td { background-color: #eee; } tr th[scope=\"row\"] { background-color: #d6ecd4; } Result Associate data cells header cells complex relationships data cells (<td> elements) header cells (<th> elements), using <th> elements scope attribute alone may sufficient assistive technologies, especially screen readers. HTML improve accessibility previous example allow screen readers, example, speak headers associated data cell, headers attribute introduced along id attributes. row header cell (<th> element) associated \"ABC\" data cell, i.e., letters \"A\", \"B\", \"C\", given unique identifier id attribute. \"ABC\" data cell (<td> element) uses id values space-separated list headers attribute. Note: recommended use descriptive useful values id attribute. id document must unique document. example, id values single characters maintain focus concept headers attribute. <table> <tr> <th id=\"a\" scope=\"row\">A</th> <td>Alfa</td> <td>AL fah</td> <td headers=\"a b c\" rowspan=\"3\">ABC</td> </tr> <tr> <th id=\"b\" scope=\"row\">B</th> <td>Bravo</td> <td>BRAH voh</td> </tr> <tr> <th id=\"c\" scope=\"row\">C</th> <td>Charlie</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td colspan=\"2\">DELL tah</td> </tr> <tr> <th scope=\"row\">E</th> <td>Echo</td> <td colspan=\"2\">ECK oh</td> </tr> </table> Result visual result unchanged previous example table, data cell (<td> ) explicitly associated row header cell (<th> ). Technical summary | Content categories | Sectioning root. | |---|---| | Permitted content | Flow content. | | Tag omission | start tag mandatory. end tag may omitted, immediately followed <th> <td> element data parent element. | | Permitted parents | <tr> element. | | Implicit ARIA role | cell descendant <table> element, gridcell descendant element grid role | | Permitted ARIA roles | | | DOM interface | HTMLTableCellElement | Specifications | Specification | |---| | HTML Standard # the-td-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<table> ,<tbody> ,<tfoot> ,<th> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color data cellborder : CSS property control borders data cellsheight : CSS property control recommended data cell heighttext-align : CSS property horizontally align data cell contentvertical-align : CSS property vertically align data cell contentwidth : CSS property control recommended data cell width:nth-of-type ,:first-of-type ,:last-of-type : CSS pseudo-classes select desired data cells"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template", "title": "<template>: The Content Template element - HTML: HyperText Markup Language | MDN", "text": "<template>: Content Template element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since November 2015. * parts feature may varying levels support. <template> HTML element serves mechanism holding HTML fragments, either used later via JavaScript generated immediately shadow DOM. Attributes element includes global attributes. shadowrootmode - Creates shadow root parent element. declarative version Element.attachShadow() method accepts enumerated values.open - Exposes internal shadow root DOM JavaScript (recommended use cases). closed - Hides internal shadow root DOM JavaScript. Note: HTML parser creates ShadowRoot object DOM first<template> node attribute set allowed value. attribute set, set allowed value \u2014 aShadowRoot already declaratively created parent \u2014 anHTMLTemplateElement constructed. AHTMLTemplateElement cannot subsequently changed shadow root parsing, example, settingHTMLTemplateElement.shadowRootMode .Note: may find non-standard shadowroot attribute older tutorials examples used supported Chrome 90-110. attribute since removed replaced standardshadowrootmode attribute. shadowrootclonable - Sets value clonable property aShadowRoot created using element totrue . set, clone shadow host (the parent element this<template> ) created withNode.cloneNode() orDocument.importNode() include shadow root copy. shadowrootdelegatesfocus - Sets value delegatesFocus property aShadowRoot created using element totrue . set non-focusable element shadow tree selected, focus delegated first focusable element tree. value defaults tofalse . shadowrootserializable Experimental- Sets value serializable property aShadowRoot created using element totrue . set, shadow root may serialized calling theElement.getHTML() orShadowRoot.getHTML() methods theoptions.serializableShadowRoots parameter settrue . value defaults tofalse . Usage notes two main ways use <template> element. Template document fragment default, element's content rendered. corresponding HTMLTemplateElement interface includes standard content property (without equivalent content/markup attribute). content property read-only holds DocumentFragment contains DOM subtree represented template. fragment cloned via cloneNode method inserted DOM. careful using content property returned DocumentFragment exhibit unexpected behavior. details, see Avoiding DocumentFragment pitfalls section below. Declarative Shadow DOM <template> element contains shadowrootmode attribute value either open closed , HTML parser immediately generate shadow DOM. element replaced DOM content wrapped ShadowRoot , attached parent element. declarative equivalent calling Element.attachShadow() attach shadow root element. element value shadowrootmode , shadowrootmode attribute, parser generates HTMLTemplateElement . Similarly, multiple declarative shadow roots, first one replaced ShadowRoot \u2014 subsequent instances parsed HTMLTemplateElement objects. Examples Generating table rows First start HTML portion example. <table id=\"producttable\"> <thead> <tr> <td>UPC_Code</td> <td>Product_Name</td> </tr> </thead> <tbody> <!-- existing data could optionally included --> </tbody> </table> <template id=\"productrow\"> <tr> <td class=\"record\"></td> <td></td> </tr> </template> First, table later insert content using JavaScript code. comes template, describes structure HTML fragment representing single table row. table created template defined, use JavaScript insert rows table, row constructed using template basis. // Test see browser supports HTML template element checking // presence template element's content attribute. (\"content\" document.createElement(\"template\")) { // Instantiate table existing HTML tbody // row template const tbody = document.querySelector(\"tbody\"); const template = document.querySelector(\"#productrow\"); // Clone new row insert table const clone = template.content.cloneNode(true); let td = clone.querySelectorAll(\"td\"); td[0].textContent = \"1235646565\"; td[1].textContent = \"Stuff\"; tbody.appendChild(clone); // Clone new row insert table const clone2 = template.content.cloneNode(true); td = clone2.querySelectorAll(\"td\"); td[0].textContent = \"0384928528\"; td[1].textContent = \"Acme Kidney Beans 2\"; tbody.appendChild(clone2); } else { // Find another way add rows table // HTML template element supported. } result original HTML table, two new rows appended via JavaScript: Implementing declarative shadow DOM example, hidden support warning included beginning markup. warning later set displayed via JavaScript browser support shadowrootmode attribute. Next, two <article> elements, containing nested <style> elements different behaviors. first <style> element global whole document. second one scoped shadow root generated place <template> element presence shadowrootmode attribute. <p hidden> \u26d4 browser support <code>shadowrootmode</code> attribute yet. </p> <article> <style> p { padding: 8px; background-color: wheat; } </style> <p>I'm DOM.</p> </article> <article> <template shadowrootmode=\"open\"> <style> p { padding: 8px; background-color: plum; } </style> <p>I'm shadow DOM.</p> </template> </article> const isShadowRootModeSupported = HTMLTemplateElement.prototype.hasOwnProperty(\"shadowRootMode\"); document .querySelector(\"p[hidden]\") .toggleAttribute(\"hidden\", isShadowRootModeSupported); Declarative Shadow DOM delegated focus example demonstrates shadowrootdelegatesfocus applied shadow root created declaratively, effect focus. code first declares shadow root inside <div> element, using <template> element shadowrootmode attribute. displays non-focusable <div> containing text focusable <input> element. also uses CSS style elements :focus blue, set normal styling host element. <div> <template shadowrootmode=\"open\"> <style> :host { display: block; border: 1px dotted black; padding: 10px; margin: 10px; } :focus { outline: 2px solid blue; } </style> <div>Clickable Shadow DOM text</div> <input type=\"text\" placeholder=\"Input inside Shadow DOM\" /> </template> </div> second code block identical except sets shadowrootdelegatesfocus attribute, delegates focus first focusable element tree non-focusable element tree selected. <div> <template shadowrootmode=\"open\" shadowrootdelegatesfocus> <style> :host { display: block; border: 1px dotted black; padding: 10px; margin: 10px; } :focus { outline: 2px solid blue; } </style> <div>Clickable Shadow DOM text</div> <input type=\"text\" placeholder=\"Input inside Shadow DOM\" /> </template> </div> Last use following CSS apply red border parent <div> element focus. div:focus { border: 2px solid red; } results shown below. HTML first rendered, elements styling, shown first image. shadow root shadowrootdelegatesfocus set click anywhere except <input> focus change (if select <input> element look like second image). shadow root shadowrootdelegatesfocus set, clicking text (which non-focusable) selects <input> element, first focusable element tree. also focuses parent element shown below. Avoiding DocumentFragment pitfalls DocumentFragment value passed, Node.appendChild similar methods move child nodes value target node. Therefore, usually preferable attach event handlers children DocumentFragment , rather DocumentFragment itself. Consider following HTML JavaScript: HTML <div id=\"container\"></div> <template id=\"template\"> <div>Click me</div> </template> JavaScript const container = document.getElementById(\"container\"); const template = document.getElementById(\"template\"); function clickHandler(event) { event.target.append(\" \u2014 Clicked div\"); } const firstClone = template.content.cloneNode(true); firstClone.addEventListener(\"click\", clickHandler); container.appendChild(firstClone); const secondClone = template.content.cloneNode(true); secondClone.children[0].addEventListener(\"click\", clickHandler); container.appendChild(secondClone); Result Since firstClone DocumentFragment , children added container appendChild called; event handlers firstClone copied. contrast, event handler added first child node secondClone , event handler copied appendChild called, clicking works one would expect. Technical summary | Content categories | Metadata content, flow content, phrasing content, script-supporting element | |---|---| | Permitted content | restrictions | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts metadata content, phrasing content, script-supporting elements. Also allowed child <colgroup> element span attribute. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLTemplateElement | Specifications | Specification | |---| | HTML Standard # the-template-element | Browser compatibility BCD tables load browser See also part andexportparts HTML attributes<slot> HTML element:has-slotted ,:host ,:host() , and:host-context() CSS pseudo-classes::part and::slotted CSS pseudo-elementsShadowRoot interface- Using templates slots - CSS scoping module - Declarative Shadow DOM (with html) Using Shadow DOM - Declarative shadow DOM web.dev (2023)"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea", "title": "<textarea>: The Textarea element - HTML: HyperText Markup Language | MDN", "text": "<textarea>: Textarea element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <textarea> HTML element represents multi-line plain-text editing control, useful want allow users enter sizeable amount free-form text, example comment review feedback form. Try example demonstrates number features <textarea> : - id attribute allow the<textarea> associated a<label> element accessibility purposes - name attribute set name associated data point submitted server form submitted. rows andcols attributes allow specify exact size the<textarea> take. Setting good idea consistency, browser defaults differ.- <textarea> element specifies content differently HTML JavaScript contexts:- HTML, initial content <textarea> specified opening closing tags, avalue attribute. - JavaScript, <textarea> elements avalue property used get set current content, anddefaultValue get set initial value (equivalent accessing HTML element's text content). - HTML, initial content <textarea> element also accepts several attributes common form <input> s, autocapitalize , autocomplete , autofocus , disabled , placeholder , readonly , required . Attributes element includes global attributes. autocapitalize - Controls whether inputted text automatically capitalized and, so, manner. autocomplete - Controls whether entered text automatically completed browser. Possible values are: : user must explicitly enter value field every use, document provides auto-completion method; browser automatically complete entry.on : browser automatically complete value based values user entered previous uses.<token-list> : ordered set space-separated autofill detail tokens, optionally preceded sectioning token, billing shipping grouping token, and/or token identifying type recipient. <textarea> elements specify theautocomplete attribute inherit theautocomplete oroff status set the<textarea> 's form owner. form owner either the<form> element this<textarea> element descendant form element whoseid specified theform attribute input element. information, see theautocomplete attribute in<form> . autocorrect - Controls whether automatic spelling correction processing text enabled user editing textarea . Permitted values are: autofocus - Boolean attribute lets specify form control input focus page loads. one form-associated element document attribute specified. cols - visible width text control, average character widths. specified, must positive integer. specified, default value 20 . dirname - attribute used indicate text directionality element contents. information, see dirname attribute. disabled - Boolean attribute indicates user cannot interact control. attribute specified, control inherits setting containing element, example <fieldset> ; containing element thedisabled attribute set, control enabled. form - form element <textarea> element associated (its \"form owner\"). value attribute must theid form element document. attribute specified, the<textarea> element must descendant form element. attribute enables place<textarea> elements anywhere within document, descendants form elements. maxlength - maximum string length (measured UTF-16 code units) user enter. value specified, user enter unlimited number characters. minlength - minimum string length (measured UTF-16 code units) required user enter. name - name control. placeholder - hint user entered control. Carriage returns line-feeds within placeholder text must treated line breaks rendering hint. Note: Placeholders used show example type data entered form; substitute proper <label> element tied input. See<input> labels full explanation. readonly - Boolean attribute indicates user cannot modify value control. Unlike disabled attribute, thereadonly attribute prevent user clicking selecting control. value read-only control still submitted form. required - attribute specifies user must fill value submitting form. rows - number visible text lines control. specified, must positive integer. specified, default value 2. spellcheck - Specifies whether <textarea> subject spell-checking underlying browser/OS. value be:true : Indicates element needs spelling grammar checked.default : Indicates element act according default behavior, possibly based parent element's ownspellcheck value.false : Indicates element spell-checked. wrap - Indicates control wrap value form submission. Possible values are: hard : browser automatically inserts line breaks (CR+LF) line longer width control; thecols attribute must specified take effectsoft : browser ensures line breaks entered value aCR+LF pair, additional line breaks added value.off Non-standard : Likesoft changes appearance towhite-space: pre line segments exceedingcols wrapped the<textarea> becomes horizontally scrollable. attribute specified, soft default value. Styling CSS <textarea> replaced element \u2014 intrinsic dimensions, like raster image. default, display value inline-block . Compared form elements relatively easy style, box model, fonts, color scheme, etc. easily manipulable using regular CSS. Styling HTML forms provides useful tips styling <textarea> s. Baseline inconsistency HTML specification define baseline <textarea> is, different browsers set different positions. Gecko, <textarea> baseline set baseline first line textarea, another browser may set bottom <textarea> box. use vertical-align: baseline it; behavior unpredictable. Controlling whether textarea resizable browsers, <textarea> resizable \u2014 notice drag handle right-hand corner, used alter size element page. controlled resize CSS property \u2014 resizing enabled default, explicitly disable using resize value none : textarea { resize: none; } Styling valid invalid values Valid invalid values <textarea> element (e.g. within, outside bounds set minlength , maxlength , required ) highlighted using :valid :invalid pseudo-classes. example, give textarea different border depending whether valid invalid: textarea:invalid { border: 2px dashed red; } textarea:valid { border: 2px solid lime; } Examples Basic example following example shows textarea set number rows columns, default content, CSS styles prevent users resizing element 500px wide 130px high: <textarea name=\"textarea\" rows=\"5\" cols=\"15\">Write something here</textarea> textarea { max-height: 130px; max-width: 500px; } Result Example using \"minlength\" \"maxlength\" example minimum maximum number characters \u2014 10 20 respectively. Try see. <textarea name=\"textarea\" rows=\"5\" cols=\"30\" minlength=\"10\" maxlength=\"20\"> Write something here\u2026 </textarea> textarea { max-height: 130px; max-width: 500px; } Result Note minlength stop user removing characters number entered goes past minimum, make value entered <textarea> invalid. Also note even minlength value set (3, example), empty <textarea> still considered valid unless also required attribute set. Example using \"placeholder\" example placeholder set. Notice disappears start typing box. <textarea name=\"textarea\" rows=\"5\" cols=\"30\" placeholder=\"Comment text.\"></textarea> textarea { max-height: 130px; max-width: 500px; } Result Note: Placeholders used show example type data entered form; substitute proper <label> element tied input. See <input> labels full explanation. Disabled readonly text areas example shows two <textarea> \u2014 one readonly one disabled . cannot edit contents either element, readonly element focusable value submitted forms. disabled element's value submitted focusable. <textarea name=\"textarea\" rows=\"5\" cols=\"30\" readonly> read-only textarea. </textarea> <textarea name=\"textarea\" rows=\"5\" cols=\"30\" disabled> disabled textarea. </textarea> textarea { display: block; resize: horizontal; max-width: 500px; } Result Technical summary | Content categories | Flow content, phrasing content, Interactive content, listed, labelable, resettable, submittable form-associated element. | |---|---| | Permitted content | Text | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | textbox | | Permitted ARIA roles | role permitted | | DOM interface | HTMLTextAreaElement | Specifications | Specification | |---| | HTML Standard # the-textarea-element | Browser compatibility BCD tables load browser See also - form-related elements:"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot", "title": "<tfoot>: The Table Foot element - HTML: HyperText Markup Language | MDN", "text": "<tfoot>: Table Foot element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <tfoot> HTML element encapsulates set table rows (<tr> elements), indicating comprise foot table information table's columns. usually summary columns, e.g., sum given numbers column. Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment foot cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Use thetext-align CSS property instead, attribute deprecated. bgcolor Deprecated- Defines background color foot cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- nothing. originally intended specify alignment content character foot cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored. charoff Deprecated- nothing. originally intended specify number characters offset foot cell content alignment character specified char attribute. valign Deprecated- Specifies vertical alignment foot cell. possible enumerated values baseline ,bottom ,middle , andtop . Use thevertical-align CSS property instead, attribute deprecated. Usage notes - <tfoot> placed any<caption> ,<colgroup> ,<thead> ,<tbody> , and<tr> elements. - Along related <thead> and<tbody> elements, the<tfoot> element provides useful semantic information used rendering either screen print. Specifying table content groups also provides valuable contextual information assistive technologies, including screen readers search engines. - printing document, case multipage table, table foot usually specifies information output intermediate summary page. Example See <table> complete table example introducing common standards best practices. Table footer example demonstrates table divided head section column headers, body section table's main data, foot section summarizing data one column. HTML <thead> , <tbody> , <tfoot> elements used structure basic table semantic sections. <tfoot> element represents foot section table, contains row (<tr> ) representing calculated average values \"Credits\" column. allocate cells foot correct columns, colspan attribute used <th> element span row header cell across first three table columns. single data cell (<td> ) foot automatically placed correct location, i.e., fourth column, omitted colspan attribute value defaulting 1 . Additionally, scope attribute set row header cell (<th> ) foot explicitly define foot header cell relates table cells within row, example one data cell foot row contains calculated average. <table> <thead> <tr> <th>Student ID</th> <th>Name</th> <th>Major</th> <th>Credits</th> </tr> </thead> <tbody> <tr> <td>3741255</td> <td>Jones, Martha</td> <td>Computer Science</td> <td>240</td> </tr> <tr> <td>3971244</td> <td>Nim, Victor</td> <td>Russian Literature</td> <td>220</td> </tr> <tr> <td>4100332</td> <td>Petrov, Alexandra</td> <td>Astrophysics</td> <td>260</td> </tr> </tbody> <tfoot> <tr> <th colspan=\"3\" scope=\"row\">Average Credits</th> <td>240</td> </tr> </tfoot> </table> CSS basic CSS used style highlight table foot foot cells stand data table body. tfoot { border-top: 3px dotted rgb(160 160 160); background-color: #2c5e77; color: #fff; } tfoot th { text-align: right; } tfoot td { font-weight: bold; } thead { border-bottom: 2px solid rgb(160 160 160); background-color: #2c5e77; color: #fff; } tbody { background-color: #e4f0f5; } Result Technical summary | Content categories | None. | |---|---| | Permitted content | Zero <tr> elements. | | Tag omission | start tag mandatory. end tag may omitted content parent <table> element. | | Permitted parents | <table> element. <tfoot> must appear <caption> , <colgroup> , <thead> , <tbody> , <tr> elements. Note requirement HTML.Originally, HTML4, opposite true: <tfoot> element could placed <tbody> <tr> elements. | | Implicit ARIA role | rowgroup | | Permitted ARIA roles | | | DOM interface | HTMLTableSectionElement | Specifications | Specification | |---| | HTML Standard # the-tfoot-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<table> ,<tbody> ,<td> ,<th> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color foot cellborder : CSS property control borders foot cellstext-align : CSS property horizontally align foot cell contentvertical-align : CSS property vertically align foot cell content"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th", "title": "<th>: The Table Header element - HTML: HyperText Markup Language | MDN", "text": "<th>: Table Header element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <th> HTML element defines cell header group table cells may used child <tr> element. exact nature group defined scope headers attributes. Try Attributes element includes global attributes. abbr - short, abbreviated description header cell's content provided alternative label use header cell referencing cell contexts. user-agents, speech readers, may present description content itself. colspan - non-negative integer value indicating many columns header cell spans extends. default value 1 . User agents dismiss values higher 1000 incorrect, defaulting values to1 . headers - list space-separated strings corresponding id attributes the<th> elements provide headers header cell. rowspan - non-negative integer value indicating many rows header cell spans extends. default value 1 ; value set to0 , header cell extends end table grouping section (<thead> ,<tbody> ,<tfoot> , even implicitly defined), the<th> belongs to. Values higher than65534 clipped at65534 . scope - Defines cells header (defined <th> ) element relates to. Possible enumerated values are:row : header relates cells row belongs to;col : header relates cells column belongs to;rowgroup : header belongs rowgroup relates cells;colgroup : header belongs colgroup relates cells. scope attribute specified, value notrow ,col ,rowgroup , orcolgroup , browsers automatically select set cells header cell applies. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment header cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Use thetext-align CSS property instead, attribute deprecated. axis Deprecated- Contains list space-separated strings, corresponding id attribute group cells header cell applies to. Use thescope attribute instead, attribute deprecated. bgcolor Deprecated- Defines background color header cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- nothing. originally intended specify alignment content character header cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored. charoff Deprecated- nothing. originally intended specify number characters offset header cell content alignment character specified char attribute. height Deprecated- Defines recommended header cell height. Use height CSS property instead, attribute deprecated. valign Deprecated- Specifies vertical alignment header cell. possible enumerated values baseline ,bottom ,middle , andtop . Use thevertical-align CSS property instead, attribute deprecated. width Deprecated- Defines recommended header cell width. Use width CSS property instead, attribute deprecated. Usage notes - <th> may used within a<tr> element. - simple contexts, using scope attribute header cells (<th> elements) redundant becausescope inferred. However, certain assistive technologies may fail infer correctly, specifying header scope may improve user experiences. - using colspan androwspan attributes span header cells across multiple columns rows, cells without attributes defined (with default value of1 ) automatically fitted free available spaces table structure span 1x1 cells, illustrated following figure:Note: attributes must used overlap cells. Examples See <table> complete table example introducing common standards best practices. Basic column row headers example uses <th> elements introduce column row headers basic table structure. HTML first row (<tr> element) contains column headers (<th> elements), act \"titles\" columns make easier understand information columns identify data. indicate column header relates cells corresponding column, scope attribute set col (column). remaining rows contain main data table. rows row header (<th> element) introduced first cell. creates column row headers first column table. Similar column headers, scope attribute set row specify cells row header relates to, example data cells (<td> elements) row . Note: Normally, grouping elements <thead> <tbody> used group rows headers respective table head body sections. elements omitted example reduce complexity enable focusing use header cells. <table> <tr> <th scope=\"col\">Symbol</th> <th scope=\"col\">Code word</th> <th scope=\"col\">Pronunciation</th> </tr> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>AL fah</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td>DELL tah</td> </tr> </table> CSS basic CSS used style table cells. use CSS attribute selectors target header cells based scope attribute values, highlighting column row headers (<th> elements) differentiating data cells (<td> ). th, td { border: 1px solid rgb(160 160 160); padding: 8px 10px; } th[scope=\"col\"] { background-color: #505050; color: #fff; } th[scope=\"row\"] { background-color: #d6ecd4; } tr:nth-of-type(odd) td { background-color: #eee; } Result Column row spanning example extends enhances basic table previous example adding second row additional column headers. HTML additional table row (<tr> element) added second header row table two additional column headers (<th> elements). way, \"Pronunciation\" column split two columns, one IPA (International Phonetic Alphabet) notation one respelling (the original pronunciation column). corresponding data cells (<td> elements) added subsequent row. shown usage notes, colspan rowspan attributes used <th> elements allocate header cells correct columns rows. achieve \"two-row\" header table structure, first two header cells within first <tr> element spanned across two rows. third header cell spanned two columns wide (remaining first row). setup leaves two available areas third fourth columns second row, two headers within second <tr> element automatically placed, default value 1 colspan rowspan attributes. Note: Normally, <thead> <tbody> elements used group rows headers respective table head body sections. implemented example focus headers spanning reduce example's complexity. <table> <tr> <th scope=\"col\" rowspan=\"2\">Symbol</th> <th scope=\"col\" rowspan=\"2\">Code word</th> <th scope=\"col\" colspan=\"2\">Pronunciation</th> </tr> <tr> <th scope=\"col\">IPA</th> <th scope=\"col\">Respelling</th> </tr> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>\u02c8\u00e6lfa</td> <td>AL fah</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>\u02c8bra\u02d0\u02c8vo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>\u02c8t\u0283\u0251\u02d0li</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td>\u02c8delt\u0251</td> <td>DELL tah</td> </tr> </table> CSS CSS unchanged previous example. Result Associate header cells header cells complex relationships header cells, using th elements scope attribute alone may sufficient assistive technologies, especially screen readers. HTML improve accessibility previous example allow screen readers, example, speak headers associated header cell, headers attribute introduced along id attributes. way \"Pronunciation\" column split two columns example, introducing \"two row\" header, assistive technologies screen readers may able identify additional header cells (th elements) \"Pronunciation\" header cell related vice versa. Therefore, headers attribute used \"Pronunciation\", \"IPA\", \"Respelling\" header cells associate related header cells based values unique identifiers added id attributes form space-separated list. Note: recommended use descriptive useful values id attribute. id document must unique document. example, id values single characters maintain focus concept headers attribute. <table> <tr> <th scope=\"col\" rowspan=\"2\">Symbol</th> <th scope=\"col\" rowspan=\"2\">Code word</th> <th scope=\"col\" colspan=\"2\" id=\"p\" headers=\"i r\">Pronunciation</th> </tr> <tr> <th scope=\"col\" id=\"i\" headers=\"p\">IPA</th> <th scope=\"col\" id=\"r\" headers=\"p\">Respelling</th> </tr> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>\u02c8\u00e6lfa</td> <td>AL fah</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>\u02c8bra\u02d0\u02c8vo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>\u02c8t\u0283\u0251\u02d0li</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td>\u02c8delt\u0251</td> <td>DELL tah</td> </tr> </table> Result visual result unchanged previous example table. Technical summary | Content categories | None. | |---|---| | Permitted content | Flow content, header, footer, sectioning content, heading content descendants. | | Tag omission | start tag mandatory. end tag may omitted, immediately followed <th> <td> element data parent element. | | Permitted parents | <tr> element. | | Implicit ARIA role | columnheader rowheader | | Permitted ARIA roles | | | DOM interface | HTMLTableCellElement | Specifications | Specification | |---| | HTML Standard # the-th-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<table> ,<tbody> ,<td> ,<tfoot> ,<thead> ,<tr> : table-related elementsbackground-color : CSS property set background color header cellborder : CSS property control borders header cellsheight : CSS property control recommended header cell heighttext-align : CSS property horizontally align header cell contentvertical-align : CSS property vertically align header cell contentwidth : CSS property control recommended header cell width:nth-of-type ,:first-of-type ,:last-of-type : CSS pseudo-classes select desired header cells"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead", "title": "<thead>: The Table Head element - HTML: HyperText Markup Language | MDN", "text": "<thead>: Table Head element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <thead> HTML element encapsulates set table rows (<tr> elements), indicating comprise head table information table's columns. usually form column headers (<th> elements). Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment head cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Use thetext-align CSS property instead, attribute deprecated. bgcolor Deprecated- Defines background color head cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- nothing. originally intended specify alignment content character head cell. align set tochar , attribute ignored. charoff Deprecated- nothing. originally intended specify number characters offset head cell content alignment character specified char attribute. valign Deprecated- Specifies vertical alignment head cell. possible enumerated values baseline ,bottom ,middle , andtop . Use thevertical-align CSS property instead, attribute deprecated. Usage notes - <thead> placed any<caption> and<colgroup> elements, any<tbody> ,<tfoot> , and<tr> elements. - Along related <tbody> and<tfoot> elements, the<thead> element provides useful semantic information used rendering either screen print. Specifying table content groups also provides valuable contextual information assistive technologies, including screen readers search engines. - printing document, case multipage table, table head usually specifies information remains page. Examples See <table> complete table example introducing common standards best practices. Basic head structure example demonstrates table divided head section column headers body section table's main data. HTML <thead> <tbody> elements used structure table rows semantic sections. <thead> element represents head section table, contains row (<tr> ) column headers cells (<th> ). <table> <thead> <tr> <th>Student ID</th> <th>Name</th> <th>Major</th> <th>Credits</th> </tr> </thead> <tbody> <tr> <td>3741255</td> <td>Jones, Martha</td> <td>Computer Science</td> <td>240</td> </tr> <tr> <td>3971244</td> <td>Nim, Victor</td> <td>Russian Literature</td> <td>220</td> </tr> <tr> <td>4100332</td> <td>Petrov, Alexandra</td> <td>Astrophysics</td> <td>260</td> </tr> </tbody> </table> CSS basic CSS used style highlight table head headings columns stand data table body. thead { border-bottom: 2px solid rgb(160 160 160); text-align: center; background-color: #2c5e77; color: #fff; } tbody { background-color: #e4f0f5; } Result Multiple head rows example demonstrates table head section two rows. HTML extend markup table basic example example including two table rows (<tr> ) within <thead> element creating multi-row table head. included additional column, splitting student names first last names. <table> <thead> <tr> <th rowspan=\"2\">Student ID</th> <th colspan=\"2\">Student</th> <th rowspan=\"2\">Major</th> <th rowspan=\"2\">Credits</th> </tr> <tr> <th>First name</th> <th>Last name</th> </tr> </thead> <tbody> <tr> <td>3741255</td> <td>Martha</td> <td>Jones</td> <td>Computer Science</td> <td>240</td> </tr> <tr> <td>3971244</td> <td>Victor</td> <td>Nim</td> <td>Russian Literature</td> <td>220</td> </tr> <tr> <td>4100332</td> <td>Alexandra</td> <td>Petrov</td> <td>Astrophysics</td> <td>260</td> </tr> </tbody> </table> Cell spanning order associate line header cells correct columns rows, colspan rowspan attributes used <th> elements. values set attributes specify many cells header cell (<th> ) spans. Due way attributes set, two second-row header cells lined columns head. span one row one column default values colspan rowspan attributes 1 . column row spanning demonstrated example illustrated following figure: CSS CSS unchanged previous example. Result Technical summary | Content categories | None. | |---|---| | Permitted content | Zero <tr> elements. | | Tag omission | start tag mandatory. end tag may omitted <thead> element immediately followed <tbody> <tfoot> element. | | Permitted parents | <table> element. <thead> must appear <caption> <colgroup> elements, even implicitly defined, <tbody> , <tfoot> , <tr> elements. | | Implicit ARIA role | rowgroup | | Permitted ARIA roles | | | DOM interface | HTMLTableSectionElement | Specifications | Specification | |---| | HTML Standard # the-thead-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<table> ,<tbody> ,<td> ,<tfoot> ,<th> ,<tr> : table-related elementsbackground-color : CSS property set background color head cellborder : CSS property control borders head cellstext-align : CSS property horizontally align head cell contentvertical-align : CSS property vertically align head cell content"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time", "title": "<time>: The (Date) Time element - HTML: HyperText Markup Language | MDN", "text": "<time>: (Date) Time element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since October 2017. <time> HTML element represents specific period time. may include datetime attribute translate dates machine-readable format, allowing better search engine results custom features reminders. may represent one following: - time 24-hour clock. - precise date Gregorian calendar (with optional time timezone information). - valid time duration. Try Attributes Like HTML elements, element supports global attributes. datetime - attribute indicates time and/or date element must one formats described below. Usage notes element presenting dates times machine-readable format. example, help user agent offer add event user's calendar. element used dates prior introduction Gregorian calendar (due complications calculating dates). datetime value (the machine-readable value datetime) value element's datetime attribute, must proper format (see below). element datetime attribute, must element descendants, datetime value element's child text content. Valid datetime values | Description | Microsyntax | Examples | |---|---|---| | Valid month string | YYYY-MM | 2011-11 , 2013-05 | | Valid date string | YYYY-MM-DD | 1887-12-01 | | Valid yearless date string | MM-DD | 11-12 | | Valid time string | HH:MM HH:MM:SS HH:MM:SS.mmm | 23:59 12:15:47 12:15:52.998 | | Valid local date time string | YYYY-MM-DDHH:MM YYYY-MM-DD HH:MM:SS YYYY-MM-DD HH:MM:SS.mmm YYYY-MM-DDTHH:MM YYYY-MM-DDTHH:MM:SS YYYY-MM-DDTHH:MM:SS.mmm | 2013-12-25 11:12 1972-07-25 13:43:07 1941-03-15 07:06:23.678 2013-12-25T11:12 1972-07-25T13:43:07 1941-03-15T07:06:23.678 | | Valid time-zone offset string | Z +HHMM +HH:MM -HHMM -HH:MM | Z +0200 +04:30 -0300 -08:00 | | Valid global date time string | combination valid local date time string followed valid time-zone offset string | 2013-12-25 11:12+0200 1972-07-25 13:43:07+04:30 1941-03-15 07:06:23.678Z 2013-12-25T11:12-08:00 | | Valid week string | YYYY-WWW | 2013-W46 | | Four ASCII digits | YYYY | 2013 , 0001 | | Valid duration string | PdDThHmMsS PdDThHmMs.XS | P12DT7H12M13S P12DT7H12M13.3S P12DT7H12M13.45S P12DT7H12M13.455S PT7H12M13S PT7H12M13.2S PT7H12M13.56S PT7H12M13.999S 7d 5h 24m 13s | Examples Basic example HTML <p>The concert starts <time datetime=\"2018-07-07T20:00:00\">20:00</time>.</p> Result datetime example HTML <p> concert took place <time datetime=\"2001-05-15T19:00\">May 15</time>. </p> Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | time | | Permitted ARIA roles | | | DOM interface | HTMLTimeElement | Specifications | Specification | |---| | HTML Standard # the-time-element | Browser compatibility BCD tables load browser See also - <data> element, allowing signal kind values."},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title", "title": "<title>: The Document Title element - HTML: HyperText Markup Language | MDN", "text": "<title>: Document Title element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <title> HTML element defines document's title shown browser's title bar page's tab. contains text; tags within element ignored. <title>Grandma's Heavy Metal Festival Journal</title> Attributes element includes global attributes. Usage notes <title> element always used within page's <head> block. Page titles SEO contents page title significant implications search engine optimization (SEO). general, longer, descriptive title performs better short generic titles. content title one components used search engine algorithms decide order list pages search results. Also, title initial \"hook\" grab attention readers glancing search results page. guidelines tips composing good titles: - Avoid one- two-word titles. Use descriptive phrase, term-definition pairing glossary reference-style pages. - Search engines typically display first 55\u201360 characters page title. Text beyond may lost, try titles longer that. must use longer title, make sure important parts come earlier nothing critical part title likely dropped. - use \"keyword blobs.\" title list words, algorithms often reduce page's position search results. - Try make sure titles unique possible within site. Duplicate\u2014or near-duplicate\u2014titles contribute inaccurate search results. Accessibility important provide accurate concise title describe page's purpose. common navigation technique users assistive technology read page title infer content page contains. navigating page determine content time-consuming potentially confusing process. Titles unique every page website, ideally surfacing primary purpose page first, followed name website. Following pattern help ensure primary purpose page announced screen reader first. provides far better experience listen name website unique page title, every page user navigates website. Examples <title>Menu - Blue House Chinese Food - FoodYum: Online takeout today!</title> form submission contains errors submission re-renders current page, title used help make users aware errors submission. instance, update page title value reflect significant page state changes (such form validation problems). <title> 2 errors - order - Sea Food Store - Food: Online takeout today! </title> Note: Presently, dynamically updating page's title automatically announced screen readers. going update page title reflect significant changes page's state, use ARIA Live Regions may necessary, well. Examples <title>Awesome interesting stuff</title> example establishes page whose title (as displayed top window window's tab) \"Awesome interesting stuff\". Technical summary | Content categories | Metadata content. | |---|---| | Permitted content | Text inter-element whitespace. | | Tag omission | opening closing tags required. Note leaving </title> cause browser ignore rest page. | | Permitted parents | <head> element contains <title> element. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted. | | DOM interface | HTMLTitleElement | Specifications | Specification | |---| | HTML Standard # the-title-element | Browser compatibility BCD tables load browser See also - SVG <title> element"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr", "title": "<tr>: The Table Row element - HTML: HyperText Markup Language | MDN", "text": "<tr>: Table Row element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <tr> HTML element defines row cells table. row's cells established using mix <td> (data cell) <th> (header cell) elements. Try Attributes element includes global attributes. Deprecated attributes following attributes deprecated used. documented reference updating existing code historical interest only. align Deprecated- Specifies horizontal alignment row cell. possible enumerated values left ,center ,right ,justify , andchar . supported, thechar value aligns textual content character defined thechar attribute offset defined thecharoff attribute. Use thetext-align CSS property instead, attribute deprecated. bgcolor Deprecated- Defines background color row cell. value HTML color; either 6-digit hexadecimal RGB code, prefixed # , color keyword. CSS<color> values supported. Use thebackground-color CSS property instead, attribute deprecated. char Deprecated- Specifies alignment content character row cell. Typical values include period ( . ) attempting align numbers monetary values. Ifalign set tochar , attribute ignored. charoff Deprecated- Specifies number characters offset row cell content alignment character specified char attribute. valign Deprecated- Specifies vertical alignment row cell. possible enumerated values baseline ,bottom ,middle , andtop . Use thevertical-align CSS property instead, attribute deprecated. Usage notes - <tr> element valid child a<thead> ,<tbody> , or<tfoot> element only. - <tr> placed direct child parent<table> element, the<tbody> parent implied browsers add the<tbody> markup. - implied <tbody> parent supported the<table> otherwise child<tbody> elements, the<tr> included any<caption> ,<colgroup> , and<thead> elements. - CSS pseudo-classes :nth-of-type ,:first-of-type , and:last-of-type often useful selecting desired set rows data header cells (<td> and<th> elements). - <tr> included direct child the<table> , browser adds a<tbody> markup, CSS selectors astable > tr may work expected all. Examples See <table> complete table example introducing common standards best practices. Basic row setup example demonstrates table four rows three columns, first column contains headers row data cells. HTML Four <tr> elements used create four table rows. row contains three cells - one header cell (<th> ) two data cells (<td> ) - creating three columns. scope attribute set header cell specifies cells relate to, example data cells within row . <table> <tbody> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>AL fah</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td>DELL tah</td> </tr> </tbody> </table> CSS CSS :nth-of-type pseudo-class used select every odd row set background-color rows slightly darker tone, creating so-called \"zebra stripe\" effect. alternating background makes rows data table easier parse read\u2014imagine many rows columns trying find data particular row. addition, row header cells (<th> elements) highlighted background-color distinguish data cells (<td> elements). tr:nth-of-type(odd) { background-color: #eee; } tr th[scope=\"row\"] { background-color: #d6ecd4; } Result Header row example extends basic table previous example adding header row first row table. HTML additional table row (<tr> ) added first row table column header cells (<th> ) providing header column. put row <thead> grouping element indicate header table. scope attribute added header cell (<th> ) within head row explicitly specify header cell relates cells within column, even though cells <tbody> . <table> <thead> <tr> <th scope=\"col\">Symbol</th> <th scope=\"col\">Code word</th> <th scope=\"col\">Pronunciation</th> </tr> </thead> <tbody> <tr> <th scope=\"row\">A</th> <td>Alfa</td> <td>AL fah</td> </tr> <tr> <th scope=\"row\">B</th> <td>Bravo</td> <td>BRAH voh</td> </tr> <tr> <th scope=\"row\">C</th> <td>Charlie</td> <td>CHAR lee</td> </tr> <tr> <th scope=\"row\">D</th> <td>Delta</td> <td>DELL tah</td> </tr> </tbody> </table> CSS CSS nearly unchanged previous example, except additional styling highlight \"header row\" headers columns stand cells. tr:nth-of-type(odd) { background-color: #eee; } tr th[scope=\"col\"] { background-color: #505050; color: #fff; } tr th[scope=\"row\"] { background-color: #d6ecd4; } Result Sorting rows native methods sorting rows (<tr> elements) <table> . using Array.prototype.sort() , Node.removeChild , Node.appendChild , custom sort() function implemented JavaScript sort HTMLCollection <tr> elements. HTML <tbody> element used basic table mark body section table include three rows (<tr> elements) data (<td> elements), creating one column numbers descending order. <table> <tbody> <tr> <td>3</td> </tr> <tr> <td>2</td> </tr> <tr> <td>1</td> </tr> </tbody> </table> JavaScript JavaScript code below, created sort() function attached <tbody> element sorts table cells order increasing value updates display accordingly. HTMLTableSectionElement.prototype.sort = function (cb) { Array.from(this.rows) .sort(cb) .forEach((e) => this.appendChild(this.removeChild(e))); }; document .querySelector(\"table\") .tBodies[0].sort((a, b) => a.textContent.localeCompare(b.textContent)); Result Sorting rows click header cells example extends basic table previous example making sorting interactive independent multiple columns. HTML additional data cell (<td> element) added row (<tr> element) within table body (<tbody> element) create second column letters ascending order. Using <thead> element, head section added body section introduce head row table header cells (<th> element). header cells used JavaScript code make clickable perform corresponding sorting activated per click. <table> <thead> <tr> <th>Numbers</th> <th>Letters</th> </tr> </thead> <tbody> <tr> <td>3</td> <td>A</td> </tr> <tr> <td>2</td> <td>B</td> </tr> <tr> <td>1</td> <td>C</td> </tr> </tbody> </table> JavaScript click event handler added table header (<th> element) <table> document ; sorts rows (<tr> elements) <tbody> based contents data cells (<td> elements) contained rows. Note: solution assumes <td> elements populated raw text descendant elements. const allTables = document.querySelectorAll(\"table\"); (const table allTables) { const tBody = table.tBodies[0]; const rows = Array.from(tBody.rows); const headerCells = table.tHead.rows[0].cells; (const th headerCells) { const cellIndex = th.cellIndex; th.addEventListener(\"click\", () => { rows.sort((tr1, tr2) => { const tr1Text = tr1.cells[cellIndex].textContent; const tr2Text = tr2.cells[cellIndex].textContent; return tr1Text.localeCompare(tr2Text); }); tBody.append(...rows); }); } } Result Note: usable accessible, header cell sortable column must identifiable sorting button must define whether column currently sorted ascending descending order visually aria-sort attribute. See ARIA Authoring Practices Guide's sortable table example information. Technical summary | Content categories | None | |---|---| | Permitted content | Zero <td> and/or <th> elements; script-supporting elements (<script> <template> ) also allowed. | | Tag omission | Start tag mandatory. End tag may omitted <tr> element immediately followed <tr> element, row last element parent table group (<thead> , <tbody> <tfoot> ) element. | | Permitted parents | <table> (only table child <tbody> element, even <caption> , <colgroup> , <thead> elements); otherwise, parent must <thead> , <tbody> <tfoot> element. | | Implicit ARIA role | row | | Permitted ARIA roles | | | DOM interface | HTMLTableRowElement | Specifications | Specification | |---| | HTML Standard # the-tr-element | Browser compatibility BCD tables load browser See also - Learn: HTML table basics <caption> ,<col> ,<colgroup> ,<table> ,<tbody> ,<td> ,<tfoot> ,<th> ,<thead> : table-related elementsbackground-color : CSS property set background color row cellborder : CSS property control borders row cellstext-align : CSS property horizontally align row cell contentvertical-align : CSS property vertically align row cell content:nth-of-type ,:first-of-type ,:last-of-type : CSS pseudo-classes select desired row cells"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track", "title": "<track>: The Embed Text Track element - HTML: HyperText Markup Language | MDN", "text": "<track>: Embed Text Track element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <track> HTML element used child media elements, <audio> <video> . track element lets specify timed text track (or time-based data) displayed parallel media element, example overlay subtitles closed captions top video alongside audio tracks. Multiple tracks specified media element, containing different kinds timed text data, timed text data translated different locales. data used either track set default, kind translation based user preferences. tracks formatted WebVTT format (.vtt files) \u2014 Web Video Text Tracks. Try Attributes element includes global attributes. default - attribute indicates track enabled unless user's preferences indicate another track appropriate. may used one track element per media element. kind - text track meant used. omitted default kind subtitles . attribute contains invalid value, usemetadata . following keywords allowed:- subtitles - Subtitles provide translation content cannot understood viewer. example speech text English English language film. - Subtitles may contain additional content, usually extra background information. example text beginning Star Wars films, date, time, location scene. - captions - Closed captions provide transcription possibly translation audio. - may include important non-verbal information music cues sound effects. may indicate cue's source (e.g. music, text, character). - Suitable users deaf sound muted. - chapters - Chapter titles intended used user navigating media resource. - metadata - Tracks used scripts. visible user. - label - user-readable title text track used browser listing available text tracks. src - Address track ( .vtt file). Must valid URL. attribute must specified URL value must origin document \u2014 unless the<audio> or<video> parent element thetrack element acrossorigin attribute. srclang - Language track text data. must valid BCP 47 language tag. kind attribute set tosubtitles , thensrclang must defined. Usage notes Track data types type data track adds media set kind attribute, take values subtitles , captions , chapters metadata . element points source file containing timed text browser exposes user requests additional data. media element cannot one track kind , srclang , label . Detecting cue changes underlying TextTrack , indicated track property, receives cuechange event every time currently-presented cue changed. happens even track associated media element. track associated media element, using <track> element child <audio> <video> element, cuechange event also sent HTMLTrackElement . let textTrackElem = document.getElementById(\"text-track\"); textTrackElem.addEventListener(\"cuechange\", (event) => { let cues = event.target.track.activeCues; }); Adding text tracks programmatically JavaScript interface represents <track> element HTMLTrackElement . text track associated element obtained HTMLTrackElement.track property, type TextTrack . TextTrack objects also added HTMLVideoElement HTMLAudioElement elements using HTMLMediaElement.addTextTrack() method. TextTrack objects associated media element stored TextTrackList , retrieved using HTMLMediaElement.textTracks property. Examples <video controls poster=\"/images/sample.gif\"> <source src=\"sample.mp4\" type=\"video/mp4\" /> <source src=\"sample.ogv\" type=\"video/ogv\" /> <track kind=\"captions\" src=\"sampleCaptions.vtt\" srclang=\"en\" /> <track kind=\"chapters\" src=\"sampleChapters.vtt\" srclang=\"en\" /> <track kind=\"subtitles\" src=\"sampleSubtitles_de.vtt\" srclang=\"de\" /> <track kind=\"subtitles\" src=\"sampleSubtitles_en.vtt\" srclang=\"en\" /> <track kind=\"subtitles\" src=\"sampleSubtitles_ja.vtt\" srclang=\"ja\" /> <track kind=\"subtitles\" src=\"sampleSubtitles_oz.vtt\" srclang=\"oz\" /> <track kind=\"metadata\" src=\"keyStage1.vtt\" srclang=\"en\" label=\"Key Stage 1\" /> <track kind=\"metadata\" src=\"keyStage2.vtt\" srclang=\"en\" label=\"Key Stage 2\" /> <track kind=\"metadata\" src=\"keyStage3.vtt\" srclang=\"en\" label=\"Key Stage 3\" /> <!-- Fallback --> \u2026 </video> Technical summary | Content categories | None | |---|---| | Permitted content | None; void element. | | Tag omission | Must start tag must end tag. | | Permitted parents | | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | role permitted | | DOM interface | HTMLTrackElement | Specifications | Specification | |---| | HTML Standard # the-track-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt", "title": "<tt>: The Teletype Text element - HTML: HyperText Markup Language | MDN", "text": "<tt>: Teletype Text element Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. <tt> HTML element creates inline text presented using user agent's default monospace font face. element created purpose rendering text would displayed fixed-width display teletype, text-only screen, line printer. terms non-proportional, monotype, monospace used interchangeably general meaning: describe typeface whose characters number pixels wide. element obsolete, however. use semantically helpful <code> , <kbd> , <samp> , <var> elements inline text needs presented monospace type, <pre> tag content presented separate block. Note: none semantic elements appropriate use case (for example, need show content non-proportional font), consider using <span> element, styling desired using CSS. font-family property good place start. Attributes element includes global attributes Examples Basic example example uses <tt> show text entered into, output by, terminal application. <p> Enter following telnet command prompt: <code>set localecho</code><br /> telnet client display: <tt>Local Echo on</tt> </p> Result Overriding default font override browser's default font\u2014if browser permits so, required do\u2014using CSS: CSS tt { font-family: \"Lucida Console\", \"Menlo\", \"Monaco\", \"Courier\", monospace; } HTML <p> Enter following telnet command prompt: <code>set localecho</code><br /> telnet client display: <tt>Local Echo on</tt> </p> Result Usage notes <tt> element is, default, rendered using browser's default non-proportional font. override using CSS creating rule using tt selector, seen example Overriding default font above. Note: User-configured changes default monospace font setting may take precedence CSS. Although element officially deprecated HTML 4.01, use discouraged favor semantic elements and/or CSS. <tt> element obsolete HTML 5. Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # tt | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u", "title": "<u>: The Unarticulated Annotation (Underline) element - HTML: HyperText Markup Language | MDN", "text": "<u>: Unarticulated Annotation (Underline) element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <u> HTML element represents span inline text rendered way indicates non-textual annotation. rendered default single solid underline, may altered using CSS. Warning: element used called \"Underline\" element older versions HTML, still sometimes misused way. underline text, instead apply style includes CSS text-decoration property set underline . Try See Usage notes section details appropriate use <u> isn't. Attributes element includes global attributes. Usage notes Along pure styling elements, original HTML Underline (<u> ) element deprecated HTML 4; however, <u> restored HTML 5 new, semantic, meaning: mark text form non-textual annotation applied. Note: Avoid using <u> element default styling (of underlined text) way confused hyperlink, also underlined default. Use cases Valid use cases <u> element include annotating spelling errors, applying proper name mark denote proper names Chinese text, forms annotation. use <u> underline text presentation purposes, denote titles books. elements consider using cases, use element <u> , as: <em> denote stress emphasis<b> draw attention text<mark> mark key words phrases<strong> indicate text strong importance<cite> mark titles books publications<i> denote technical terms, transliterations, thoughts, names vessels Western texts provide textual annotations (as opposed non-textual annotations created <u> ), use <ruby> element. apply underlined appearance without semantic meaning, use text-decoration property's value underline . Examples Indicating spelling error example uses <u> element CSS display paragraph includes misspelled error, error indicated red wavy underline style fairly commonly used purpose. HTML <p>This paragraph includes <u class=\"spelling\">wrnogly</u> spelled word.</p> HTML, see use <u> class, spelling , used indicate misspelling word \"wrongly\". CSS u.spelling { text-decoration: red wavy underline; } CSS indicates <u> element styled class spelling , red wavy underline underneath text. common styling spelling errors. Another common style presented using red dashed underline . Result result familiar anyone used popular word processors available today. Avoiding <u> time, actually want use <u> . examples show instead several cases. Non-semantic underlines underline text without implying semantic meaning, use <span> element text-decoration property set \"underline\" , shown below. HTML <span class=\"underline\">Today's Special</span> <br /> Chicken Noodle Soup Carrots CSS .underline { text-decoration: underline; } Result Presenting book title Book titles presented using <cite> element instead <u> even <i> . Using cite element <p>The class read <cite>Moby-Dick</cite> first term.</p> Styling cite element default styling <cite> element renders text italics. override using CSS: <p>The class read <cite>Moby-Dick</cite> first term.</p> cite { font-style: normal; text-decoration: underline; } Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | generic | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-u-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul", "title": "<ul>: The Unordered List element - HTML: HyperText Markup Language | MDN", "text": "<ul>: Unordered List element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <ul> HTML element represents unordered list items, typically rendered bulleted list. Try Attributes element includes global attributes. compact Deprecated- Boolean attribute hints list rendered compact style. interpretation attribute depends user agent, work browsers. Warning: use attribute, deprecated: use CSS instead. give similar effect compact attribute, CSS propertyline-height used value of80% . type Deprecated- attribute sets bullet style list. values defined HTML3.2 transitional version HTML 4.0/4.01 are: circle disc square fourth bullet type defined WebTV interface, browsers support it: triangle .If present CSS list-style-type property applies element, user agent selects bullet type depending nesting level list.Warning: use attribute, deprecated; use CSS list-style-type property instead. Usage notes - <ul> element grouping collection items numerical ordering, order list meaningless. Typically, unordered-list items displayed bullet, several forms, like dot, circle, square. bullet style defined HTML description page, associated CSS, using thelist-style-type property. - <ul> and<ol> elements may nested deeply desired. Moreover, nested lists may alternate between<ol> and<ul> without restriction. - <ol> and<ul> elements represent list items. differ that, the<ol> element, order meaningful. determine one use, try changing order list items; meaning changed, the<ol> element used, otherwise use<ul> . Examples Basic example <ul> <li>first item</li> <li>second item</li> <li>third item</li> </ul> Result Nesting list <ul> <li>first item</li> <li> second item <!-- Look, closing </li> tag placed here! --> <ul> <li>second item first subitem</li> <li> second item second subitem <!-- second nested unordered list! --> <ul> <li>second item second subitem first sub-subitem</li> <li>second item second subitem second sub-subitem</li> <li>second item second subitem third sub-subitem</li> </ul> </li> <!-- Closing </li> tag li contains third unordered list --> <li>second item third subitem</li> </ul> <!-- closing </li> tag --> </li> <li>third item</li> </ul> Result Ordered list inside unordered list <ul> <li>first item</li> <li> second item <!-- Look, closing </li> tag placed here! --> <ol> <li>second item first subitem</li> <li>second item second subitem</li> <li>second item third subitem</li> </ol> <!-- closing </li> tag --> </li> <li>third item</li> </ul> Result Technical summary | Content categories | Flow content, <ul> element's children include least one <li> element, palpable content. | |---|---| | Permitted content | Zero <li> , <script> <template> elements. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts flow content. | | Implicit ARIA role | list | | Permitted ARIA roles | directory , group , listbox , menu , menubar , none , presentation , radiogroup , tablist , toolbar , tree | | DOM Interface | HTMLUListElement | Specifications | Specification | |---| | HTML Standard # the-ul-element | Browser compatibility BCD tables load browser See also - CSS properties may specially useful style <ul> element:- list-style property, choose way ordinal displays. - CSS counters, handle complex nested lists. - line-height property, simulate deprecatedcompact attribute. - margin property, control list indentation. -"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var", "title": "<var>: The Variable element - HTML: HyperText Markup Language | MDN", "text": "<var>: Variable element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <var> HTML element represents name variable mathematical expression programming context. typically presented using italicized version current typeface, although behavior browser-dependent. Try Attributes element includes global attributes. Usage notes Related elements elements used contexts <var> commonly used include: <code> : HTML Code element<kbd> : HTML Keyboard input element<samp> : HTML Sample Output element encounter code mistakenly using <var> style purposes rather semantic purposes, either use <span> appropriate CSS or, appropriate semantic element among following: Default style browsers apply font-style \"italic\" rendering <var> . overridden CSS, like this: var { font-style: normal; } Examples Basic example Here's basic example, using <var> denote variable names mathematical equation. <p>A simple equation: <var>x</var> = <var>y</var> + 2</p> Result Overriding default style Using CSS, override default style <var> element. example, variable names rendered bold, using Courier available, otherwise falls back default monospace font. CSS var { font: bold 15px \"Courier\", \"Courier New\", monospace; } HTML <p> variables <var>minSpeed</var> <var>maxSpeed</var> control minimum maximum speed apparatus revolutions per minute (RPM). </p> HTML uses <var> enclose names two variables. Result Technical summary | Content categories | Flow content, phrasing content, palpable content. | |---|---| | Permitted content | Phrasing content. | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-var-element | Browser compatibility BCD tables load browser"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video", "title": "<video>: The Video Embed element - HTML: HyperText Markup Language | MDN", "text": "<video>: Video Embed element Baseline Widely available * feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. * parts feature may varying levels support. <video> HTML element embeds media player supports video playback document. use <video> audio content well, <audio> element may provide appropriate user experience. Try example shows simple usage <video> element. Similarly <img> element, include path media want display inside src attribute; include attributes specify information video width height, whether want autoplay loop, show browser's default video controls, etc. content inside opening closing <video></video> tags shown fallback browsers support element. Attributes Like HTML elements, element supports global attributes. autoplay - Boolean attribute; specified, video automatically begins play back soon without stopping finish loading data. Note: Modern browsers block audio (or videos unmuted audio track) autoplaying, sites automatically play audio unpleasant experience users. See autoplay guide additional information properly use autoplay. disable video autoplay, autoplay=\"false\" work; video autoplay attribute the<video> tag all. remove autoplay, attribute needs removed altogether. controls - attribute present, browser offer controls allow user control video playback, including volume, seeking, pause/resume playback. controlslist - controlslist attribute, specified, helps browser select controls show thevideo element whenever browser shows set controls (that is, thecontrols attribute specified).The allowed values nodownload ,nofullscreen andnoremoteplayback .Use disablepictureinpicture attribute want disable Picture-In-Picture mode (and control). crossorigin - enumerated attribute indicates whether use CORS fetch related video. CORS-enabled resources reused <canvas> element without tainted. allowed values are:anonymous - Sends cross-origin request without credential. words, sends Origin: HTTP header without cookie, X.509 certificate, performing HTTP Basic authentication. server give credentials origin site (by setting theAccess-Control-Allow-Origin: HTTP header), resource tainted, usage restricted. use-credentials - Sends cross-origin request credential. words, sends Origin: HTTP header cookie, certificate, performing HTTP Basic authentication. server give credentials origin site (throughAccess-Control-Allow-Credentials: HTTP header), resource tainted usage restricted. present, resource fetched without CORS request (i.e. without sending Origin: HTTP header), preventing non-tainted use in<canvas> elements. invalid, handled enumerated keywordanonymous used. See CORS settings attributes additional information. disablepictureinpicture - Prevents browser suggesting Picture-in-Picture context menu request Picture-in-Picture automatically cases. disableremoteplayback - Boolean attribute used disable capability remote playback devices attached using wired (HDMI, DVI, etc.) wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc.). Safari, use x-webkit-airplay=\"deny\" fallback. height - height video's display area, CSS pixels (absolute values only; percentages). loop - Boolean attribute; specified, browser automatically seek back start upon reaching end video. muted - Boolean attribute indicates default audio mute setting contained video. set, audio initially silenced. default value false , meaning audio played video played. playsinline - Boolean attribute indicating video played \"inline\", is, within element's playback area. Note absence attribute imply video always played fullscreen. poster - URL image shown video downloading. attribute specified, nothing displayed first frame available, first frame shown poster frame. preload - enumerated attribute intended provide hint browser author thinks lead best user experience regarding content loaded video played. may one following values: none : Indicates video preloaded.metadata : Indicates video metadata (e.g. length) fetched.auto : Indicates whole video file downloaded, even user expected use it.- empty string: synonym auto value. default value different browser. spec advises set metadata .Note: - autoplay attribute precedence overpreload . Ifautoplay specified, browser would obviously need start downloading video playback. - specification force browser follow value attribute; mere hint. src - URL video embed. optional; may instead use <source> element within video block specify video embed. width - width video's display area, CSS pixels (absolute values only; percentages). Events | Event Name | Fired | |---|---| audioprocess Deprecated | input buffer ScriptProcessorNode ready processed. | canplay | browser play media, estimates enough data loaded play media end without stop buffering content. | canplaythrough | browser estimates play media end without stopping content buffering. | complete | rendering OfflineAudioContext terminated. | durationchange | duration attribute updated. | emptied | media become empty; example, event sent media already loaded (or partially loaded), load() method called reload it. | ended | Playback stopped end media reached. | error | error occurred fetching media data, type resource supported media format. | loadeddata | first frame media finished loading. | loadedmetadata | metadata loaded. | loadstart | Fired browser started load resource. | pause | Playback paused. | play | Playback begun. | playing | Playback ready start paused delayed due lack data. | progress | Fired periodically browser loads resource. | ratechange | playback rate changed. | seeked | seek operation completed. | seeking | seek operation began. | stalled | user agent trying fetch media data, data unexpectedly forthcoming. | suspend | Media data loading suspended. | timeupdate | time indicated currentTime attribute updated. | volumechange | volume changed. | waiting | Playback stopped temporary lack data. | Usage notes Browsers support video formats; provide multiple sources inside nested <source> elements, browser use first one understands. <video controls> <source src=\"myVideo.webm\" type=\"video/webm\" /> <source src=\"myVideo.mp4\" type=\"video/mp4\" /> <p> browser support HTML video. <a href=\"myVideo.mp4\" download=\"myVideo.mp4\">link video</a> instead. </p> </video> offer substantive thorough guide media file types guide codecs supported video. Also available guide audio codecs used them. usage notes: - specify controls attribute, video include browser's default controls; create custom controls using JavaScript theHTMLMediaElement API. See Creating cross-browser video player details. - allow precise control video (and audio) content, HTMLMediaElement fire many different events. addition providing controllability, events let monitor progress download playback media, well playback state position. - use object-position property adjust positioning video within element's frame, theobject-fit property control video's size adjusted fit within frame. - show subtitles/captions along video, use JavaScript along <track> element WebVTT format. See Adding captions subtitles HTML video information. - play audio files using <video> element. useful if, example, need perform audio WebVTT transcript, since the<audio> element allow captions using WebVTT. - test fallback content browsers support element, replace <video> non-existing element like<notavideo> . good general source information using HTML <video> HTML video audio beginner's tutorial. Styling CSS <video> element replaced element \u2014 display value inline default \u2014 default width height viewport defined video embedded. special considerations styling <video> ; common strategy give display value block make easier position, size, etc., provide styling layout information required. Video player styling basics provides useful styling techniques. Adding subtitles timed text tracks Timed text tracks subtitles, closed captions, chapter headings, on, added declaratively nesting <track> element. tracks specified Web Video Text Tracks File Format (WebVTT) (.vtt files). example, HTML includes file \"captions.vtt\", used overlay closed captions video captions enabled user. <video controls src=\"video.webm\"> <track default kind=\"captions\" src=\"captions.vtt\" /> </video> Timed text tracks also added programmatically using WebVTT API. Detecting track addition removal detect tracks added removed <video> element using addtrack removetrack events. However, events sent directly <video> element itself. Instead, they're sent track list object within <video> element's HTMLMediaElement corresponds type track added element: HTMLMediaElement.audioTracks - AudioTrackList containing media element's audio tracks. Add listener foraddtrack object notified new audio tracks added element. HTMLMediaElement.videoTracks - VideoTrackList containing media element's video tracks. Add anaddtrack listener object notified video tracks added element. HTMLMediaElement.textTracks - TextTrackList containing media element's text tracks (which used subtitles, closed captions, on). Add anaddtrack listener object notified text tracks added element. example, detect audio tracks added removed <video> element, use code like this: const elem = document.querySelector(\"video\"); elem.audioTracks.onaddtrack = (event) => { trackEditor.addTrack(event.track); }; elem.audioTracks.onremovetrack = (event) => { trackEditor.removeTrack(event.track); }; code watches audio tracks added removed element, calls hypothetical function track editor register remove track editor's list available tracks. also use addEventListener() listen addtrack removetrack events. Server support video MIME type video set correctly server, video may show show gray box containing X (if JavaScript enabled). use Apache Web Server serve WebM videos, fix problem adding video file type extensions video/webm MIME type (the common WebM file extension .webm ). this, edit mime.types file /etc/apache use AddType configuration directive httpd.conf : AddType video/webm .webm web host may provide easy interface MIME type configuration changes new technologies global update naturally occurs. Accessibility Videos provide captions transcripts accurately describe content (see Adding captions subtitles HTML video information implement these). Captions allow people experiencing hearing loss understand video's audio content video played, transcripts allow people need additional time able review audio content pace format comfortable them. worth noting caption audio-only media, playing audio <video> element since video region element used present captions. one special scenarios useful play audio video element. automatic captioning services used, important review generated content ensure accurately represents source video. addition spoken dialog, subtitles transcripts also identify music sound effects communicate important information. includes emotion tone: 14 00:03:14 --> 00:03:18 [Dramatic rock music] 15 00:03:19 --> 00:03:21 [whispering] What's distance? 16 00:03:22 --> 00:03:24 It's\u2026 a\u2026 16 00:03:25 --> 00:03:32 [Loud thumping] [Dishes clattering] Captions obstruct main subject video. positioned using align VTT cue setting. Examples Single source example plays video activated, providing user browser's default video controls control playback. HTML <!-- Basic video example --> <!-- 'Big Buck Bunny' licensed CC 3.0 Blender foundation. Hosted archive.org --> <!-- Poster peach.blender.org --> <video controls src=\"https://archive.org/download/BigBuckBunny_124/Content/big_buck_bunny_720p_surround.mp4\" poster=\"https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217\" width=\"620\"> Sorry, browser support embedded videos, worry, <a href=\"https://archive.org/details/BigBuckBunny_124\">download it</a> watch favorite video player! </video> Result video starts playing, image provided poster attribute displayed place. browser support video playback, displays fallback text. Multiple sources example builds last one, offering three different sources media; allows video watched regardless video codecs supported browser. HTML <!-- Using multiple sources fallbacks video tag --> <!-- 'Elephants Dream' Orange Open Movie Project Studio, licensed CC-3.0, hosted archive.org --> <!-- Poster hosted Wikimedia --> <video width=\"620\" controls poster=\"https://upload.wikimedia.org/wikipedia/commons/e/e8/Elephants_Dream_s5_both.jpg\"> <source src=\"https://archive.org/download/ElephantsDream/ed_hd.avi\" type=\"video/avi\" /> <source src=\"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\" type=\"video/mp4\" /> Sorry, browser support embedded videos, worry, <a href=\"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\" download=\"ed_1024_512kb.mp4\"> download MP4 </a> watch favorite video player! </video> Result First AVI tried. can't played, MP4 tried. fallback message displayed video element supported, sources fail. media file types let provide specific information using codecs parameter part file's type string. relatively simple example video/webm; codecs=\"vp8, vorbis\" , says file WebM video using VP8 video Vorbis audio. Technical summary | Content categories | Flow content, phrasing content, embedded content. controls attribute: interactive content palpable content. | |---|---| | Permitted content | element Else: zero | | Tag omission | None, starting ending tag mandatory. | | Permitted parents | element accepts embedded content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | application | | DOM interface | HTMLVideoElement | Specifications | Specification | |---| | HTML Standard # the-video-element | Browser compatibility BCD tables load browser See also - Positioning sizing picture within frame: object-position andobject-fit <audio>"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr", "title": "<wbr>: The Line Break Opportunity element - HTML: HyperText Markup Language | MDN", "text": "<wbr>: Line Break Opportunity element Baseline Widely available feature well established works across many devices browser versions. It\u2019s available across browsers since July 2015. <wbr> HTML element represents word break opportunity\u2014a position within text browser may optionally break line, though line-breaking rules would otherwise create break location. Try Attributes element includes global attributes. Notes UTF-8 encoded pages, <wbr> behaves like U+200B ZERO-WIDTH SPACE code point. particular, behaves like Unicode bidi BN code point, meaning effect bidi-ordering: <div dir=rtl>123,<wbr>456</div> displays, broken two lines, 123,456 456,123 . reason, <wbr> element introduce hyphen line break point. make hyphen appear end line, use soft hyphen character entity (\u00ad ) instead. Examples Yahoo Style Guide recommends breaking URL punctuation, avoid leaving punctuation mark end line, reader might mistake end URL. <p> http://this<wbr />.is<wbr />.a<wbr />.really<wbr />.long<wbr />.example<wbr />.com/With<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages<wbr />/deeper<wbr />/level<wbr />/pages </p> Result Technical summary | Content categories | Flow content, phrasing content. | |---|---| | Permitted content | Empty | | Tag omission | Must start tag must end tag. | | Permitted parents | element accepts phrasing content. | | Implicit ARIA role | corresponding role | | Permitted ARIA roles | | | DOM interface | HTMLElement | Specifications | Specification | |---| | HTML Standard # the-wbr-element | Browser compatibility BCD tables load browser See also overflow-wrap word-break hyphens - <br> element"},
{"source": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp", "title": "<xmp> - HTML: HyperText Markup Language | MDN", "text": "<xmp> Deprecated: feature longer recommended. Though browsers might still support it, may already removed relevant web standards, may process dropped, may kept compatibility purposes. Avoid using it, update existing code possible; see compatibility table bottom page guide decision. aware feature may cease work time. Summary <xmp> HTML element renders text start end tags without interpreting HTML using monospaced font. HTML2 specification recommended rendered wide enough allow 80 characters per line. Note: use element. - deprecated since HTML3.2 implemented consistent way. completely removed current HTML. - Use <pre> element or, semantically adequate, the<code> element instead. Note need escape the< character as< the& character as& make sure interpreted markup. - monospaced font also obtained element, applying adequate CSS style using monospace generic-font value thefont-family property. Attributes element attributes global attributes, common elements. DOM interface element implements HTMLElement interface. Specifications | Specification | |---| | HTML Standard # xmp | Browser compatibility BCD tables load browser See also - <pre> and<code> elements used instead. - <plaintext> element, similar to<xmp> also obsolete."}]